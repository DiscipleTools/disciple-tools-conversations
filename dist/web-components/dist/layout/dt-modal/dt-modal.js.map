{"version":3,"file":"dt-modal.js","sources":["../../../src/components/layout/dt-modal/dt-modal.js"],"sourcesContent":["import { html, css } from 'lit';\nimport { msg } from '@lit/localize';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport DtBase from '../../dt-base.js';\n\nexport class DtModal extends DtBase {\n  static get styles() {\n    return css`\n      :host {\n        display: block;\n        font-family: var(--font-family);\n      }\n      :host:has(dialog[open]) {\n        overflow: hidden;\n      }\n\n      .dt-modal {\n        display: block;\n        background: var(--dt-modal-background-color, #fff);\n        color: var(--dt-modal-color, #000);\n        max-inline-size: min(90vw, 100%);\n        max-block-size: min(80vh, 100%);\n        max-block-size: min(80dvb, 100%);\n        margin: auto;\n        height: fit-content;\n        padding: var(--dt-modal-padding, 1em);\n        position: fixed;\n        inset: 0;\n        border-radius: 1em;\n        border: none;\n        box-shadow: var(--shadow-6);\n        z-index: 1000;\n        transition: opacity 0.1s ease-in-out;\n      }\n\n      dialog:not([open]) {\n        pointer-events: none;\n        opacity: 0;\n      }\n\n      dialog::backdrop {\n        background: var(--dt-modal-backdrop-color, rgba(0, 0, 0, 0.25));\n        animation: var(--dt-modal-animation, fade-in 0.75s);\n      }\n\n      @keyframes fade-in {\n        from {\n          opacity: 0;\n        }\n        to {\n          opacity: 1;\n        }\n      }\n\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        line-height: 1.4;\n        text-rendering: optimizeLegibility;\n        color: inherit;\n        font-style: normal;\n        font-weight: 300;\n        margin: 0;\n      }\n\n      form {\n        display: grid;\n        height: fit-content;\n        grid-template-columns: 1fr;\n        grid-template-rows: 100px auto 100px;\n        grid-template-areas:\n          'header'\n          'main'\n          'footer';\n        position: relative;\n      }\n\n      form.no-header {\n        grid-template-rows: auto auto;\n        grid-template-areas:\n          'main'\n          'footer';\n      }\n\n      header {\n        grid-area: header;\n        display: flex;\n        justify-content: space-between;\n      }\n\n      .button {\n        color: var(--dt-modal-button-color, #fff);\n        background: var(--dt-modal-button-background, #000);\n        font-size: 1rem;\n        border: 0.1em solid var(--dt-modal-button-background, #000);\n        border-radius: 0.25em;\n        padding: 0.25rem 0.5rem;\n        cursor: pointer;\n        text-decoration: none;\n      }\n      .button.opener {\n        color: var(--dt-modal-button-opener-color,var(--dt-modal-button-color, #fff) );\n        background: var(--dt-modal-button-opener-background, var(--dt-modal-button-background, #000) );\n        border: 0.1em solid var(--dt-modal-button-opener-background, #000);\n      }\n      button.toggle {\n        margin-inline-end: 0;\n        margin-inline-start: auto;\n        background: none;\n        border: none;\n        color: inherit;\n        cursor: pointer;\n        display: flex;\n        align-items: flex-start;\n      }\n\n      article {\n        grid-area: main;\n        overflow: auto;\n      }\n\n      footer {\n        grid-area: footer;\n        display: flex;\n        justify-content: space-between;\n      }\n\n      .help-more h5 {\n        font-size: 0.75rem;\n        display: block;\n      }\n      .help-more .button {\n        font-size: 0.75rem;\n        display: block;\n      }\n    `;\n  }\n\n  static get properties() {\n    return {\n      title: { type: String },\n      context: { type: String },\n      isHelp: { type: Boolean },\n      isOpen: { type: Boolean },\n      hideHeader: { type: Boolean },\n      hideButton: { type: Boolean },\n      buttonClass: { type: Object },\n      buttonStyle: { type: Object },\n    };\n  }\n\n  constructor() {\n    super();\n    this.context = 'default';\n    this.addEventListener('open', (e) => this._openModal());\n    this.addEventListener('close', (e) => this._closeModal());\n  }\n\n  _openModal() {\n    this.isOpen = true;\n    this.shadowRoot.querySelector('dialog').showModal();\n\n    document.querySelector('body').style.overflow = \"hidden\"\n  }\n\n  _dialogHeader(svg) {\n    if (!this.hideHeader) {\n      return html`\n      <header>\n            <h1 id=\"modal-field-title\">${this.title}</h1>\n            <button @click=\"${this._cancelModal}\" class=\"toggle\">${svg}</button>\n          </header>\n      `;\n    }\n    return html``;\n  }\n\n  _closeModal() {\n    this.isOpen = false;\n    this.shadowRoot.querySelector('dialog').close();\n    document.querySelector('body').style.overflow = \"initial\"\n  }\n  _cancelModal() {\n    this._triggerClose('cancel');\n  }\n  _triggerClose(action) {\n    this.dispatchEvent(new CustomEvent('close', {\n      detail: {\n        action,\n      },\n    }));\n  }\n\n  _dialogClick(e) {\n    if (e.target.tagName !== 'DIALOG') {\n      // This prevents issues with forms\n      return;\n    }\n\n    // Close the modal if the user clicks outside of the modal\n    const rect = e.target.getBoundingClientRect();\n\n    const clickedInDialog =\n      rect.top <= e.clientY &&\n      e.clientY <= rect.top + rect.height &&\n      rect.left <= e.clientX &&\n      e.clientX <= rect.left + rect.width;\n\n    if (clickedInDialog === false) {\n      this._cancelModal();\n    }\n  }\n\n  _dialogKeypress(e) {\n    if (e.key === 'Escape') {\n      this._cancelModal();\n    }\n  }\n\n  _helpMore() {\n    return this.isHelp\n      ? html`\n          <div class=\"help-more\">\n            <h5>${msg('Need more help?')}</h5>\n            <a\n              class=\"button small\"\n              id=\"docslink\"\n              href=\"https://disciple.tools/user-docs\"\n              target=\"_blank\"\n              >${msg('Read the documentation')}</a\n            >\n          </div>\n        `\n      : null;\n  }\n\n  firstUpdated() {\n    if (this.isOpen) {\n      this._openModal();\n    }\n  }\n\n  _onButtonClick() {\n    this._triggerClose('button');\n  }\n\n  render() {\n    // prettier-ignore\n    const svg = html`\n      <svg viewPort=\"0 0 12 12\" version=\"1.1\" width='12' height='12'>\n          xmlns=\"http://www.w3.org/2000/svg\">\n        <line x1=\"1\" y1=\"11\"\n              x2=\"11\" y2=\"1\"\n              stroke=\"currentColor\"\n              stroke-width=\"2\"/>\n        <line x1=\"1\" y1=\"1\"\n              x2=\"11\" y2=\"11\"\n              stroke=\"currentColor\"\n              stroke-width=\"2\"/>\n      </svg>\n    `;\n    return html`\n      <dialog\n        id=\"\"\n        class=\"dt-modal\"\n        @click=${this._dialogClick}\n        @keypress=${this._dialogKeypress}\n      >\n        <form method=\"dialog\" class=${this.hideHeader ? \"no-header\" : \"\"}>\n      ${this._dialogHeader(svg)}\n          <article>\n            <slot name=\"content\"></slot>\n          </article>\n          <footer>\n            <button\n              class=\"button small\"\n              data-close=\"\"\n              aria-label=\"Close reveal\"\n              type=\"button\"\n              @click=${this._onButtonClick}\n            >\n              <slot name=\"close-button\">${msg('Close')}</slot>\n            </button>\n            ${this._helpMore()}\n          </footer>\n        </form>\n      </dialog>\n\n      ${!this.hideButton\n      ? html`\n      <button\n        class=\"button small opener ${classMap(this.buttonClass || {})}\"\n        data-open=\"\"\n        aria-label=\"Open reveal\"\n        type=\"button\"\n        @click=\"${this._openModal}\"\n        style=${styleMap(this.buttonStyle || {})}\n      >\n        <slot name=\"openButton\">${msg('Open Dialog')}</slot>\n      </button>\n      ` : null}\n    `;\n  }\n}\n\nwindow.customElements.define('dt-modal', DtModal);\n"],"names":["window","customElements","define","DtBase","styles","css","properties","title","type","String","context","isHelp","Boolean","isOpen","hideHeader","hideButton","buttonClass","Object","buttonStyle","constructor","super","this","addEventListener","e","_openModal","_closeModal","shadowRoot","querySelector","showModal","document","style","overflow","_dialogHeader","svg","html","_cancelModal","close","_triggerClose","action","dispatchEvent","CustomEvent","detail","_dialogClick","target","tagName","rect","getBoundingClientRect","top","clientY","height","left","clientX","width","_dialogKeypress","key","_helpMore","msg","firstUpdated","_onButtonClick","render","classMap","styleMap"],"mappings":"gRAqTAA,OAAOC,eAAeC,OAAO,WA/StB,cAAsBC,EAChBC,oBACT,OAAOC,CAAG,g8DAoIX,CAEUC,wBACT,MAAO,CACLC,MAAO,CAAEC,KAAMC,QACfC,QAAS,CAAEF,KAAMC,QACjBE,OAAQ,CAAEH,KAAMI,SAChBC,OAAQ,CAAEL,KAAMI,SAChBE,WAAY,CAAEN,KAAMI,SACpBG,WAAY,CAAEP,KAAMI,SACpBI,YAAa,CAAER,KAAMS,QACrBC,YAAa,CAAEV,KAAMS,QAExB,CAEDE,cACEC,QACAC,KAAKX,QAAU,UACfW,KAAKC,iBAAiB,QAASC,GAAMF,KAAKG,eAC1CH,KAAKC,iBAAiB,SAAUC,GAAMF,KAAKI,eAC5C,CAEDD,aACEH,KAAKR,QAAS,EACdQ,KAAKK,WAAWC,cAAc,UAAUC,YAExCC,SAASF,cAAc,QAAQG,MAAMC,SAAW,QACjD,CAEDC,cAAcC,GACZ,OAAKZ,KAAKP,WAQHoB,CAAI,GAPFA,CAAI,sCAEwBb,KAAKd,6BAChBc,KAAKc,gCAAgCF,qBAKhE,CAEDR,cACEJ,KAAKR,QAAS,EACdQ,KAAKK,WAAWC,cAAc,UAAUS,QACxCP,SAASF,cAAc,QAAQG,MAAMC,SAAW,SACjD,CACDI,eACEd,KAAKgB,cAAc,SACpB,CACDA,cAAcC,GACZjB,KAAKkB,cAAc,IAAIC,YAAY,QAAS,CAC1CC,OAAQ,CACNH,YAGL,CAEDI,aAAanB,GACX,GAAyB,WAArBA,EAAEoB,OAAOC,QAEX,OAIF,MAAMC,EAAOtB,EAAEoB,OAAOG,yBAQE,KALtBD,EAAKE,KAAOxB,EAAEyB,SACdzB,EAAEyB,SAAWH,EAAKE,IAAMF,EAAKI,QAC7BJ,EAAKK,MAAQ3B,EAAE4B,SACf5B,EAAE4B,SAAWN,EAAKK,KAAOL,EAAKO,QAG9B/B,KAAKc,cAER,CAEDkB,gBAAgB9B,GACA,WAAVA,EAAE+B,KACJjC,KAAKc,cAER,CAEDoB,YACE,OAAOlC,KAAKV,OACRuB,CAAI,8BAEMsB,EAAI,wHAMLA,EAAI,sCAIb,IACL,CAEDC,eACMpC,KAAKR,QACPQ,KAAKG,YAER,CAEDkC,iBACErC,KAAKgB,cAAc,SACpB,CAEDsB,SAEE,MAAM1B,EAAMC,CAAI,mQAahB,OAAOA,CAAI,oCAIEb,KAAKqB,4BACFrB,KAAKgC,iDAEahC,KAAKP,WAAa,YAAc,OAC9DO,KAAKW,cAAcC,uJAUJZ,KAAKqC,6CAEcF,EAAI,4BAEhCnC,KAAKkC,uCAKVlC,KAAKN,WAYJ,KAXFmB,CAAI,sCAEyB0B,EAASvC,KAAKL,aAAe,CAAE,mEAIlDK,KAAKG,sBACPqC,EAASxC,KAAKH,aAAe,gCAEXsC,EAAI,kCAInC"}