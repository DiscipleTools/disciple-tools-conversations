var WebComponentServices=function(t){"use strict";class e{constructor(t,e="/wp-json"){this.nonce=t,this.apiRoot=e.endsWith("/")?`${e}`:`${e} + "/"`,this.apiRoot=`/${e}/`.replace(/\/\//g,"/")}async makeRequest(t,e,s,a="dt/v1/"){let n=a;n.endsWith("/")||e.startsWith("/")||(n+="/");const o=e.startsWith("http")?e:`${this.apiRoot}${n}${e}`,r={method:t,credentials:"same-origin",headers:{"Content-Type":"application/json","X-WP-Nonce":this.nonce}};"GET"!==t&&(r.body=JSON.stringify(s));const i=await fetch(o,r),c=await i.json();if(!i.ok){const t=new Error(c?.message||c.toString());throw t.args={status:i.status,statusText:i.statusText,body:c},t}return c}async makeRequestOnPosts(t,e,s={}){return this.makeRequest(t,e,s,"dt-posts/v2/")}async getPost(t,e){return this.makeRequestOnPosts("GET",`${t}/${e}`)}async createPost(t,e){return this.makeRequestOnPosts("POST",t,e)}async updatePost(t,e,s){return this.makeRequestOnPosts("POST",`${t}/${e}`,s)}async deletePost(t,e){return this.makeRequestOnPosts("DELETE",`${t}/${e}`)}async listPostsCompact(t,e=""){const s=new URLSearchParams({s:e});return this.makeRequestOnPosts("GET",`${t}/compact?${s}`)}async getPostDuplicates(t,e,s){return this.makeRequestOnPosts("GET",`${t}/${e}/all_duplicates`,s)}async checkFieldValueExists(t,e){return this.makeRequestOnPosts("POST",`${t}/check_field_value_exists`,e)}async getMultiSelectValues(t,e,s=""){const a=new URLSearchParams({s,field:e});return this.makeRequestOnPosts("GET",`${t}/multi-select-values?${a}`)}async transferContact(t,e){return this.makeRequestOnPosts("POST","contacts/transfer",{contact_id:t,site_post_id:e})}async transferContactSummaryUpdate(t,e){return this.makeRequestOnPosts("POST","contacts/transfer/summary/send-update",{contact_id:t,update:e})}async requestRecordAccess(t,e,s){return this.makeRequestOnPosts("POST",`${t}/${e}/request_record_access`,{user_id:s})}async createComment(t,e,s,a="comment"){return this.makeRequestOnPosts("POST",`${t}/${e}/comments`,{comment:s,comment_type:a})}async updateComment(t,e,s,a,n="comment"){return this.makeRequestOnPosts("POST",`${t}/${e}/comments/${s}`,{comment:a,comment_type:n})}async deleteComment(t,e,s){return this.makeRequestOnPosts("DELETE",`${t}/${e}/comments/${s}`)}async getComments(t,e){return this.makeRequestOnPosts("GET",`${t}/${e}/comments`)}async toggle_comment_reaction(t,e,s,a,n){return this.makeRequestOnPosts("POST",`${t}/${e}/comments/${s}/react`,{user_id:a,reaction:n})}async getPostActivity(t,e){return this.makeRequestOnPosts("GET",`${t}/${e}/activity`)}async getSingleActivity(t,e,s){return this.makeRequestOnPosts("GET",`${t}/${e}/activity/${s}`)}async revertActivity(t,e,s){return this.makeRequestOnPosts("GET",`${t}/${e}/revert/${s}`)}async getPostShares(t,e){return this.makeRequestOnPosts("GET",`${t}/${e}/shares`)}async addPostShare(t,e,s){return this.makeRequestOnPosts("POST",`${t}/${e}/shares`,{user_id:s})}async removePostShare(t,e,s){return this.makeRequestOnPosts("DELETE",`${t}/${e}/shares`,{user_id:s})}async getFilters(){return this.makeRequest("GET","users/get_filters")}async saveFilters(t,e){return this.makeRequest("POST","users/save_filters",{filter:e,postType:t})}async deleteFilter(t,e){return this.makeRequest("DELETE","users/save_filters",{id:e,postType:t})}async searchUsers(t="",e){const s=new URLSearchParams({s:t});return this.makeRequest("GET",`users/get_users?${s}&post_type=${e}`)}async checkDuplicateUsers(t,e){return this.makeRequestOnPosts("GET",`${t}/${e}/duplicates`)}async getContactInfo(t,e){return this.makeRequestOnPosts("GET",`${t}/${e}/`)}async createUser(t){return this.makeRequest("POST","users/create",t)}async advanced_search(t,e,s,a){return this.makeRequest("GET","advanced_search",{query:t,postType:e,offset:s,post:a.post,comment:a.comment,meta:a.meta,status:a.status},"dt-posts/v2/posts/search/")}}class s{constructor(t,s,a,n="wp-json"){this.postType=t,this.postId=s,this.nonce=a,this.apiRoot=`${n}/`.replace("//","/"),this.api=new e(this.nonce,this.apiRoot),this.autoSaveComponents=["dt-connection","dt-date","dt-location","dt-multi-select","dt-number","dt-single-select","dt-tags","dt-text","dt-textarea","dt-toggle","dt-comm-channel","dt-multiselect-buttons-group","dt-button","dt-users-connection"],this.dynamicLoadComponents=["dt-connection","dt-tags","dt-users-connection","dt-modal","dt-button"]}initialize(){this.postId&&this.enableAutoSave();const t=document.querySelector("dt-button#create-post-button");t&&t.addEventListener("send-data",this.processFormSubmission.bind(this)),this.attachLoadEvents()}async attachLoadEvents(t){const e=document.querySelectorAll(t||this.dynamicLoadComponents.join(",")),s=Array.from(e).filter((t=>"dt-modal"===t.tagName.toLowerCase()&&t.classList.contains("duplicate-detected")));s.length>0&&this.checkDuplicates(e,s),e&&e.forEach((t=>t.addEventListener("dt:get-data",this.handleGetDataEvent.bind(this))))}async checkDuplicates(t,e){const s=document.querySelector("dt-modal.duplicate-detected");if(s){const t=s.shadowRoot.querySelector(".duplicates-detected-button");t&&(t.style.display="none");const a=await this.api.checkDuplicateUsers(this.postType,this.postId);e&&a.ids.length>0&&t&&(t.style.display="block")}}enableAutoSave(t){const e=document.querySelectorAll(t||this.autoSaveComponents.join(","));e&&e.forEach((t=>{t.addEventListener("change",this.handleChangeEvent.bind(this)),"dt-button"===t.tagName.toLowerCase()&&t.addEventListener("customClick",this.handleCustomClickEvent.bind(this))}))}async processFormSubmission(t){const e=t.detail,{newValue:s}=e;try{const e=await this.api.createPost(this.postType,s.el);e&&(window.location=e.permalink),t.target.removeAttribute("loading"),t.target.setAttribute("error",""),t.target.setAttribute("saved",!0)}catch(e){console.error(e),t.target.removeAttribute("loading"),t.target.setAttribute("invalid",!0),t.target.setAttribute("error",e.message||e.toString())}}async handleGetDataEvent(t){const e=t.detail;if(e){const{field:s,query:a,onSuccess:n,onError:o}=e;try{const o=t.target.tagName.toLowerCase();let r=[];switch(o){case"dt-button":r=await this.api.getContactInfo(this.postType,this.postId);break;case"dt-connection":{const t=e.postType||this.postType,s=await this.api.listPostsCompact(t,a),n={...s,posts:s.posts.filter((t=>t.ID!==parseInt(this.postId,10)))};n?.posts&&(r=n?.posts.map((t=>({id:t.ID,label:t.name,link:t.permalink,status:t.status}))));break}case"dt-users-connection":{const t=e.postType||this.postType;r=(await this.api.searchUsers(a,t)).map((t=>({id:t.ID,label:t.name,avatar:t.avatar,status:t.status_color})));break}default:r=await this.api.getMultiSelectValues(this.postType,s,a),r=r.map((t=>({id:t,label:t})))}n(r)}catch(t){o(t)}}}async handleCustomClickEvent(t){const e=t.detail;if(e){const{field:s,toggleState:a}=e;let n;switch(t.target.setAttribute("loading",!0),s){case"favorite-button":n={favorite:a};break;case"following-button":case"follow-button":n={follow:{values:[{value:"1",delete:a}]},unfollow:{values:[{value:"1",delete:!a}]}}}try{await this.api.updatePost(this.postType,this.postId,n)}catch(e){console.error(e),t.target.removeAttribute("loading"),t.target.setAttribute("invalid",!0),t.target.setAttribute("error",e.message||e.toString())}}}async handleChangeEvent(t){const e=t.detail;if(e){const{field:a,newValue:n,oldValue:o,remove:r}=e,i=t.target.tagName.toLowerCase(),c=s.convertValue(i,n,o);t.target.setAttribute("loading",!0);try{switch(i){case"dt-users-connection":if(!0===r){await this.api.removePostShare(this.postType,this.postId,c);break}await this.api.addPostShare(this.postType,this.postId,c);break;default:{const t=await this.api.updatePost(this.postType,this.postId,{[a]:c});"dt-comm-channel"===i&&e.onSuccess&&e.onSuccess(t);break}}t.target.removeAttribute("loading"),t.target.setAttribute("error",""),t.target.setAttribute("saved",!0)}catch(e){console.error(e),t.target.removeAttribute("loading"),t.target.setAttribute("invalid",!0),t.target.setAttribute("error",e.message||e.toString())}}}static convertValue(t,e,s){let a=e;if(e)switch(t){case"dt-toggle":"string"==typeof e&&(a="true"===e.toLowerCase());break;case"dt-multi-select":case"dt-tags":"string"==typeof e&&(a=[e]),a={values:a.map((t=>{const e={value:t.replace("-","")};return t.startsWith("-")&&(e.delete=!0),e})),force_values:!1};break;case"dt-users-connection":{const t=[],e=new Map(s.map((t=>[t.id,t])));for(const s of a){const a=e.get(s.id),n={id:s.id,changes:{}};if(!a){n.changes={...s},t.push(n);break}{let e=!1;const o=new Set([...Object.keys(a),...Object.keys(s)]);for(const t of o)s[t]!==a[t]&&(n.changes[t]=Object.prototype.hasOwnProperty.call(s,t)?s[t]:void 0,e=!0);if(e){t.push(n);break}}}a=t[0].id;break}case"dt-connection":case"dt-location":"string"==typeof e&&(a=[{id:e}]),a={values:a.map((t=>{const e={value:t.id};return t.delete&&(e.delete=t.delete),e})),force_values:!1};break;case"dt-multiselect-buttons-group":"string"==typeof e&&(a=[{id:e}]),a={values:a.map((t=>{if(t.value.startsWith("-")){return{value:t.value.replace("-",""),delete:!0}}return t})),force_values:!1};break;case"dt-comm-channel":{const t=e.length;s&&!0===s.delete?a=[s]:""===e[t-1].key||e[t-1].key.startsWith("new-contact")?(a=[],e.forEach((t=>{a.push({value:t.value})}))):a=e;break}}return a}}return t.ApiService=e,t.ComponentService=s,Object.defineProperty(t,"__esModule",{value:!0}),t}({});
