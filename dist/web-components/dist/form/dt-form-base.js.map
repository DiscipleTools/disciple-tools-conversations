{"version":3,"file":"dt-form-base.js","sources":["../../src/components/form/dt-form-base.js"],"sourcesContent":["import { css, html } from 'lit';\nimport DtBase from '../dt-base.js';\nimport 'element-internals-polyfill'; // eslint-disable-line import/no-extraneous-dependencies\nimport './dt-label/dt-label.js';\n\nexport default class DtFormBase extends DtBase {\n  static get formAssociated() {\n    return true;\n  }\n\n  static get styles() {\n    return [\n      css`\n        .input-group {\n          position: relative;\n        }\n        .input-group.disabled {\n          background-color: var(--disabled-color);\n        }\n\n        /* === Inline Icons === */\n        .icon-overlay {\n          position: absolute;\n          inset-inline-end: 2rem;\n          top: 0;\n          height: 100%;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n        }\n\n        .icon-overlay.alert {\n          color: var(--alert-color);\n          cursor: pointer;\n        }\n        .icon-overlay.success {\n          color: var(--success-color);\n        }\n      `,\n    ];\n  }\n\n  static get properties() {\n    return {\n      ...super.properties,\n      name: { type: String },\n      label: { type: String },\n      icon: { type: String },\n      iconAltText: { type: String },\n      private: { type: Boolean },\n      privateLabel: { type: String },\n      disabled: { type: Boolean },\n      required: { type: Boolean },\n      requiredMessage: { type: String },\n      touched: {\n        type: Boolean,\n        state: true,\n      },\n      invalid: {\n        type: Boolean,\n        state: true,\n      },\n      error: { type: String },\n      loading: { type: Boolean },\n      saved: { type: Boolean },\n    };\n  }\n\n  /**\n   * return the field elemnt\n   */\n  get _field() {\n    return this.shadowRoot.querySelector('input, textarea, select');\n  }\n\n  /**\n   * return the element to proxy focus to\n   */\n  get _focusTarget() {\n    return this._field;\n  }\n\n  constructor() {\n    super();\n    this.touched = false;\n    this.invalid = false;\n    this.internals = this.attachInternals();\n\n    // catch oninvalid event (when validation is triggered from form submit)\n    // and set touched=true so that styles are shown\n    this.addEventListener('invalid', () => {\n      this.touched = true;\n      this._validateRequired();\n    });\n  }\n\n  firstUpdated(...args) {\n    super.firstUpdated(...args);\n\n    // set initial form value\n    const formdata = DtFormBase._jsonToFormData(this.value, this.name);\n    this.internals.setFormValue(formdata);\n    this._validateRequired();\n  }\n\n  /**\n   * Recursively create FormData from JSON data\n   * @param formData\n   * @param data\n   * @param parentKey\n   * @private\n   */\n  static _buildFormData(formData, data, parentKey) {\n    if (data && typeof data === 'object' && !(data instanceof Date) && !(data instanceof File)) {\n      Object.keys(data).forEach(key => {\n        this._buildFormData(formData, data[key], parentKey ? `${parentKey}[${key}]` : key);\n      });\n    } else {\n      const value = data == null ? '' : data;\n      formData.append(parentKey, value);\n    }\n  }\n\n  /**\n   * Convert JSON to FormData object\n   * @param data\n   * @param parentKey - prefix for all values. Should be the field name\n   * @returns {FormData}\n   * @private\n   */\n  static _jsonToFormData(data, parentKey) {\n    const formData = new FormData();\n    DtFormBase._buildFormData(formData, data, parentKey);\n    return formData;\n  }\n\n  _setFormValue(value) {\n    // handle complex types like arrays and objects by converting to FormData\n    const formdata = DtFormBase._jsonToFormData(value, this.name);\n    this.internals.setFormValue(formdata, value);\n    this._validateRequired();\n    this.touched = true;\n  }\n\n  /* eslint-disable class-methods-use-this */\n  /**\n   * Can/should be overriden by each component to implement logic for checking if a value is entered/selected\n   * @private\n   */\n  _validateRequired() {\n    // const { value } = this;\n    // const input = this.shadowRoot.querySelector('input');\n    // if (value === '' && this.required) {\n    //   this.invalid = true;\n    //   this.internals.setValidity({\n    //     valueMissing: true\n    //   }, this.requiredMessage || 'This field is required', input);\n    // } else {\n    //   this.invalid = false;\n    //   this.internals.setValidity({});\n    // }\n  }\n  /* eslint-enable class-methods-use-this */\n\n  labelTemplate() {\n    if (!this.label) {\n      return '';\n    }\n\n    return html`\n      <dt-label\n        ?private=${this.private}\n        privateLabel=\"${this.privateLabel}\"\n        iconAltText=\"${this.iconAltText}\"\n        icon=\"${this.icon}\"\n      >\n        ${!this.icon\n          ? html`<slot name=\"icon-start\" slot=\"icon-start\"></slot>`\n          : null}\n        ${this.label}\n      </dt-label>\n    `;\n  }\n\n  render() {\n    return html`\n      ${this.labelTemplate()}\n      <slot></slot>\n    `;\n  }\n}\n"],"names":["DtFormBase","DtBase","formAssociated","styles","css","properties","super","name","type","String","label","icon","iconAltText","private","Boolean","privateLabel","disabled","required","requiredMessage","touched","state","invalid","error","loading","saved","_field","this","shadowRoot","querySelector","_focusTarget","constructor","internals","attachInternals","addEventListener","_validateRequired","firstUpdated","args","formdata","_jsonToFormData","value","setFormValue","static","formData","data","parentKey","Date","File","append","Object","keys","forEach","key","_buildFormData","FormData","_setFormValue","labelTemplate","html","render"],"mappings":"2JAKe,MAAMA,UAAmBC,EAC3BC,4BACT,OAAO,CACR,CAEUC,oBACT,MAAO,CACLC,CAAG,2UA4BN,CAEUC,wBACT,MAAO,IACFC,MAAMD,WACTE,KAAM,CAAEC,KAAMC,QACdC,MAAO,CAAEF,KAAMC,QACfE,KAAM,CAAEH,KAAMC,QACdG,YAAa,CAAEJ,KAAMC,QACrBI,QAAS,CAAEL,KAAMM,SACjBC,aAAc,CAAEP,KAAMC,QACtBO,SAAU,CAAER,KAAMM,SAClBG,SAAU,CAAET,KAAMM,SAClBI,gBAAiB,CAAEV,KAAMC,QACzBU,QAAS,CACPX,KAAMM,QACNM,OAAO,GAETC,QAAS,CACPb,KAAMM,QACNM,OAAO,GAETE,MAAO,CAAEd,KAAMC,QACfc,QAAS,CAAEf,KAAMM,SACjBU,MAAO,CAAEhB,KAAMM,SAElB,CAKGW,aACF,OAAOC,KAAKC,WAAWC,cAAc,0BACtC,CAKGC,mBACF,OAAOH,KAAKD,MACb,CAEDK,cACExB,QACAoB,KAAKP,SAAU,EACfO,KAAKL,SAAU,EACfK,KAAKK,UAAYL,KAAKM,kBAItBN,KAAKO,iBAAiB,WAAW,KAC/BP,KAAKP,SAAU,EACfO,KAAKQ,mBAAmB,GAE3B,CAEDC,gBAAgBC,GACd9B,MAAM6B,gBAAgBC,GAGtB,MAAMC,EAAWrC,EAAWsC,gBAAgBZ,KAAKa,MAAOb,KAAKnB,MAC7DmB,KAAKK,UAAUS,aAAaH,GAC5BX,KAAKQ,mBACN,CASDO,sBAAsBC,EAAUC,EAAMC,GACpC,IAAID,GAAwB,iBAATA,GAAuBA,aAAgBE,MAAWF,aAAgBG,KAI9E,CACL,MAAMP,EAA4BI,GAAL,GAC7BD,EAASK,OAAOH,EAAWL,EAC5B,MANCS,OAAOC,KAAKN,GAAMO,SAAQC,IACxBzB,KAAK0B,eAAeV,EAAUC,EAAKQ,GAAMP,EAAY,GAAGA,KAAaO,KAASA,EAAI,GAMvF,CASDV,uBAAuBE,EAAMC,GAC3B,MAAMF,EAAW,IAAIW,SAErB,OADArD,EAAWoD,eAAeV,EAAUC,EAAMC,GACnCF,CACR,CAEDY,cAAcf,GAEZ,MAAMF,EAAWrC,EAAWsC,gBAAgBC,EAAOb,KAAKnB,MACxDmB,KAAKK,UAAUS,aAAaH,EAAUE,GACtCb,KAAKQ,oBACLR,KAAKP,SAAU,CAChB,CAODe,oBAYC,CAGDqB,gBACE,OAAK7B,KAAKhB,MAIH8C,CAAI,uBAEI9B,KAAKb,0BACAa,KAAKX,8BACNW,KAAKd,sBACZc,KAAKf,SAEVe,KAAKf,KAEJ,KADA6C,CAAI,uDAEN9B,KAAKhB,mBAbF,EAgBV,CAED+C,SACE,OAAOD,CAAI,GACP9B,KAAK6B,8BAGV"}