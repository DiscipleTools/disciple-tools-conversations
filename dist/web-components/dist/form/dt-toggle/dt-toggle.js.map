{"version":3,"file":"dt-toggle.js","sources":["../../../src/components/form/dt-toggle/dt-toggle.js"],"sourcesContent":["import { html, css } from 'lit';\nimport DtFormBase from '../dt-form-base.js';\n\nexport class DtToggle extends DtFormBase {\n  static get styles() {\n    return [\n      ...super.styles,\n      css`\n        :host {\n          display: inline-block;\n        }\n\n        .Toggle {\n          display: flex;\n          flex-wrap: wrap;\n          align-items: center;\n          position: relative;\n          margin-bottom: 1em;\n          cursor: pointer;\n          gap: 1ch;\n        }\n\n        button.Toggle {\n          border: 0;\n          padding: 0;\n          background-color: transparent;\n          font: inherit;\n        }\n\n        .Toggle__input {\n          position: absolute;\n          opacity: 0;\n          width: 100%;\n          height: 100%;\n        }\n\n        .Toggle__display {\n          --offset: 0.25em;\n          --diameter: 1.2em;\n\n          display: inline-flex;\n          align-items: center;\n          justify-content: space-around;\n          box-sizing: content-box;\n          width: calc(var(--diameter) * 2 + var(--offset) * 2);\n          height: calc(var(--diameter) + var(--offset) * 2);\n          border: 0.1em solid rgb(0 0 0 / 0.2);\n          position: relative;\n          border-radius: 100vw;\n          background-color: var(--dt-toggle-background-color-off, #ecf5fc);\n          transition: 250ms;\n        }\n\n        .Toggle__display::before {\n          content: '';\n          z-index: 2;\n          position: absolute;\n          top: 50%;\n          left: var(--offset);\n          box-sizing: border-box;\n          width: var(--diameter);\n          height: var(--diameter);\n          border: 0.1em solid rgb(0 0 0 / 0.2);\n          border-radius: 50%;\n          background-color: white;\n          transform: translate(0, -50%);\n          will-change: transform;\n          transition: inherit;\n        }\n\n        .Toggle:focus .Toggle__display,\n        .Toggle__input:focus + .Toggle__display {\n          outline: 1px dotted #212121;\n          outline: 1px auto -webkit-focus-ring-color;\n          outline-offset: 2px;\n        }\n\n        .Toggle:focus,\n        .Toggle:focus:not(:focus-visible) .Toggle__display,\n        .Toggle__input:focus:not(:focus-visible) + .Toggle__display {\n          outline: 0;\n        }\n\n        .Toggle[aria-pressed='true'] .Toggle__display,\n        .Toggle__input:checked + .Toggle__display {\n          background-color: var(--primary-color);\n        }\n\n        .Toggle[aria-pressed='true'] .Toggle__display::before,\n        .Toggle__input:checked + .Toggle__display::before {\n          transform: translate(100%, -50%);\n        }\n\n        .Toggle[disabled] .Toggle__display,\n        .Toggle__input:disabled + .Toggle__display {\n          opacity: 0.6;\n          filter: grayscale(40%);\n          cursor: not-allowed;\n        }\n        [dir='rtl'] .Toggle__display::before {\n          left: auto;\n          right: var(--offset);\n        }\n\n        [dir='rtl'] .Toggle[aria-pressed='true'] + .Toggle__display::before,\n        [dir='rtl'] .Toggle__input:checked + .Toggle__display::before {\n          transform: translate(-100%, -50%);\n        }\n\n        .Toggle__icon {\n          display: inline-block;\n          width: 1em;\n          height: 1em;\n          color: inherit;\n          fill: currentcolor;\n          vertical-align: middle;\n          overflow: hidden;\n        }\n\n        .Toggle__icon--cross {\n          color: var(--alert-color);\n          font-size: 65%;\n        }\n\n        .Toggle__icon--checkmark {\n          color: var(--success-color);\n        }\n      `,\n    ];\n  }\n\n  static get properties() {\n    return {\n      ...super.properties,\n      id: { type: String },\n      checked: {\n        type: Boolean,\n        reflect: true,\n      },\n      onchange: { type: String },\n      hideIcons: { type: Boolean, default: true },\n    };\n  }\n\n  constructor() {\n    super();\n    this.hideIcons = false;\n  }\n\n  onChange(e) {\n    const event = new CustomEvent('change', {\n      detail: {\n        field: this.name,\n        oldValue: this.checked,\n        newValue: e.target.checked,\n      },\n    });\n    this.checked = e.target.checked;\n\n    this._setFormValue(this.checked);\n\n    this.dispatchEvent(event);\n  }\n\n  render() {\n    // prettier-ignore\n    const check = html`<svg width=\"18\" height=\"14\" viewBox=\"0 0 18 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\" class=\"Toggle__icon Toggle__icon--checkmark\"><path d=\"M6.08471 10.6237L2.29164 6.83059L1 8.11313L6.08471 13.1978L17 2.28255L15.7175 1L6.08471 10.6237Z\" fill=\"currentcolor\" stroke=\"currentcolor\" /></svg>`\n    // prettier-ignore\n    const cross = html`<svg width=\"13\" height=\"13\" viewBox=\"0 0 13 13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\" class=\"Toggle__icon Toggle__icon--cross\"><path d=\"M11.167 0L6.5 4.667L1.833 0L0 1.833L4.667 6.5L0 11.167L1.833 13L6.5 8.333L11.167 13L13 11.167L8.333 6.5L13 1.833L11.167 0Z\" fill=\"currentcolor\" /></svg>`\n    return html`\n      <label class=\"Toggle\" for=\"${this.id}\" dir=\"${this.RTL ? 'rtl' : 'ltr'}\">\n        ${this.label}\n        <input\n          type=\"checkbox\"\n          name=\"${this.id}\"\n          id=\"${this.id}\"\n          class=\"Toggle__input\"\n          ?checked=${this.checked}\n          @click=${this.onChange}\n          ?disabled=${this.disabled}\n        />\n        <span class=\"Toggle__display\" hidden>\n          ${!this.hideIcons ? html` ${check} ${cross} ` : html``}\n        </span>\n      </label>\n    `;\n  }\n}\n\nwindow.customElements.define('dt-toggle', DtToggle);\n"],"names":["window","customElements","define","DtFormBase","styles","super","css","properties","id","type","String","checked","Boolean","reflect","onchange","hideIcons","default","constructor","this","onChange","e","event","CustomEvent","detail","field","name","oldValue","newValue","target","_setFormValue","dispatchEvent","render","check","html","cross","RTL","label","disabled"],"mappings":"gMA6LAA,OAAOC,eAAeC,OAAO,YA1LtB,cAAuBC,EACjBC,oBACT,MAAO,IACFC,MAAMD,OACTE,CAAG,0jEA0HN,CAEUC,wBACT,MAAO,IACFF,MAAME,WACTC,GAAI,CAAEC,KAAMC,QACZC,QAAS,CACPF,KAAMG,QACNC,SAAS,GAEXC,SAAU,CAAEL,KAAMC,QAClBK,UAAW,CAAEN,KAAMG,QAASI,SAAS,GAExC,CAEDC,cACEZ,QACAa,KAAKH,WAAY,CAClB,CAEDI,SAASC,GACP,MAAMC,EAAQ,IAAIC,YAAY,SAAU,CACtCC,OAAQ,CACNC,MAAON,KAAKO,KACZC,SAAUR,KAAKP,QACfgB,SAAUP,EAAEQ,OAAOjB,WAGvBO,KAAKP,QAAUS,EAAEQ,OAAOjB,QAExBO,KAAKW,cAAcX,KAAKP,SAExBO,KAAKY,cAAcT,EACpB,CAEDU,SAEE,MAAMC,EAAQC,CAAI,gVAEZC,EAAQD,CAAI,gVAClB,OAAOA,CAAI,8BACoBf,KAAKV,YAAYU,KAAKiB,IAAM,MAAQ,UAC7DjB,KAAKkB,sCAGGlB,KAAKV,WACPU,KAAKV,uCAEAU,KAAKP,oBACPO,KAAKC,wBACFD,KAAKmB,mDAGdnB,KAAKH,UAAwCkB,CAAI,GAAhCA,CAAI,GAAID,KAASE,oBAI5C"}