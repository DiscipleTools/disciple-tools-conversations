{"version":3,"file":"dt-tags.js","sources":["../../../src/components/form/dt-tags/dt-tags.js"],"sourcesContent":["import { css, html } from 'lit';\nimport { DtMultiSelect } from '../dt-multi-select/dt-multi-select.js';\n\nexport class DtTags extends DtMultiSelect {\n  static get properties() {\n    return {\n      ...super.properties,\n      allowAdd: { type: Boolean },\n      onload: { type: String },\n    };\n  }\n\n  static get styles() {\n    return [\n      ...super.styles,\n      css`\n        .selected-option a,\n        .selected-option a:active,\n        .selected-option a:visited {\n          text-decoration: none;\n          color: var(--primary-color, #3f729b);\n        }\n      `,\n    ];\n  }\n\n  willUpdate(props) {\n    super.willUpdate(props);\n\n    if (props) {\n      const openChanged = props.has('open');\n      // When list is first opened and we don't have any options yet,\n      // trigger _filterOptions to load options\n      if (openChanged && this.open && (!this.filteredOptions || !this.filteredOptions.length)) {\n        this._filterOptions();\n      }\n    }\n  }\n\n  /**\n   * Filter to options that:\n   *   1: are not selected\n   *   2: match the search query\n   * @private\n   */\n  _filterOptions() {\n    const selectedValues = (this.value || [])\n      .filter(i => !i.startsWith('-'));\n\n    if (this.options?.length) {\n      this.filteredOptions = (this.options || []).filter(\n        opt =>\n          !selectedValues.includes(opt.id) &&\n          (!this.query ||\n            opt.id\n              .toLocaleLowerCase()\n              .includes(this.query.toLocaleLowerCase()))\n      );\n    } else if (this.open) {\n      // Only run this filtering if the list is open.\n      // This prevents it from running on initial load before a `load` event is attached.\n      this.loading = true;\n      this.filteredOptions = [];\n\n      // need to fetch data via API request\n      const self = this;\n      const event = new CustomEvent('load', {\n        bubbles: true,\n        detail: {\n          field: this.name,\n          postType: this.postType,\n          query: this.query,\n          onSuccess: result => {\n            self.loading = false;\n\n            // if given an array of strings, transform to object array\n            let options = result;\n            if (options.length && typeof options[0] === 'string') {\n              options = options.map(o => ({\n                id: o,\n              }));\n            }\n\n            self.allOptions = options;\n            // filter out selected values from list\n            self.filteredOptions = options.filter(\n              opt => !selectedValues.includes(opt.id)\n            );\n          },\n          onError: error => {\n            console.warn(error);\n            self.loading = false;\n          },\n        },\n      });\n      this.dispatchEvent(event);\n    }\n    return this.filteredOptions;\n  }\n\n  _renderOption(opt, idx) {\n    return html`\n      <li tabindex=\"-1\">\n        <button\n          value=\"${opt.id}\"\n          type=\"button\"\n          data-label=\"${opt.label}\"\n          @click=\"${this._clickOption}\"\n          @touchstart=\"${this._touchStart}\"\n          @touchmove=\"${this._touchMove}\"\n          @touchend=\"${this._touchEnd}\"\n          tabindex=\"-1\"\n          class=\"${this.activeIndex > -1 && this.activeIndex === idx\n      ? 'active'\n      : ''}\"\n        >\n          ${opt.label || opt.id}\n        </button>\n      </li>\n    `;\n  }\n\n  _renderSelectedOptions() {\n    const options = this.options || this.allOptions;\n    return (this.value || [])\n      .filter(i => !i.startsWith('-'))\n      .map(\n        tag => {\n          let label = tag;\n          if (options) {\n            const option = options.filter(o => o === tag || o.id === tag);\n            if (option.length) {\n              label = option[0].label || option[0].id || tag;\n            }\n          }\n          let link;\n          if (!link && window?.SHAREDFUNCTIONS?.createCustomFilter) {\n            const query =  window.SHAREDFUNCTIONS.createCustomFilter(this.name, [tag])\n            const fieldLabel = this.label || this.name\n            const labels = [{ id: `${this.name}_${tag}`, name: `${fieldLabel}: ${tag}`}]\n            link = window.SHAREDFUNCTIONS.create_url_for_list_query(this.postType, query, labels);\n          }\n          return html`\n          <div class=\"selected-option\">\n            <a\n              href=\"${link || '#'}\"\n              ?disabled=\"${this.disabled}\"\n              alt=\"${tag}\"\n              >${label}</a\n            >\n            <button\n              @click=\"${this._remove}\"\n              ?disabled=\"${this.disabled}\"\n              data-value=\"${tag}\"\n            >\n              x\n            </button>\n          </div>\n        `}\n      );\n  }\n}\n\nwindow.customElements.define('dt-tags', DtTags);\n"],"names":["DtTags","DtMultiSelect","properties","super","allowAdd","type","Boolean","onload","String","styles","css","willUpdate","props","has","this","open","filteredOptions","length","_filterOptions","selectedValues","value","filter","i","startsWith","options","opt","includes","id","query","toLocaleLowerCase","loading","self","event","CustomEvent","bubbles","detail","field","name","postType","onSuccess","result","map","o","allOptions","onError","error","console","warn","dispatchEvent","_renderOption","idx","html","label","_clickOption","_touchStart","_touchMove","_touchEnd","activeIndex","_renderSelectedOptions","tag","link","option","window","SHAREDFUNCTIONS","createCustomFilter","fieldLabel","labels","create_url_for_list_query","disabled","_remove","customElements","define"],"mappings":"gaAGO,MAAMA,UAAeC,EACfC,wBACT,MAAO,IACFC,MAAMD,WACTE,SAAU,CAAEC,KAAMC,SAClBC,OAAQ,CAAEF,KAAMG,QAEnB,CAEUC,oBACT,MAAO,IACFN,MAAMM,OACTC,CAAG,mIASN,CAEDC,WAAWC,GAGT,GAFAT,MAAMQ,WAAWC,GAEbA,EAAO,EACWA,EAAMC,IAAI,UAGXC,KAAKC,MAAUD,KAAKE,iBAAoBF,KAAKE,gBAAgBC,QAC9EH,KAAKI,gBAER,CACF,CAQDA,iBACE,MAAMC,GAAkBL,KAAKM,OAAS,IACnCC,QAAOC,IAAMA,EAAEC,WAAW,OAE7B,GAAIT,KAAKU,SAASP,OAChBH,KAAKE,iBAAmBF,KAAKU,SAAW,IAAIH,QAC1CI,IACGN,EAAeO,SAASD,EAAIE,OAC3Bb,KAAKc,OACLH,EAAIE,GACDE,oBACAH,SAASZ,KAAKc,MAAMC,6BAExB,GAAIf,KAAKC,KAAM,CAGpBD,KAAKgB,SAAU,EACfhB,KAAKE,gBAAkB,GAGvB,MAAMe,EAAOjB,KACPkB,EAAQ,IAAIC,YAAY,OAAQ,CACpCC,SAAS,EACTC,OAAQ,CACNC,MAAOtB,KAAKuB,KACZC,SAAUxB,KAAKwB,SACfV,MAAOd,KAAKc,MACZW,UAAWC,IACTT,EAAKD,SAAU,EAGf,IAAIN,EAAUgB,EACVhB,EAAQP,QAAgC,iBAAfO,EAAQ,KACnCA,EAAUA,EAAQiB,KAAIC,IAAM,CAC1Bf,GAAIe,OAIRX,EAAKY,WAAanB,EAElBO,EAAKf,gBAAkBQ,EAAQH,QAC7BI,IAAQN,EAAeO,SAASD,EAAIE,KACrC,EAEHiB,QAASC,IACPC,QAAQC,KAAKF,GACbd,EAAKD,SAAU,CAAK,KAI1BhB,KAAKkC,cAAchB,EACpB,CACD,OAAOlB,KAAKE,eACb,CAEDiC,cAAcxB,EAAKyB,GACjB,OAAOC,CAAI,oCAGI1B,EAAIE,iCAECF,EAAI2B,kBACRtC,KAAKuC,8BACAvC,KAAKwC,4BACNxC,KAAKyC,0BACNzC,KAAK0C,mCAET1C,KAAK2C,aAAe,GAAK3C,KAAK2C,cAAgBP,EACzD,SACA,OAEIzB,EAAI2B,OAAS3B,EAAIE,kBAI1B,CAED+B,yBACE,MAAMlC,EAAUV,KAAKU,SAAWV,KAAK6B,WACrC,OAAQ7B,KAAKM,OAAS,IACnBC,QAAOC,IAAMA,EAAEC,WAAW,OAC1BkB,KACCkB,IACE,IAOIC,EAPAR,EAAQO,EACZ,GAAInC,EAAS,CACX,MAAMqC,EAASrC,EAAQH,QAAOqB,GAAKA,IAAMiB,GAAOjB,EAAEf,KAAOgC,IACrDE,EAAO5C,SACTmC,EAAQS,EAAO,GAAGT,OAASS,EAAO,GAAGlC,IAAMgC,EAE9C,CAED,IAAKC,GAAQE,QAAQC,iBAAiBC,mBAAoB,CACxD,MAAMpC,EAASkC,OAAOC,gBAAgBC,mBAAmBlD,KAAKuB,KAAM,CAACsB,IAC/DM,EAAanD,KAAKsC,OAAStC,KAAKuB,KAChC6B,EAAS,CAAC,CAAEvC,GAAI,GAAGb,KAAKuB,QAAQsB,IAAOtB,KAAM,GAAG4B,MAAeN,MACrEC,EAAOE,OAAOC,gBAAgBI,0BAA0BrD,KAAKwB,SAAUV,EAAOsC,EAC/E,CACD,OAAOf,CAAI,yCAGCS,GAAQ,mBACH9C,KAAKsD,kBACXT,MACJP,yBAGOtC,KAAKuD,uBACFvD,KAAKsD,yBACJT,qBAAG,GAO5B,EAGHG,OAAOQ,eAAeC,OAAO,UAAWvE"}