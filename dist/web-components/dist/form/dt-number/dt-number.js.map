{"version":3,"file":"dt-number.js","sources":["../../../src/components/form/dt-number/dt-number.js"],"sourcesContent":["import { html, css } from 'lit';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport DtFormBase from '../dt-form-base.js';\nimport ApiService from '../../../services/apiService.js';\n\nexport class DtNumberField extends DtFormBase {\n  static get styles() {\n    return [\n      ...super.styles,\n      css`\n        input {\n          color: var(--dt-form-text-color, #000);\n          appearance: none;\n          background-color: var(--dt-form-background-color, #fff);\n          border: 1px solid var(--dt-form-border-color, #ccc);\n          border-radius: 0;\n          box-shadow: var(\n            --dt-form-input-box-shadow,\n            inset 0 1px 2px hsl(0deg 0% 4% / 10%)\n          );\n          box-sizing: border-box;\n          display: block;\n          font-family: inherit;\n          font-size: 1rem;\n          font-weight: 300;\n          height: 2.5rem;\n          line-height: 1.5;\n          margin: 0 0 1.0666666667rem;\n          padding: var(--dt-form-padding, 0.5333333333rem);\n          transition: var(\n            --dt-form-transition,\n            box-shadow 0.5s,\n            border-color 0.25s ease-in-out\n          );\n        }\n        input:disabled,\n        input[readonly],\n        textarea:disabled,\n        textarea[readonly] {\n          background-color: var(--dt-form-disabled-background-color, #e6e6e6);\n          cursor: not-allowed;\n        }\n        input:invalid {\n          border-color: var(--dt-form-invalid-border-color, #dc3545);\n        }\n      `,\n    ];\n  }\n\n  static get properties() {\n    return {\n      ...super.properties,\n      id: { type: String },\n      value: {\n        type: String,\n        reflect: true,\n      },\n      oldValue: {\n        type: String,\n      },\n      min: { type: Number },\n      max: { type: Number },\n      loading: { type: Boolean },\n      saved: { type: Boolean },\n      onchange: { type: String },\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.oldValue = this.value;\n  }\n\n  _checkValue(value) {\n    if (value < this.min || value > this.max) {\n      return false;\n    }\n\n    return true;\n  }\n\n  async onChange(e) {\n    if (this._checkValue(e.target.value)) {\n      const event = new CustomEvent('change', {\n        detail: {\n          field: this.name,\n          oldValue: this.value,\n          newValue: e.target.value,\n        },\n        bubbles: true,\n        composed: true,\n      });\n\n      this.value = e.target.value;\n      this._field.setCustomValidity('');\n      this.dispatchEvent(event);\n      this.api = new ApiService(this.nonce, `${this.apiRoot}`);\n\n      /*try {\n        const response = await this.api.updatePost(this.postType, this.postID, {\n          [this.name]: e.target.value,\n        });\n        if (response.data && response.data.status !== 200) {\n          this.handleError(response.message);\n        } else {\n          this.saved = true;\n          this.oldValue = this.value;\n        }\n      } catch (error) {\n        this.handleError(error);\n      }*/\n    } else {\n      e.currentTarget.value = '';\n    }\n  }\n\n  handleError(er = 'An error occurred.') {\n    let error = er;\n    if (error instanceof Error) {\n      console.error(error);\n      error = error.message;\n    } else {\n      console.error(error);\n    }\n    this.error = error;\n    this._field.setCustomValidity(error);\n    this.invalid = true;\n    this.value = this.oldValue;\n  }\n\n  render() {\n    return html`\n      ${this.labelTemplate()}\n\n      <input\n        id=\"${this.id}\"\n        name=\"${this.name}\"\n        aria-label=\"${this.label}\"\n        type=\"number\"\n        ?disabled=${this.disabled}\n        class=\"text-input\"\n        .value=\"${this.value}\"\n        min=\"${ifDefined(this.min)}\"\n        max=\"${ifDefined(this.max)}\"\n        @change=${this.onChange}\n      />\n    `;\n  }\n}\n\nwindow.customElements.define('dt-number', DtNumberField);\n"],"names":["window","customElements","define","DtFormBase","styles","super","css","properties","id","type","String","value","reflect","oldValue","min","Number","max","loading","Boolean","saved","onchange","connectedCallback","this","_checkValue","async","e","target","event","CustomEvent","detail","field","name","newValue","bubbles","composed","_field","setCustomValidity","dispatchEvent","api","ApiService","nonce","apiRoot","currentTarget","handleError","er","error","Error","console","message","invalid","render","html","labelTemplate","label","disabled","ifDefined","onChange"],"mappings":"6PAsJAA,OAAOC,eAAeC,OAAO,YAjJtB,cAA4BC,EACtBC,oBACT,MAAO,IACFC,MAAMD,OACTE,CAAG,svBAsCN,CAEUC,wBACT,MAAO,IACFF,MAAME,WACTC,GAAI,CAAEC,KAAMC,QACZC,MAAO,CACLF,KAAMC,OACNE,SAAS,GAEXC,SAAU,CACRJ,KAAMC,QAERI,IAAK,CAAEL,KAAMM,QACbC,IAAK,CAAEP,KAAMM,QACbE,QAAS,CAAER,KAAMS,SACjBC,MAAO,CAAEV,KAAMS,SACfE,SAAU,CAAEX,KAAMC,QAErB,CAEDW,oBACEhB,MAAMgB,oBACNC,KAAKT,SAAWS,KAAKX,KACtB,CAEDY,YAAYZ,GACV,QAAIA,EAAQW,KAAKR,KAAOH,EAAQW,KAAKN,IAKtC,CAEDQ,eAAeC,GACb,GAAIH,KAAKC,YAAYE,EAAEC,OAAOf,OAAQ,CACpC,MAAMgB,EAAQ,IAAIC,YAAY,SAAU,CACtCC,OAAQ,CACNC,MAAOR,KAAKS,KACZlB,SAAUS,KAAKX,MACfqB,SAAUP,EAAEC,OAAOf,OAErBsB,SAAS,EACTC,UAAU,IAGZZ,KAAKX,MAAQc,EAAEC,OAAOf,MACtBW,KAAKa,OAAOC,kBAAkB,IAC9Bd,KAAKe,cAAcV,GACnBL,KAAKgB,IAAM,IAAIC,EAAWjB,KAAKkB,MAAO,GAAGlB,KAAKmB,UAepD,MACMhB,EAAEiB,cAAc/B,MAAQ,EAE3B,CAEDgC,YAAYC,EAAK,sBACf,IAAIC,EAAQD,EACRC,aAAiBC,OACnBC,QAAQF,MAAMA,GACdA,EAAQA,EAAMG,SAEdD,QAAQF,MAAMA,GAEhBvB,KAAKuB,MAAQA,EACbvB,KAAKa,OAAOC,kBAAkBS,GAC9BvB,KAAK2B,SAAU,EACf3B,KAAKX,MAAQW,KAAKT,QACnB,CAEDqC,SACE,OAAOC,CAAI,GACP7B,KAAK8B,8BAGC9B,KAAKd,aACHc,KAAKS,qBACCT,KAAK+B,mCAEP/B,KAAKgC,wCAEPhC,KAAKX,eACR4C,EAAUjC,KAAKR,cACfyC,EAAUjC,KAAKN,kBACZM,KAAKkC,YAGpB"}