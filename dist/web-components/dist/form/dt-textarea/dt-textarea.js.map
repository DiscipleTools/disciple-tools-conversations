{"version":3,"file":"dt-textarea.js","sources":["../../../src/components/form/dt-textarea/dt-textarea.js"],"sourcesContent":["import { html, css } from 'lit';\nimport DtFormBase from '../dt-form-base.js';\n\nexport class DtTextArea extends DtFormBase {\n  static get styles() {\n    return [\n      ...super.styles,\n      css`\n        textarea {\n          color: var(--dt-textarea-text-color, #0a0a0a);\n          appearance: none;\n          background-color: var(--dt-textarea-background-color, #fefefe);\n          border: 1px solid var(--dt-textarea-border-color, #cecece);\n          border-radius: 3px;\n          box-shadow: var(\n            --dt-textarea-input-box-shadow,\n            inset 0 1px 2px hsl(0deg 0% 4% / 10%)\n          );\n          box-sizing: border-box;\n          display: block;\n          font-family: inherit;\n          font-size: 1rem;\n          font-weight: 300;\n          height: 10rem;\n          line-height: 1.5;\n          margin: 0 0 1.0666666667rem;\n          padding: var(--dt-form-padding, 0.5333333333rem);\n          transition: var(\n            --dt-form-transition,\n            box-shadow 0.5s,\n            border-color 0.25s ease-in-out\n          );\n          overflow: hidden;\n          position: relative;\n          outline: 0;\n          resize: none;\n        }\n        input:disabled,\n        input[readonly],\n        textarea:disabled,\n        textarea[readonly] {\n          background-color: var(\n            --dt-textarea-disabled-background-color,\n            #e6e6e6\n          );\n          cursor: not-allowed;\n        }\n      `,\n    ];\n  }\n\n  static get properties() {\n    return {\n      ...super.properties,\n      id: { type: String },\n      value: {\n        type: String,\n        reflect: true,\n      },\n      loading: { type: Boolean },\n      saved: { type: Boolean },\n      onchange: { type: String },\n    };\n  }\n\n  onChange(e) {\n    const event = new CustomEvent('change', {\n      detail: {\n        field: this.name,\n        oldValue: this.value,\n        newValue: e.target.value,\n      },\n    });\n\n    this.value = e.target.value;\n\n    this.dispatchEvent(event);\n  }\n\n  render() {\n    return html`\n      ${this.labelTemplate()}\n\n      <textarea\n        id=\"${this.id}\"\n        name=\"${this.name}\"\n        aria-label=\"${this.label}\"\n        type=\"text\"\n        ?disabled=${this.disabled}\n        class=\"text-input\"\n        @change=${this.onChange}\n        .value=\"${this.value || ''}\"\n      ></textarea>\n    `;\n  }\n}\n\nwindow.customElements.define('dt-textarea', DtTextArea);\n"],"names":["window","customElements","define","DtFormBase","styles","super","css","properties","id","type","String","value","reflect","loading","Boolean","saved","onchange","onChange","e","event","CustomEvent","detail","field","this","name","oldValue","newValue","target","dispatchEvent","render","html","labelTemplate","label","disabled"],"mappings":"gMAiGAA,OAAOC,eAAeC,OAAO,cA9FtB,cAAyBC,EACnBC,oBACT,MAAO,IACFC,MAAMD,OACTE,CAAG,wwBA0CN,CAEUC,wBACT,MAAO,IACFF,MAAME,WACTC,GAAI,CAAEC,KAAMC,QACZC,MAAO,CACLF,KAAMC,OACNE,SAAS,GAEXC,QAAS,CAAEJ,KAAMK,SACjBC,MAAO,CAAEN,KAAMK,SACfE,SAAU,CAAEP,KAAMC,QAErB,CAEDO,SAASC,GACP,MAAMC,EAAQ,IAAIC,YAAY,SAAU,CACtCC,OAAQ,CACNC,MAAOC,KAAKC,KACZC,SAAUF,KAAKZ,MACfe,SAAUR,EAAES,OAAOhB,SAIvBY,KAAKZ,MAAQO,EAAES,OAAOhB,MAEtBY,KAAKK,cAAcT,EACpB,CAEDU,SACE,OAAOC,CAAI,GACPP,KAAKQ,iCAGCR,KAAKf,aACHe,KAAKC,qBACCD,KAAKS,iCAEPT,KAAKU,yCAEPV,KAAKN,qBACLM,KAAKZ,OAAS,iBAG7B"}