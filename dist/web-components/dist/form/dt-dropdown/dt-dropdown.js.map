{"version":3,"file":"dt-dropdown.js","sources":["../../../src/components/form/dt-dropdown/dt-dropdown.js"],"sourcesContent":["import { html, css, LitElement } from 'lit';\nimport '../dt-button/dt-button.js';\nimport '../../layout/dt-modal/dt-modal.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\n\nexport class DtDropdown extends LitElement {\n  static get styles() {\n    return css`\n      :host {\n        display: block;\n      }\n      dt-button {\n        background-color: var(--button-color, #3498db);\n        color: white;\n        border: none;\n        cursor: pointer;\n        border-radius: 5px;\n      }\n\n      .dropdown {\n        position: relative;\n        display: inline-block;\n      }\n      button.dt-dropdown{\n        padding:.5em;\n        border:none;\n        background-color: var(--dropdown-button-color, #00897B);\n        color: var(--dropdown-button-text-color, #ffffff);\n        border-radius:4px;\n        }\n\n\n      .dropdown ul {\n        position: absolute;\n        z-index: 999;\n        min-width: 15rem;\n        display: none;\n        border: 0.5px solid var(--primary-color,#3f729b);\n        background: #fff;\n        padding: .4rem 0;\n        margin: 0;\n        list-style: none;\n        width: 100%;\n        border-radius: 3px;\n        box-shadow: 0 3px 8px rgba(0, 0, 0, 0.15);\n      }\n\n      .dropdown ul button {\n        display: block;\n        padding: .4rem 1em;\n        text-decoration: none;\n        color: var(--primary-color,#3f729b);\n        font-size: 1rem;\n        border-radius: 0.25em;\n        padding: 0.25rem 0.5rem;\n        cursor: pointer;\n        text-decoration: none;\n        background: none;\n        border: none;\n      }\n\n      .dropdown ul a:focus {\n        background-color: var(--button-hover-color, #2980b9);\n      }\n\n      .list-style {\n        color: var(--primary-color,#3f729b);\n        font-size: 1rem;\n      }\n\n      .list-style:hover {\n        background-color: var(--button-hover-color, #3f729b);\n      }\n\n      .icon {\n        height: 1em;\n      }\n      .pre-list-item {\n        padding: .7rem 1rem;\n      }\n      .dropdown ul .pre-list-item button {\n        padding: 0;\n        font-size: .8em\n      }\n        .pre-list-item:hover {\n          background-color: var(--primary-color,#3f729b);\n        }\n        .pre-list-item:hover button {\n          color: var(--surface-1, #ffffff);\n        }\n        .pre-list-item:hover button img {\n          width: 1em;\n          height: 1em;\n          -webkit-filter: invert(100%) sepia(100%) saturate(6%) hue-rotate(105deg) brightness(102%) contrast(102%);\n          filter: invert(100%) sepia(100%) saturate(6%) hue-rotate(105deg) brightness(102%) contrast(102%);\n        }\n    `;\n  }\n\n  static get properties() {\n    return {\n      options: { type: Array },\n      label: { type: String },\n      isModal: { type: Boolean },\n      buttonStyle: { type: Object },\n      default: { type : Boolean },\n      context:{ type: String },\n    };\n  }\n\n  get classes() {\n    const classes = {\n      'dt-dropdown': true,\n    };\n    const contextClass = `dt-dropdown--${this.context}`;\n    classes[contextClass] = true;\n    return classes;\n  }\n\n  render() {\n    return html`\n    <div class=\"dropdown\">\n    <button\n    class=${classMap(this.classes)}\n    style=${styleMap(this.buttonStyle || {})}\n    @mouseover=${this._handleHover}\n    @mouseleave=${this._handleMouseLeave}\n    @focus=${this._handleHover}\n    >\n\n    ${this.label} \\u25BC\n\n    </button>\n    <ul\n    class=\"dt-dropdown-list\"\n    @mouseover=${this._handleHover}\n    @mouseleave=${this._handleMouseLeave}\n    @focus=${this._handleHover}\n    >\n\n    ${this.options ? this.options.map(\n      option => html`\n        ${option.isModal\n          ? html`\n              <li\n                class=\"pre-list-item\"\n                @click=\"${()=>this._openDialog(option.label)}\"\n                @keydown=\"${()=>this._openDialog(option.label)}\"\n              >\n\n                <button\n                style=\"\"\n                @click=\"${()=>this._openDialog(option.label)}\"\n                class=\"list-style dt-modal\"\n                >\n                ${option.icon\n               ? html`<img\n                   src=\"${option.icon}\"\n                   alt=\"${option.label} icon\"\n                   class=\"icon\"\n                 />`\n               : ''}\n                ${option.label}\n                </button>\n              </li>\n            `\n          : html`\n              <li\n                class=\"list-style pre-list-item\"\n                @click=\"${() => this._redirectToHref(option.href)}\"\n                @keydown=\"${() => this._redirectToHref(option.href)}\"\n              >\n\n                <button\n                  style=\"\"\n                  @click=\"${() => this._redirectToHref(option.href)}\"\n                >\n                  <img\n                    src=${option.icon}\n                    alt=${option.label}\n                    class=\"icon\"\n                  />\n                  ${option.label.replace(/-/g, ' ')}\n                </button>\n              </li>\n            `}\n      `\n    ):''}\n    </ul>\n\n\n    </div>\n    `;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  _redirectToHref(href) {\n    let newHref = href;\n    if (!/^https?:\\/\\//i.test(newHref)) {\n      newHref = `http://${newHref}`;\n    }\n    window.open(newHref, '_blank');\n  }\n\n  _openDialog(label) {\n    const id=label.replace(/\\s/g, '-').toLowerCase();\n    const modal= document.querySelector(`#${id}`);\n    modal.shadowRoot.querySelector('dialog').showModal();\n    document.querySelector('body').style.overflow = \"hidden\"\n  }\n\n  _handleHover() {\n    const ulElement = this.shadowRoot.querySelector('ul');\n    ulElement.style.display = 'block';\n  }\n\n  _handleMouseLeave() {\n    const ulElement = this.shadowRoot.querySelector('ul');\n    ulElement.style.display = 'none';\n  }\n}\n\nwindow.customElements.define('dt-dropdown', DtDropdown);\n"],"names":["window","customElements","define","LitElement","styles","css","properties","options","type","Array","label","String","isModal","Boolean","buttonStyle","Object","default","context","classes","this","render","html","classMap","styleMap","_handleHover","_handleMouseLeave","map","option","_openDialog","icon","_redirectToHref","href","replace","newHref","test","open","id","toLowerCase","document","querySelector","shadowRoot","showModal","style","overflow","display"],"mappings":"gVAgOAA,OAAOC,eAAeC,OAAO,cAzNtB,cAAyBC,EACnBC,oBACT,OAAOC,CAAG,89CA0FX,CAEUC,wBACT,MAAO,CACLC,QAAS,CAAEC,KAAMC,OACjBC,MAAO,CAAEF,KAAMG,QACfC,QAAS,CAAEJ,KAAMK,SACjBC,YAAa,CAAEN,KAAMO,QACrBC,QAAS,CAAER,KAAOK,SAClBI,QAAQ,CAAET,KAAMG,QAEnB,CAEGO,cACF,MAAMA,EAAU,CACd,eAAe,GAIjB,OADAA,EADqB,gBAAgBC,KAAKF,YAClB,EACjBC,CACR,CAEDE,SACE,OAAOC,CAAI,wCAGHC,EAASH,KAAKD,oBACdK,EAASJ,KAAKL,aAAe,CAAE,mBAC1BK,KAAKK,8BACJL,KAAKM,8BACVN,KAAKK,iBAGZL,KAAKT,iEAKMS,KAAKK,8BACJL,KAAKM,8BACVN,KAAKK,iBAGZL,KAAKZ,QAAUY,KAAKZ,QAAQmB,KAC5BC,GAAUN,CAAI,GACVM,EAAOf,QACLS,CAAI,qCAGU,IAAIF,KAAKS,YAAYD,EAAOjB,qBAC1B,IAAIS,KAAKS,YAAYD,EAAOjB,2BAK9B,IAAIS,KAAKS,YAAYD,EAAOjB,uCAGpCiB,EAAOE,KACRR,CAAI,aACKM,EAAOE,cACPF,EAAOjB,4BAGhB,MACCiB,EAAOjB,sBAIbW,CAAI,gDAGU,IAAMF,KAAKW,gBAAgBH,EAAOI,oBAChC,IAAMZ,KAAKW,gBAAgBH,EAAOI,0BAKlC,IAAMZ,KAAKW,gBAAgBH,EAAOI,oBAGpCJ,EAAOE,cACPF,EAAOjB,wBAGbiB,EAAOjB,MAAMsB,QAAQ,KAAM,yBAKzC,eAMH,CAGDF,gBAAgBC,GACd,IAAIE,EAAUF,EACT,gBAAgBG,KAAKD,KACxBA,EAAU,UAAUA,KAEtBjC,OAAOmC,KAAKF,EAAS,SACtB,CAEDL,YAAYlB,GACV,MAAM0B,EAAG1B,EAAMsB,QAAQ,MAAO,KAAKK,cACtBC,SAASC,cAAc,IAAIH,KAClCI,WAAWD,cAAc,UAAUE,YACzCH,SAASC,cAAc,QAAQG,MAAMC,SAAW,QACjD,CAEDnB,eACoBL,KAAKqB,WAAWD,cAAc,MACtCG,MAAME,QAAU,OAC3B,CAEDnB,oBACoBN,KAAKqB,WAAWD,cAAc,MACtCG,MAAME,QAAU,MAC3B"}