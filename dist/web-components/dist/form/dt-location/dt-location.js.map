{"version":3,"file":"dt-location.js","sources":["../../../src/components/form/dt-location/dt-location.js"],"sourcesContent":["import { css, html } from 'lit';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { map } from 'lit/directives/map.js';\nimport { DtTags } from '../dt-tags/dt-tags.js';\n\nexport class DtLocation extends DtTags {\n  static get properties() {\n    return {\n      ...super.properties,\n      filters: { type: Array },\n      mapboxKey: { type: String },\n      dtMapbox: { type: Object },\n    };\n  }\n\n  static get styles() {\n    return [\n      ...super.styles,\n      css`\n        .input-group {\n          display: flex;\n        }\n\n        .field-container {\n          position: relative;\n        }\n\n        select {\n          border: 1px solid var(--dt-form-border-color, #cacaca);\n          outline: 0;\n        }\n        .selected-option > *:first-child {\n          max-width: calc(\n            var(--container-width) - var(--select-width) -\n              var(--container-padding) - var(--option-padding) -\n              var(--option-button) - 8px\n          );\n        }\n      `,\n    ];\n  }\n\n  _clickOption(e) {\n    if (e.target && e.target.value) {\n      const id = e.target.value;\n      const option = this.filteredOptions.reduce((result, opt) => {\n        if (!result && opt.id === id) {\n          return opt;\n        }\n        return result;\n      }, null);\n      this._select(option);\n    }\n  }\n\n  _clickAddNew(e) {\n    if (e.target) {\n      this._select({\n        id: e.target.dataset?.label,\n        label: e.target.dataset?.label,\n        isNew: true,\n      });\n      // clear search field if clicked with mouse, since field will lose focus\n      const input = this.shadowRoot.querySelector('input');\n      if (input) {\n        input.value = '';\n      }\n    }\n  }\n\n  _keyboardSelectOption() {\n    if (this.activeIndex > -1) {\n      if (this.activeIndex + 1 > this.filteredOptions.length) {\n        this._select({\n          id: this.query,\n          label: this.query,\n          isNew: true,\n        });\n      } else {\n        this._select(this.filteredOptions[this.activeIndex]);\n      }\n    }\n  }\n\n  _remove(e) {\n    if (e.target && e.target.dataset && e.target.dataset.value) {\n      const event = new CustomEvent('change', {\n        detail: {\n          field: this.name,\n          oldValue: this.value,\n        },\n      });\n      this.value = (this.value || []).map(i => {\n        const val = {\n          ...i,\n        };\n        if (i.id === e.target.dataset.value) {\n          val.delete = true;\n        }\n        return val;\n      });\n      event.detail.newValue = this.value;\n\n      // dispatch event for use with addEventListener from javascript\n      this.dispatchEvent(event);\n\n      // If option was de-selected while list was open, re-focus input\n      if (this.open) {\n        this.shadowRoot.querySelector('input').focus();\n      }\n    }\n  }\n\n  updated() {\n    super.updated();\n\n    // set variable with width of container for truncating selected options via CSS\n    const container = this.shadowRoot.querySelector('.input-group');\n    const currentValue = container.style.getPropertyValue('--select-width');\n    const select = this.shadowRoot.querySelector('select');\n    if (!currentValue && select?.clientWidth > 0) {\n      container.style.setProperty('--select-width', `${select.clientWidth}px`);\n    }\n  }\n\n  /**\n   * Filter to options that:\n   *   1: are not selected\n   *   2: match the search query\n   * @private\n   */\n  _filterOptions() {\n    const selectedValues = (this.value || [])\n      .filter(i => !i.delete)\n      .map(v => v?.id);\n\n    if (this.options?.length) {\n      this.filteredOptions = (this.options || []).filter(\n        opt =>\n          !selectedValues.includes(opt.id) &&\n          (!this.query ||\n            opt.label\n              .toLocaleLowerCase()\n              .includes(this.query.toLocaleLowerCase()))\n      );\n    } else {\n      this.loading = true;\n      this.filteredOptions = [];\n\n      // need to fetch data via API request\n      const self = this;\n      const selectEl = this.shadowRoot.querySelector('select');\n      const event = new CustomEvent('load', {\n        bubbles: true,\n        detail: {\n          field: this.name,\n          query: this.query,\n          filter: selectEl?.value,\n          onSuccess: result => {\n            self.loading = false;\n\n            // filter out selected values from list\n            self.filteredOptions = result.filter(\n              opt => !selectedValues.includes(opt.id)\n            );\n          },\n          onError: error => {\n            console.warn(error);\n            self.loading = false;\n          },\n        },\n      });\n      this.dispatchEvent(event);\n    }\n    return this.filteredOptions;\n  }\n\n  _renderOption(opt, idx) {\n    return html`\n      <li tabindex=\"-1\">\n        <button\n          value=\"${opt.id}\"\n          type=\"button\"\n          data-label=\"${opt.label}\"\n          @click=\"${this._clickOption}\"\n          @touchstart=\"${this._touchStart}\"\n          @touchmove=\"${this._touchMove}\"\n          @touchend=\"${this._touchEnd}\"\n          tabindex=\"-1\"\n          class=\"${this.activeIndex > -1 && this.activeIndex === idx\n      ? 'active'\n      : ''}\"\n        >\n          ${opt.label}\n        </button>\n      </li>\n    `;\n  }\n\n  _renderSelectedOptions() {\n    return (this.value || [])\n      .filter(i => !i.delete)\n      .map(\n        opt => {\n          return html`\n          <div class=\"selected-option\">\n            <a\n              href=\"${opt.link}\"\n              ?disabled=\"${this.disabled}\"\n              alt=\"${opt.status ? opt.status.label : opt.label}\"\n              >${opt.label}</a\n            >\n            <button\n              @click=\"${this._remove}\"\n              ?disabled=\"${this.disabled}\"\n              data-value=\"${opt.id}\"\n            >\n              x\n            </button>\n          </div>\n        `}\n      );\n  }\n\n  render() {\n    const optionListStyles = {\n      display: this.open ? 'block' : 'none',\n      top: `${this.containerHeight}px`,\n    };\n    return this.mapboxKey\n      ? html` ${this.labelTemplate()}\n          <div id=\"mapbox-wrapper\">\n            <div\n              id=\"mapbox-autocomplete\"\n              class=\"mapbox-autocomplete input-group\"\n              data-autosubmit=\"true\"\n              data-add-address=\"true\"\n            >\n              <input\n                id=\"mapbox-search\"\n                type=\"text\"\n                name=\"mapbox_search\"\n                class=\"input-group-field\"\n                autocomplete=\"off\"\n                dir=\"auto\"\n                placeholder=\"Search Location\"\n              />\n              <div class=\"input-group-button\">\n                <button\n                  id=\"mapbox-spinner-button\"\n                  class=\"button hollow\"\n                  style=\"display:none;border-color:lightgrey;\"\n                >\n                  <span\n                    class=\"\"\n                    style=\"border-radius: 50%;width: 24px;height: 24px;border: 0.25rem solid lightgrey;border-top-color: black;animation: spin 1s infinite linear;display: inline-block;\"\n                  ></span>\n                </button>\n                <button\n                  id=\"mapbox-clear-autocomplete\"\n                  class=\"button alert input-height delete-button-style mapbox-delete-button\"\n                  type=\"button\"\n                  title=\"Clear\"\n                  style=\"display:none;\"\n                >\n                  Ã—\n                </button>\n              </div>\n              <div\n                id=\"mapbox-autocomplete-list\"\n                class=\"mapbox-autocomplete-items\"\n              ></div>\n            </div>\n            <div id=\"location-grid-meta-results\"></div>\n          </div>`\n      : html`\n          ${this.labelTemplate()}\n\n          <div class=\"input-group ${this.disabled ? 'disabled' : ''}\">\n            <div\n              class=\"field-container\"\n              @click=\"${this._focusInput}\"\n              @keydown=\"${this._focusInput}\"\n            >\n              ${this._renderSelectedOptions()}\n              <input\n                type=\"text\"\n                placeholder=\"${this.placeholder}\"\n                @focusin=\"${this._inputFocusIn}\"\n                @blur=\"${this._inputFocusOut}\"\n                @keydown=\"${this._inputKeyDown}\"\n                @keyup=\"${this._inputKeyUp}\"\n                ?disabled=\"${this.disabled}\"\n              />\n\n              ${this.loading\n                ? html`<dt-spinner class=\"icon-overlay\"></dt-spinner>`\n                : null}\n              ${this.saved\n                ? html`<dt-checkmark\n                    class=\"icon-overlay success\"\n                  ></dt-checkmark>`\n                : null}\n            </div>\n            <select class=\"filter-list\" ?disabled=\"${this.disabled}\">\n              ${map(\n                this.filters,\n                f => html`<option value=\"${f.id}\">${f.label}</option>`\n              )}\n            </select>\n            <ul class=\"option-list\" style=${styleMap(optionListStyles)}>\n              ${this._renderOptions()}\n            </ul>\n          </div>\n        `;\n  }\n}\n\nwindow.customElements.define('dt-location', DtLocation);\n"],"names":["window","customElements","define","DtTags","properties","super","filters","type","Array","mapboxKey","String","dtMapbox","Object","styles","css","_clickOption","e","target","value","id","option","this","filteredOptions","reduce","result","opt","_select","_clickAddNew","dataset","label","isNew","input","shadowRoot","querySelector","_keyboardSelectOption","activeIndex","length","query","_remove","event","CustomEvent","detail","field","name","oldValue","map","i","val","delete","newValue","dispatchEvent","open","focus","updated","container","currentValue","style","getPropertyValue","select","clientWidth","setProperty","_filterOptions","selectedValues","filter","v","options","includes","toLocaleLowerCase","loading","self","selectEl","bubbles","onSuccess","onError","error","console","warn","_renderOption","idx","html","_touchStart","_touchMove","_touchEnd","_renderSelectedOptions","link","disabled","status","render","optionListStyles","display","top","containerHeight","labelTemplate","_focusInput","placeholder","_inputFocusIn","_inputFocusOut","_inputKeyDown","_inputKeyUp","saved","f","styleMap","_renderOptions"],"mappings":"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"}