{"version":3,"file":"dt-location-map-item.js","sources":["../../../src/services/mapboxService.js","../../../src/services/googleGeocodeService.js","../../../src/components/form/dt-location-map/dt-location-map-item.js"],"sourcesContent":["export default class MapboxService {\n  constructor(token) {\n    this.token = token;\n  }\n\n  /**\n   * Search places via Mapbox API\n   * @param query\n   * @param language\n   * @returns {Promise<Array>}\n   */\n  async searchPlaces(query, language = 'en') {\n    const params = new URLSearchParams({\n      types: ['country', 'region', 'postcode', 'district', 'place', 'locality', 'neighborhood', 'address'],\n      limit: 6,\n      access_token: this.token,\n      language,\n    });\n\n    const options = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const apiUrl = `https://api.mapbox.com/geocoding/v5/mapbox.places/${encodeURI(query)}.json?${params}`;\n    const response = await fetch(apiUrl, options);\n\n    const result = await response.json();\n    return result?.features;\n  }\n\n  /**\n   * Reverse geocode a long/lat pair to get place details\n   * @param longitude\n   * @param latitude\n   * @param language\n   * @returns {Promise<Array>}\n   */\n  async reverseGeocode(longitude, latitude, language = 'en') {\n    const params = new URLSearchParams({\n      types: ['country', 'region', 'postcode', 'district', 'place', 'locality', 'neighborhood', 'address'],\n      access_token: this.token,\n      language,\n    });\n\n    const options = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const apiUrl = `https://api.mapbox.com/geocoding/v5/mapbox.places/${encodeURI(longitude)},${encodeURI(latitude)}.json?${params}`;\n    const response = await fetch(apiUrl, options);\n\n    const result = await response.json();\n    return result?.features;\n  }\n}\n","export default class GoogleGeocodeService {\n  constructor(token, window, document) {\n    this.token = token;\n    this.window = window;\n\n    if (!window.google?.maps?.places?.AutocompleteService) {\n      let script = document.createElement('script');\n      script.src = `https://maps.googleapis.com/maps/api/js?libraries=places&key=${token}`;\n      document.body.appendChild(script);\n    }\n  }\n\n  /**\n   * Search places via Mapbox API\n   * @param query\n   * @returns {Promise<any>}\n   */\n  async getPlacePredictions(query, language = 'en') {\n    if (this.window.google) {\n      const service = new this.window.google.maps.places.AutocompleteService();\n      const { predictions } = await service.getPlacePredictions({\n        input: query,\n        language,\n      });\n\n      return predictions;\n    }\n    return null;\n  }\n\n  /**\n   * Get details for a given address\n   * @param address\n   * @param language\n   * @returns {Promise<null>}\n   */\n  async getPlaceDetails(address, language = 'en') {\n    const params = new URLSearchParams({\n      key: this.token,\n      address,\n      language,\n    });\n    const apiUrl = `https://maps.googleapis.com/maps/api/geocode/json?${params}`;\n    const response = await fetch(apiUrl, { method: 'GET' });\n\n    const data = await response.json();\n    let results = [];\n\n    // https://developers.google.com/maps/documentation/geocoding/requests-geocoding#StatusCodes\n    switch (data.status) {\n      case 'OK':\n        results = data.results;\n        break;\n      case 'ZERO_RESULTS':\n      default:\n        // general error catch\n        break;\n    }\n\n    return results && results.length ? results[0] : null;\n  }\n\n  /**\n   * Reverse geocode a lng/lat pair to get place details\n   * @param longitude\n   * @param latitude\n   * @param language\n   * @returns {Promise<Array>}\n   */\n  async reverseGeocode(longitude, latitude, language = 'en') {\n    const params = new URLSearchParams({\n      key: this.token,\n      latlng: `${latitude},${longitude}`,\n      language,\n      result_type: [\n        'point_of_interest',\n        'establishment',\n        'premise',\n        'street_address',\n        'neighborhood',\n        'sublocality',\n        'locality',\n        'colloquial_area',\n        'political',\n        'country',\n      ].join('|')\n    });\n    const apiUrl = `https://maps.googleapis.com/maps/api/geocode/json?${params}`;\n    const response = await fetch(apiUrl, { method: 'GET' });\n\n    const result = await response.json();\n    return result?.results;\n  }\n}\n","import { css, html, LitElement } from 'lit';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { msg } from '@lit/localize';\nimport MapboxService from '../../../services/mapboxService.js';\nimport GoogleGeocodeService from '../../../services/googleGeocodeService.js';\nimport '../../icons/dt-icon.js';\nimport './dt-map-modal.js';\n\nexport default class DtLocationMapItem extends LitElement {\n  static get properties() {\n    return {\n      id: { type: String, reflect: true },\n      placeholder: { type: String },\n      mapboxToken: { type: String, attribute: 'mapbox-token' },\n      googleToken: { type: String, attribute: 'google-token' },\n      metadata: { type: Object },\n      disabled: { type: Boolean },\n      open: {\n        type: Boolean,\n        state: true,\n      },\n      query: {\n        type: String,\n        state: true,\n      },\n      activeIndex: {\n        type: Number,\n        state: true,\n      },\n      containerHeight: {\n        type: Number,\n        state: true,\n      },\n      loading: { type: Boolean },\n      saved: { type: Boolean },\n      filteredOptions: { type: Array, state: true },\n    };\n  }\n\n  static get styles() {\n    return [\n      css`\n        :host {\n          position: relative;\n          font-family: Helvetica, Arial, sans-serif;\n          display: block;\n        }\n\n        .input-group {\n          color: var(--dt-multi-select-text-color, #0a0a0a);\n          margin-bottom: 1rem;\n        }\n        .input-group.disabled input,\n        .input-group.disabled .field-container {\n          background-color: var(--disabled-color);\n        }\n        .input-group.disabled a,\n        .input-group.disabled button {\n          cursor: not-allowed;\n          pointer-events: none;\n        }\n        .input-group.disabled *:hover {\n          cursor: not-allowed;\n        }\n\n        /* === Options List === */\n        .option-list {\n          list-style: none;\n          margin: 0;\n          padding: 0;\n          border: 1px solid var(--dt-form-border-color, #cacaca);\n          background: var(--dt-form-background-color, #fefefe);\n          z-index: 10;\n          position: absolute;\n          width: var(--container-width, 100%);\n          width: 100%;\n          top: 0;\n          left: 0;\n          box-shadow: var(--shadow-1);\n          max-height: 150px;\n          overflow-y: scroll;\n        }\n        .option-list li {\n          border-block-start: 1px solid var(--dt-form-border-color, #cacaca);\n          outline: 0;\n        }\n        .option-list li div,\n        .option-list li button {\n          padding: 0.5rem 0.75rem;\n          color: var(--dt-multi-select-text-color, #0a0a0a);\n          font-weight: 100;\n          font-size: 1rem;\n          text-decoration: none;\n          text-align: inherit;\n        }\n        .option-list li button {\n          display: block;\n          width: 100%;\n          border: 0;\n          background: transparent;\n        }\n        .option-list li button:hover,\n        .option-list li button.active {\n          cursor: pointer;\n          background: var(--dt-multi-select-option-hover-background, #f5f5f5);\n        }\n      `,\n      css`\n        input {\n          color: var(--dt-form-text-color, #000);\n          appearance: none;\n          background-color: var(--dt-location-map-background-color, #fefefe);\n          border: 1px solid var(--dt-location-map-border-color, #fefefe);\n          border-radius: var(--dt-location-map-border-radius, 0);\n          box-shadow: var(\n            --dt-location-map-box-shadow,\n            var(\n              --dt-form-input-box-shadow,\n              inset 0 1px 2px hsl(0deg 0% 4% / 10%)\n            )\n          );\n          box-sizing: border-box;\n          display: block;\n          font-family: inherit;\n          font-size: 1rem;\n          font-weight: 300;\n          line-height: 1.5;\n          margin: 0;\n          padding: var(--dt-form-padding, 0.5333333333rem);\n          transition: var(\n            --dt-form-transition,\n            box-shadow 0.5s,\n            border-color 0.25s ease-in-out\n          );\n        }\n        input:disabled,\n        input[readonly],\n        textarea:disabled,\n        textarea[readonly] {\n          background-color: var(\n            --dt-text-disabled-background-color,\n            var(--dt-form-disabled-background-color, #e6e6e6)\n          );\n          cursor: not-allowed;\n        }\n        input.disabled {\n          color: var(--dt-text-placeholder-color, #999);\n        }\n        input:focus-within,\n        input:focus-visible {\n          outline: none;\n        }\n        input::placeholder {\n          color: var(--dt-text-placeholder-color, #999);\n          text-transform: var(--dt-text-placeholder-transform, none);\n          font-size: var(--dt-text-placeholder-font-size, 1rem);\n          font-weight: var(--dt-text-placeholder-font-weight, 400);\n          letter-spacing: var(--dt-text-placeholder-letter-spacing, normal);\n        }\n        input.invalid {\n          border-color: var(--dt-text-border-color-alert, var(--alert-color));\n        }\n\n        .field-container {\n          display: flex;\n          margin-bottom: 0.5rem;\n        }\n        .field-container input {\n          flex-grow: 1;\n        }\n        .field-container .input-addon {\n          flex-shrink: 1;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          aspect-ratio: 1/1;\n          padding: 10px;\n          border: solid 1px gray;\n          border-collapse: collapse;\n          color: var(--dt-location-map-button-color, #cc4b37);\n          background-color: var(--dt-location-map-background-color, buttonface);\n          border: 1px solid var(--dt-location-map-border-color, #fefefe);\n          border-radius: var(--dt-location-map-border-radius, 0);\n          box-shadow: var(\n            --dt-location-map-box-shadow,\n            var(\n              --dt-form-input-box-shadow,\n              inset 0 1px 2px hsl(0deg 0% 4% / 10%)\n            )\n          );\n        }\n        .field-container .input-addon:hover {\n          background-color: var(--dt-location-map-button-hover-background-color, #cc4b37);\n          color: var(--dt-location-map-button-hover-color, #ffffff);\n        }\n\n        .input-addon:disabled {\n          background-color: var(--dt-form-disabled-background-color);\n          color: var(--dt-text-placeholder-color, #999);\n        }\n        .input-addon:disabled:hover {\n          background-color: var(--dt-form-disabled-background-color);\n          color: var(--dt-text-placeholder-color, #999);\n          cursor: not-allowed;\n        }\n      `,\n      css`\n        /* === Inline Icons === */\n        .icon-overlay {\n          position: absolute;\n          inset-inline-end: 1rem;\n          top: 0;\n          inset-inline-end: 3rem;\n          height: 100%;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n        }\n\n        .icon-overlay.alert {\n          color: var(--alert-color);\n        }\n        .icon-overlay.success {\n          color: var(--success-color);\n        }\n      `,\n    ];\n  }\n\n  constructor() {\n    super();\n    this.activeIndex = -1;\n    this.filteredOptions = [];\n    this.detectTap = false;\n    this.debounceTimer = null;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.addEventListener('autofocus', async () => {\n      // wait for render to complete\n      await this.updateComplete;\n\n      const input = this.shadowRoot.querySelector('input');\n      if (input) {\n        input.focus();\n      }\n    });\n\n    if (this.mapboxToken) {\n      this.mapboxService = new MapboxService(this.mapboxToken);\n    }\n\n    if (this.googleToken) {\n      this.googleGeocodeService = new GoogleGeocodeService(this.googleToken, window, document);\n    }\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.removeEventListener('autofocus', this.handleAutofocus);\n  }\n\n  updated() {\n    this._scrollOptionListToActive();\n\n    // set variable with width of container for truncating selected options via CSS\n    const container = this.shadowRoot.querySelector('.input-group');\n    const currentValue = container.style.getPropertyValue('--container-width');\n    if (!currentValue) {\n      container.style.setProperty(\n        '--container-width',\n        `${container.clientWidth}px`\n      );\n    }\n  }\n\n  /**\n   * When navigating via keyboard, keep active element within visible area of option list\n   * @private\n   */\n  _scrollOptionListToActive() {\n    const optionList = this.shadowRoot.querySelector('.option-list');\n    const activeEl = this.shadowRoot.querySelector('button.active');\n    if (optionList && activeEl) {\n      const elTop = activeEl.offsetTop;\n      const elBottom = activeEl.offsetTop + activeEl.clientHeight;\n      const listTop = optionList.scrollTop;\n      const listBottom = optionList.scrollTop + optionList.clientHeight;\n      if (elBottom > listBottom) {\n        // active element below visible area. scroll down\n        optionList.scrollTo({\n          top: elBottom - optionList.clientHeight,\n          behavior: 'smooth',\n        });\n      } else if (elTop < listTop) {\n        // active element above visible area. scroll up\n        optionList.scrollTo({ top: elTop, behavior: 'smooth' });\n      }\n    }\n  }\n\n  _clickOption(e) {\n    const target = e.currentTarget ?? e.target;\n    if (target && target.value) {\n      this._select(JSON.parse(target.value));\n    }\n  }\n\n  _touchStart(e) {\n    if (e.target) {\n      this.detectTap = false;\n    }\n  }\n\n  _touchMove(e) {\n    if (e.target) {\n      this.detectTap = true;\n    }\n  }\n\n  _touchEnd(e) {\n    if (!this.detectTap) {\n      if (e.target && e.target.value) {\n        this._clickOption(e);\n      }\n      this.detectTap = false;\n    }\n  }\n\n  _keyboardSelectOption() {\n    if (this.activeIndex > -1) {\n      if (this.activeIndex < this.filteredOptions.length) {\n        // select one of the options\n        this._select(this.filteredOptions[this.activeIndex]);\n      } else {\n        // select the Add New option\n        this._select({\n          value: this.query,\n          label: this.query,\n        })\n      }\n    }\n  }\n\n  async _select(metadata) {\n    if (metadata.place_id && this.googleGeocodeService) {\n      // Google Places autocomplete will give a place_id instead of geometry details,\n      // so we need to get those details by geocoding the full address from Place lookup\n      this.loading = true;\n      const place = await this.googleGeocodeService.getPlaceDetails(metadata.label, this.locale);\n      this.loading = false;\n      if (place) {\n        metadata.lat = place.geometry.location.lat;\n        metadata.lng = place.geometry.location.lng;\n        metadata.level = place.types && place.types.length ? place.types[0] : null;\n      }\n    }\n\n    // Create custom event with new/old values to pass to onchange function\n    const options = {\n      detail: {\n        metadata,\n      },\n      bubbles: false,\n    };\n    this.dispatchEvent(new CustomEvent('select', options));\n\n    // update value in this component\n    this.metadata = metadata;\n    const input = this.shadowRoot.querySelector('input');\n    if (input) {\n      input.value = metadata?.label;\n    }\n\n    this.open = false; // close options list\n    this.activeIndex = -1; // reset keyboard-selected option\n  }\n\n  get _focusTarget() {\n    let target = this._field;\n    if (this.metadata) {\n      target = this.shadowRoot.querySelector('button') || target;\n    }\n    return target;\n  }\n\n  _inputFocusIn() {\n    this.activeIndex = -1;\n  }\n\n  _inputFocusOut(e) {\n    // allow clicks on option list button to not close the option list\n    // Safari actually passes the parent <li> as the relatedTarget\n    if (\n      !e.relatedTarget ||\n      !['BUTTON', 'LI'].includes(e.relatedTarget.nodeName)\n    ) {\n      this.open = false;\n    }\n  }\n\n  _inputKeyDown(e) {\n    const keycode = e.keyCode || e.which;\n\n    switch (keycode) {\n      case 38: // arrow up\n        this.open = true;\n        this._listHighlightPrevious();\n        break;\n      case 40: // arrow down\n        this.open = true;\n        this._listHighlightNext();\n        break;\n      case 9: // tab\n        if (this.activeIndex < 0) {\n          // if pressing tab while no option is selected,\n          // close the list so you can go to next field\n          this.open = false;\n        } else {\n          e.preventDefault();\n        }\n        this._keyboardSelectOption();\n        break;\n      case 13: // enter\n        this._keyboardSelectOption();\n        break;\n      case 27: // escape\n        this.open = false;\n        this.activeIndex = -1;\n        break;\n      default:\n        this.open = true;\n        break;\n    }\n  }\n\n  _inputKeyUp(e) {\n    const keycode = e.keyCode || e.which;\n    const ignoredKeys = [9, 13]; // ignore tab & enter;\n    if (e.target.value && !ignoredKeys.includes(keycode)) {\n      this.open = true;\n    }\n    this.query = e.target.value;\n  }\n\n  _listHighlightNext() {\n    this.activeIndex = Math.min(\n      this.filteredOptions.length,\n      this.activeIndex + 1\n    );\n  }\n\n  _listHighlightPrevious() {\n    this.activeIndex = Math.max(0, this.activeIndex - 1);\n  }\n\n  /**\n   * Filter to options that:\n   *   1: are not selected\n   *   2: match the search query\n   * @private\n   */\n  async _filterOptions() {\n    if (this.query) {\n      if (this.googleToken && this.googleGeocodeService) {\n        this.loading = true;\n\n        try {\n          const predictions = await this.googleGeocodeService.getPlacePredictions(this.query, this.locale);\n\n          this.filteredOptions = (predictions || []).map((i) => ({\n            label: i.description,\n            place_id: i.place_id,\n            source: 'user',\n            raw: i,\n          }));\n\n          this.loading = false;\n        } catch (ex) {\n          console.error(ex);\n          this.error = true;\n          this.loading = false;\n          return;\n        }\n      } else if (this.mapboxToken && this.mapboxService) {\n        this.loading = true;\n\n        const results = await this.mapboxService.searchPlaces(this.query, this.locale);\n\n        this.filteredOptions = results.map((i) => ({\n          lng: i.center[0],\n          lat: i.center[1],\n          level: i.place_type[0],\n          label: i.place_name,\n          source: 'user'\n        }));\n\n        this.loading = false;\n      }\n    }\n    return this.filteredOptions;\n  }\n\n  willUpdate(props) {\n    super.willUpdate(props);\n\n    if (props) {\n      // // if query changes, trigger filter\n      const queryChanged = props.has('query');\n      if (queryChanged) {\n        this.error = false;\n        clearTimeout(this.debounceTimer);\n        this.debounceTimer = setTimeout(() => this._filterOptions(), 300);\n      }\n\n      // Set the containerHeight for dropdown positioning if it hasn't been set yet\n      if (\n        !this.containerHeight &&\n        this.shadowRoot.children &&\n        this.shadowRoot.children.length\n      ) {\n        const inputGroup = this.shadowRoot.querySelector('.input-group');\n        if (inputGroup) {\n          this.containerHeight = inputGroup.offsetHeight;\n        }\n      }\n    }\n  }\n\n  _change() {\n\n  }\n\n  _delete() {\n    const options = {\n      detail: {\n        metadata: this.metadata,\n      },\n      bubbles: false,\n    };\n    this.dispatchEvent(new CustomEvent('delete', options));\n  }\n\n  _openMapModal() {\n    this.shadowRoot.querySelector('dt-map-modal').dispatchEvent(new Event('open'));\n  }\n\n  async _onMapModalSubmit(e) {\n    if (e?.detail?.location?.lat) {\n      const { location } = e?.detail;\n      const { lat, lng } = location;\n\n      // reverse geocode location and save\n      if (this.googleGeocodeService) {\n        const results = await this.googleGeocodeService.reverseGeocode(lng, lat, this.locale);\n        if (results && results.length) {\n          const place = results[0];\n          this._select({\n            lng: place.geometry.location.lng,\n            lat: place.geometry.location.lat,\n            level: place.types && place.types.length ? place.types[0] : null,\n            label: place.formatted_address,\n            source: 'user',\n          });\n        }\n      } else if (this.mapboxService) {\n        const results = await this.mapboxService.reverseGeocode(lng, lat, this.locale);\n        if (results && results.length) {\n          const place = results[0];\n          this._select({\n            lng: place.center[0],\n            lat: place.center[1],\n            level: place.place_type[0],\n            label: place.place_name,\n            source: 'user',\n          });\n        }\n      }\n    }\n  }\n\n  _renderOption(opt, idx, label) {\n    return html`\n      <li tabindex=\"-1\">\n        <button\n          value=\"${JSON.stringify(opt)}\"\n          type=\"button\"\n          @click=\"${this._clickOption}\"\n          @touchstart=\"${this._touchStart}\"\n          @touchmove=\"${this._touchMove}\"\n          @touchend=\"${this._touchEnd}\"\n          tabindex=\"-1\"\n          class=\"${this.activeIndex > -1 && this.activeIndex === idx\n      ? 'active'\n      : ''}\"\n        >\n          ${label ?? opt.label}\n        </button>\n      </li>\n    `;\n  }\n\n  _renderOptions() {\n    let options = [];\n    if (!this.filteredOptions.length) {\n      if (this.loading) {\n        options.push(html`<li><div>${msg('Loading...')}</div></li>`);\n      } else {\n        options.push(html`<li><div>${msg('No Data Available')}</div></li>`);\n      }\n    } else {\n      options.push(...this.filteredOptions.map((opt, idx) => this._renderOption(opt, idx)));\n    }\n\n    options.push(this._renderOption({\n      value: this.query,\n      label: this.query,\n    }, (this.filteredOptions || []).length, html`<strong>${msg('Use')}: \"${this.query}\"</strong>`));\n    return options;\n  }\n\n  render() {\n    const optionListStyles = {\n      display: this.open ? 'block' : 'none',\n      top: this.containerHeight ? `${this.containerHeight}px` : '2.5rem',\n    };\n    const existingValue = !!this.metadata?.label;\n    const hasGeometry = this.metadata?.lat && this.metadata?.lng;\n    return html`\n      <div class=\"input-group\">\n        <div class=\"field-container\">\n          <input\n            type=\"text\"\n            class=\"${this.disabled ? 'disabled' : null}\"\n            placeholder=\"${this.placeholder}\"\n            .value=\"${this.metadata?.label}\"\n            .disabled=${(existingValue && hasGeometry) || this.disabled}\n            @focusin=\"${this._inputFocusIn}\"\n            @blur=\"${this._inputFocusOut}\"\n            @keydown=\"${this._inputKeyDown}\"\n            @keyup=\"${this._inputKeyUp}\"\n          />\n\n          ${existingValue && hasGeometry ? html`\n          <button\n            class=\"input-addon btn-map\"\n            @click=${this._openMapModal}\n            ?disabled=${this.disabled}\n          >\n            <dt-icon icon=\"mdi:map\"></dt-icon>\n          </button>\n          ` : null }\n          ${existingValue ? html`\n          <button\n            class=\"input-addon btn-delete\"\n            @click=${this._delete}\n            ?disabled=${this.disabled}\n          >\n            <dt-icon icon=\"mdi:trash-can-outline\"></dt-icon>\n          </button>\n          ` : html`\n          <button\n            class=\"input-addon btn-pin\"\n            @click=${this._openMapModal}\n            ?disabled=${this.disabled}\n          >\n            <dt-icon icon=\"mdi:map-marker-radius\"></dt-icon>\n          </button>\n          ` }\n        </div>\n        <ul class=\"option-list\" style=${styleMap(optionListStyles)}>\n          ${this._renderOptions()}\n        </ul>\n        ${(this.touched && this.invalid) || this.error\n          ? html`<dt-exclamation-circle class=\"icon-overlay alert\"></dt-exclamation-circle>`\n            : null}\n        ${this.loading\n          ? html`<dt-spinner class=\"icon-overlay\"></dt-spinner>` : null}\n        ${this.saved\n          ? html`<dt-checkmark class=\"icon-overlay success\"></dt-checkmark>` : null}\n      </div>\n\n      <dt-map-modal\n        .metadata=${this.metadata}\n        mapbox-token=\"${this.mapboxToken}\"\n        @submit=${this._onMapModalSubmit}\n      ></dt-map-modal>\n\n`;\n  }\n}\nwindow.customElements.define('dt-location-map-item', DtLocationMapItem);\n"],"names":["MapboxService","constructor","token","this","async","query","language","params","URLSearchParams","types","limit","access_token","apiUrl","encodeURI","response","fetch","method","headers","json","features","longitude","latitude","GoogleGeocodeService","window","document","google","maps","places","AutocompleteService","script","createElement","src","body","appendChild","service","predictions","getPlacePredictions","input","address","key","data","results","status","length","latlng","result_type","join","customElements","define","LitElement","properties","id","type","String","reflect","placeholder","mapboxToken","attribute","googleToken","metadata","Object","disabled","Boolean","open","state","activeIndex","Number","containerHeight","loading","saved","filteredOptions","Array","styles","css","super","detectTap","debounceTimer","connectedCallback","addEventListener","updateComplete","shadowRoot","querySelector","focus","mapboxService","googleGeocodeService","disconnectedCallback","removeEventListener","handleAutofocus","updated","_scrollOptionListToActive","container","style","getPropertyValue","setProperty","clientWidth","optionList","activeEl","elTop","offsetTop","elBottom","clientHeight","listTop","scrollTop","scrollTo","top","behavior","_clickOption","e","target","currentTarget","value","_select","JSON","parse","_touchStart","_touchMove","_touchEnd","_keyboardSelectOption","label","place_id","place","getPlaceDetails","locale","lat","geometry","location","lng","level","options","detail","bubbles","dispatchEvent","CustomEvent","_focusTarget","_field","_inputFocusIn","_inputFocusOut","relatedTarget","includes","nodeName","_inputKeyDown","keyCode","which","_listHighlightPrevious","_listHighlightNext","preventDefault","_inputKeyUp","keycode","Math","min","max","map","i","description","source","raw","ex","console","error","searchPlaces","center","place_type","place_name","willUpdate","props","has","clearTimeout","setTimeout","_filterOptions","children","inputGroup","offsetHeight","_change","_delete","_openMapModal","Event","reverseGeocode","formatted_address","_renderOption","opt","idx","html","stringify","_renderOptions","push","msg","render","optionListStyles","display","existingValue","hasGeometry","styleMap","touched","invalid","_onMapModalSubmit"],"mappings":"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"}