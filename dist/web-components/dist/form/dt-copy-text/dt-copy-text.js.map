{"version":3,"file":"dt-copy-text.js","sources":["../../../src/components/form/dt-copy-text/dt-copy-text.js"],"sourcesContent":["import { css, html } from 'lit';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport DtBase from '../../dt-base.js';\nimport DtFormBase from '../dt-form-base.js';\n\nexport class DtCopyText extends DtBase {\n  static get styles() {\n    return css`\n      :root {\n        font-size: inherit;\n      }\n\n      .copy-text {\n        --dt-form-text-color: #575757;\n        display: flex;\n        align-items: center;\n        position: relative;\n        width: calc(100% + 20px);\n      }\n\n      .copy-text__input {\n        flex: 1;\n      }\n\n      .copy_icon {\n        cursor: copy;\n        font-size: 16px;\n        display: block;\n        transform: translate(-24px, -5px);\n        width: 20px;\n      }\n\n      :host([dir='rtl']) .copy_icon {\n        transform: translate(24px, -5px);\n      }\n    `;\n  }\n\n  static get properties() {\n    return {\n      value: { type: String },\n      success: { type: Boolean },\n      error: { type: Boolean },\n    };\n  }\n\n  get inputStyles() {\n    if (this.success) {\n      return {\n        '--dt-text-border-color':\n          'var(--copy-text-success-color, var(--success-color))',\n        '--dt-form-text-color':\n          'var( --copy-text-success-color, var(--success-color))',\n        color: 'var( --copy-text-success-color, var(--success-color))',\n      };\n    }\n    if (this.error) {\n      return {\n        '---dt-text-border-color':\n          'var(--copy-text-alert-color, var(--alert-color))',\n        '--dt-form-text-color':\n          'var(--copy-text-alert-color, var(--alert-color))',\n      };\n    }\n\n    return {};\n  }\n\n  get icon() {\n    return this.success ? 'ic:round-check' : 'ic:round-content-copy';\n  }\n\n  async copy() {\n    try {\n      this.success = false;\n      this.error = false;\n      await navigator.clipboard.writeText(this.value);\n      this.success = true;\n      this.error = false;\n    } catch (err) {\n      console.log(err);\n      this.success = false;\n      this.error = true;\n    }\n  }\n\n  render() {\n    return html`\n      <div class=\"copy-text\" style=${styleMap(this.inputStyles)}>\n        <dt-text\n          class=\"copy-text__input\"\n          value=\"${this.value}\"\n          disabled\n        ></dt-text>\n        <dt-icon\n          class=\"copy_icon\"\n          icon=\"${this.icon}\"\n          @click=\"${this.copy}\"\n        ></dt-icon>\n      </div>\n    `;\n  }\n}\n\nwindow.customElements.define('dt-copy-text', DtCopyText);\n"],"names":["window","customElements","define","DtBase","styles","css","properties","value","type","String","success","Boolean","error","inputStyles","this","color","icon","async","navigator","clipboard","writeText","err","console","log","render","html","styleMap","copy"],"mappings":"yPAwGAA,OAAOC,eAAeC,OAAO,eAnGtB,cAAyBC,EACnBC,oBACT,OAAOC,CAAG,+TA6BX,CAEUC,wBACT,MAAO,CACLC,MAAO,CAAEC,KAAMC,QACfC,QAAS,CAAEF,KAAMG,SACjBC,MAAO,CAAEJ,KAAMG,SAElB,CAEGE,kBACF,OAAIC,KAAKJ,QACA,CACL,yBACE,uDACF,uBACE,wDACFK,MAAO,yDAGPD,KAAKF,MACA,CACL,0BACE,mDACF,uBACE,oDAIC,EACR,CAEGI,WACF,OAAOF,KAAKJ,QAAU,iBAAmB,uBAC1C,CAEDO,aACE,IACEH,KAAKJ,SAAU,EACfI,KAAKF,OAAQ,QACPM,UAAUC,UAAUC,UAAUN,KAAKP,OACzCO,KAAKJ,SAAU,EACfI,KAAKF,OAAQ,CAKd,CAJC,MAAOS,GACPC,QAAQC,IAAIF,GACZP,KAAKJ,SAAU,EACfI,KAAKF,OAAQ,CACd,CACF,CAEDY,SACE,OAAOC,CAAI,iCACsBC,EAASZ,KAAKD,0DAGhCC,KAAKP,yEAKNO,KAAKE,iBACHF,KAAKa,wBAItB"}