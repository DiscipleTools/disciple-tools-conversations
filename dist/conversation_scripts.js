/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@disciple.tools/web-components/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DtAlert: () => (/* reexport safe */ _src_components_layout_dt_alert_dt_alert_js__WEBPACK_IMPORTED_MODULE_18__.DtAlert),\n/* harmony export */   DtBase: () => (/* reexport safe */ _src_components_dt_base_js__WEBPACK_IMPORTED_MODULE_23__[\"default\"]),\n/* harmony export */   DtButton: () => (/* reexport safe */ _src_components_form_dt_button_dt_button_js__WEBPACK_IMPORTED_MODULE_0__.DtButton),\n/* harmony export */   DtChurchHealthCircle: () => (/* reexport safe */ _src_components_form_dt_church_health_circle_dt_church_health_circle_js__WEBPACK_IMPORTED_MODULE_1__.DtChurchHealthCircle),\n/* harmony export */   DtCommChannel: () => (/* reexport safe */ _src_components_form_dt_communication_channel_dt_comm_channel_js__WEBPACK_IMPORTED_MODULE_16__.DtCommChannel),\n/* harmony export */   DtConnection: () => (/* reexport safe */ _src_components_form_dt_connection_dt_connection_js__WEBPACK_IMPORTED_MODULE_2__.DtConnection),\n/* harmony export */   DtCopyText: () => (/* reexport safe */ _src_components_form_dt_copy_text_dt_copy_text_js__WEBPACK_IMPORTED_MODULE_3__.DtCopyText),\n/* harmony export */   DtDate: () => (/* reexport safe */ _src_components_form_dt_date_dt_date_js__WEBPACK_IMPORTED_MODULE_4__.DtDate),\n/* harmony export */   DtFormBase: () => (/* reexport safe */ _src_components_form_dt_form_base_js__WEBPACK_IMPORTED_MODULE_17__[\"default\"]),\n/* harmony export */   DtIcon: () => (/* reexport safe */ _src_components_icons_dt_icon_js__WEBPACK_IMPORTED_MODULE_22__.DtIcon),\n/* harmony export */   DtLabel: () => (/* reexport safe */ _src_components_form_dt_label_dt_label_js__WEBPACK_IMPORTED_MODULE_5__.DtLabel),\n/* harmony export */   DtList: () => (/* reexport safe */ _src_components_layout_dt_list_dt_list_js__WEBPACK_IMPORTED_MODULE_19__.DtList),\n/* harmony export */   DtLocation: () => (/* reexport safe */ _src_components_form_dt_location_dt_location_js__WEBPACK_IMPORTED_MODULE_6__.DtLocation),\n/* harmony export */   DtLocationMap: () => (/* reexport safe */ _src_components_form_dt_location_map_dt_location_map_js__WEBPACK_IMPORTED_MODULE_7__.DtLocationMap),\n/* harmony export */   DtMapModal: () => (/* reexport safe */ _src_components_form_dt_location_map_dt_map_modal_js__WEBPACK_IMPORTED_MODULE_8__.DtMapModal),\n/* harmony export */   DtModal: () => (/* reexport safe */ _src_components_layout_dt_modal_dt_modal_js__WEBPACK_IMPORTED_MODULE_20__.DtModal),\n/* harmony export */   DtMultiSelect: () => (/* reexport safe */ _src_components_form_dt_multi_select_dt_multi_select_js__WEBPACK_IMPORTED_MODULE_9__.DtMultiSelect),\n/* harmony export */   DtNumberField: () => (/* reexport safe */ _src_components_form_dt_number_dt_number_js__WEBPACK_IMPORTED_MODULE_10__.DtNumberField),\n/* harmony export */   DtSingleSelect: () => (/* reexport safe */ _src_components_form_dt_single_select_dt_single_select_js__WEBPACK_IMPORTED_MODULE_11__.DtSingleSelect),\n/* harmony export */   DtTags: () => (/* reexport safe */ _src_components_form_dt_tags_dt_tags_js__WEBPACK_IMPORTED_MODULE_12__.DtTags),\n/* harmony export */   DtText: () => (/* reexport safe */ _src_components_form_dt_text_dt_text_js__WEBPACK_IMPORTED_MODULE_13__.DtText),\n/* harmony export */   DtTextArea: () => (/* reexport safe */ _src_components_form_dt_textarea_dt_textarea_js__WEBPACK_IMPORTED_MODULE_14__.DtTextArea),\n/* harmony export */   DtTile: () => (/* reexport safe */ _src_components_layout_dt_tile_dt_tile_js__WEBPACK_IMPORTED_MODULE_21__.DtTile),\n/* harmony export */   DtToggle: () => (/* reexport safe */ _src_components_form_dt_toggle_dt_toggle_js__WEBPACK_IMPORTED_MODULE_15__.DtToggle)\n/* harmony export */ });\n/* harmony import */ var _src_components_form_dt_button_dt_button_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/components/form/dt-button/dt-button.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/dt-button/dt-button.js\");\n/* harmony import */ var _src_components_form_dt_church_health_circle_dt_church_health_circle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/components/form/dt-church-health-circle/dt-church-health-circle.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/dt-church-health-circle/dt-church-health-circle.js\");\n/* harmony import */ var _src_components_form_dt_connection_dt_connection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/components/form/dt-connection/dt-connection.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/dt-connection/dt-connection.js\");\n/* harmony import */ var _src_components_form_dt_copy_text_dt_copy_text_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/components/form/dt-copy-text/dt-copy-text.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/dt-copy-text/dt-copy-text.js\");\n/* harmony import */ var _src_components_form_dt_date_dt_date_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/components/form/dt-date/dt-date.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/dt-date/dt-date.js\");\n/* harmony import */ var _src_components_form_dt_label_dt_label_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/components/form/dt-label/dt-label.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/dt-label/dt-label.js\");\n/* harmony import */ var _src_components_form_dt_location_dt_location_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/components/form/dt-location/dt-location.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/dt-location/dt-location.js\");\n/* harmony import */ var _src_components_form_dt_location_map_dt_location_map_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./src/components/form/dt-location-map/dt-location-map.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/dt-location-map/dt-location-map.js\");\n/* harmony import */ var _src_components_form_dt_location_map_dt_map_modal_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./src/components/form/dt-location-map/dt-map-modal.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/dt-location-map/dt-map-modal.js\");\n/* harmony import */ var _src_components_form_dt_multi_select_dt_multi_select_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./src/components/form/dt-multi-select/dt-multi-select.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/dt-multi-select/dt-multi-select.js\");\n/* harmony import */ var _src_components_form_dt_number_dt_number_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./src/components/form/dt-number/dt-number.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/dt-number/dt-number.js\");\n/* harmony import */ var _src_components_form_dt_single_select_dt_single_select_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./src/components/form/dt-single-select/dt-single-select.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/dt-single-select/dt-single-select.js\");\n/* harmony import */ var _src_components_form_dt_tags_dt_tags_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./src/components/form/dt-tags/dt-tags.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/dt-tags/dt-tags.js\");\n/* harmony import */ var _src_components_form_dt_text_dt_text_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./src/components/form/dt-text/dt-text.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/dt-text/dt-text.js\");\n/* harmony import */ var _src_components_form_dt_textarea_dt_textarea_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./src/components/form/dt-textarea/dt-textarea.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/dt-textarea/dt-textarea.js\");\n/* harmony import */ var _src_components_form_dt_toggle_dt_toggle_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./src/components/form/dt-toggle/dt-toggle.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/dt-toggle/dt-toggle.js\");\n/* harmony import */ var _src_components_form_dt_communication_channel_dt_comm_channel_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./src/components/form/dt-communication-channel/dt-comm-channel.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/dt-communication-channel/dt-comm-channel.js\");\n/* harmony import */ var _src_components_form_dt_form_base_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./src/components/form/dt-form-base.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/dt-form-base.js\");\n/* harmony import */ var _src_components_layout_dt_alert_dt_alert_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./src/components/layout/dt-alert/dt-alert.js */ \"./node_modules/@disciple.tools/web-components/src/components/layout/dt-alert/dt-alert.js\");\n/* harmony import */ var _src_components_layout_dt_list_dt_list_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./src/components/layout/dt-list/dt-list.js */ \"./node_modules/@disciple.tools/web-components/src/components/layout/dt-list/dt-list.js\");\n/* harmony import */ var _src_components_layout_dt_modal_dt_modal_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./src/components/layout/dt-modal/dt-modal.js */ \"./node_modules/@disciple.tools/web-components/src/components/layout/dt-modal/dt-modal.js\");\n/* harmony import */ var _src_components_layout_dt_tile_dt_tile_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./src/components/layout/dt-tile/dt-tile.js */ \"./node_modules/@disciple.tools/web-components/src/components/layout/dt-tile/dt-tile.js\");\n/* harmony import */ var _src_components_icons_dt_icon_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./src/components/icons/dt-icon.js */ \"./node_modules/@disciple.tools/web-components/src/components/icons/dt-icon.js\");\n/* harmony import */ var _src_components_dt_base_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./src/components/dt-base.js */ \"./node_modules/@disciple.tools/web-components/src/components/dt-base.js\");\n/*\n  Form Components\n*/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n  Layout Components\n*/\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRpc2NpcGxlLnRvb2xzL3dlYi1jb21wb25lbnRzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUN3RTtBQUN3QztBQUM1QjtBQUNKO0FBQ2Q7QUFDRztBQUNTO0FBQ1c7QUFDTjtBQUNNO0FBQ1o7QUFDZTtBQUMxQjtBQUNBO0FBQ1k7QUFDTjtBQUMwQjs7QUFFcEI7O0FBRTlFO0FBQ0E7QUFDQTtBQUN1RTtBQUNIO0FBQ0c7QUFDSDtBQUNUOztBQUVLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGlzY2lwbGUtdG9vbHMtY29udmVyc2F0aW9ucy8uL25vZGVfbW9kdWxlcy9AZGlzY2lwbGUudG9vbHMvd2ViLWNvbXBvbmVudHMvaW5kZXguanM/NGE5MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICBGb3JtIENvbXBvbmVudHNcbiovXG5leHBvcnQgeyBEdEJ1dHRvbiB9IGZyb20gJy4vc3JjL2NvbXBvbmVudHMvZm9ybS9kdC1idXR0b24vZHQtYnV0dG9uLmpzJztcbmV4cG9ydCB7IER0Q2h1cmNoSGVhbHRoQ2lyY2xlIH0gZnJvbSAnLi9zcmMvY29tcG9uZW50cy9mb3JtL2R0LWNodXJjaC1oZWFsdGgtY2lyY2xlL2R0LWNodXJjaC1oZWFsdGgtY2lyY2xlLmpzJztcbmV4cG9ydCB7IER0Q29ubmVjdGlvbiB9IGZyb20gJy4vc3JjL2NvbXBvbmVudHMvZm9ybS9kdC1jb25uZWN0aW9uL2R0LWNvbm5lY3Rpb24uanMnO1xuZXhwb3J0IHsgRHRDb3B5VGV4dCB9IGZyb20gJy4vc3JjL2NvbXBvbmVudHMvZm9ybS9kdC1jb3B5LXRleHQvZHQtY29weS10ZXh0LmpzJztcbmV4cG9ydCB7IER0RGF0ZSB9IGZyb20gJy4vc3JjL2NvbXBvbmVudHMvZm9ybS9kdC1kYXRlL2R0LWRhdGUuanMnO1xuZXhwb3J0IHsgRHRMYWJlbCB9IGZyb20gJy4vc3JjL2NvbXBvbmVudHMvZm9ybS9kdC1sYWJlbC9kdC1sYWJlbC5qcyc7XG5leHBvcnQgeyBEdExvY2F0aW9uIH0gZnJvbSAnLi9zcmMvY29tcG9uZW50cy9mb3JtL2R0LWxvY2F0aW9uL2R0LWxvY2F0aW9uLmpzJztcbmV4cG9ydCB7IER0TG9jYXRpb25NYXAgfSBmcm9tICcuL3NyYy9jb21wb25lbnRzL2Zvcm0vZHQtbG9jYXRpb24tbWFwL2R0LWxvY2F0aW9uLW1hcC5qcyc7XG5leHBvcnQgeyBEdE1hcE1vZGFsIH0gZnJvbSAnLi9zcmMvY29tcG9uZW50cy9mb3JtL2R0LWxvY2F0aW9uLW1hcC9kdC1tYXAtbW9kYWwuanMnO1xuZXhwb3J0IHsgRHRNdWx0aVNlbGVjdCB9IGZyb20gJy4vc3JjL2NvbXBvbmVudHMvZm9ybS9kdC1tdWx0aS1zZWxlY3QvZHQtbXVsdGktc2VsZWN0LmpzJztcbmV4cG9ydCB7IER0TnVtYmVyRmllbGQgfSBmcm9tICcuL3NyYy9jb21wb25lbnRzL2Zvcm0vZHQtbnVtYmVyL2R0LW51bWJlci5qcyc7XG5leHBvcnQgeyBEdFNpbmdsZVNlbGVjdCB9IGZyb20gJy4vc3JjL2NvbXBvbmVudHMvZm9ybS9kdC1zaW5nbGUtc2VsZWN0L2R0LXNpbmdsZS1zZWxlY3QuanMnO1xuZXhwb3J0IHsgRHRUYWdzIH0gZnJvbSAnLi9zcmMvY29tcG9uZW50cy9mb3JtL2R0LXRhZ3MvZHQtdGFncy5qcyc7XG5leHBvcnQgeyBEdFRleHQgfSBmcm9tICcuL3NyYy9jb21wb25lbnRzL2Zvcm0vZHQtdGV4dC9kdC10ZXh0LmpzJztcbmV4cG9ydCB7IER0VGV4dEFyZWEgfSBmcm9tICcuL3NyYy9jb21wb25lbnRzL2Zvcm0vZHQtdGV4dGFyZWEvZHQtdGV4dGFyZWEuanMnO1xuZXhwb3J0IHsgRHRUb2dnbGUgfSBmcm9tICcuL3NyYy9jb21wb25lbnRzL2Zvcm0vZHQtdG9nZ2xlL2R0LXRvZ2dsZS5qcyc7XG5leHBvcnQgeyBEdENvbW1DaGFubmVsIH0gZnJvbSAnLi9zcmMvY29tcG9uZW50cy9mb3JtL2R0LWNvbW11bmljYXRpb24tY2hhbm5lbC9kdC1jb21tLWNoYW5uZWwuanMnO1xuXG5leHBvcnQgeyBkZWZhdWx0IGFzIER0Rm9ybUJhc2UgfSBmcm9tICcuL3NyYy9jb21wb25lbnRzL2Zvcm0vZHQtZm9ybS1iYXNlLmpzJztcblxuLypcbiAgTGF5b3V0IENvbXBvbmVudHNcbiovXG5leHBvcnQgeyBEdEFsZXJ0IH0gZnJvbSAnLi9zcmMvY29tcG9uZW50cy9sYXlvdXQvZHQtYWxlcnQvZHQtYWxlcnQuanMnO1xuZXhwb3J0IHsgRHRMaXN0IH0gZnJvbSAnLi9zcmMvY29tcG9uZW50cy9sYXlvdXQvZHQtbGlzdC9kdC1saXN0LmpzJztcbmV4cG9ydCB7IER0TW9kYWwgfSBmcm9tICcuL3NyYy9jb21wb25lbnRzL2xheW91dC9kdC1tb2RhbC9kdC1tb2RhbC5qcyc7XG5leHBvcnQgeyBEdFRpbGUgfSBmcm9tICcuL3NyYy9jb21wb25lbnRzL2xheW91dC9kdC10aWxlL2R0LXRpbGUuanMnO1xuZXhwb3J0IHsgRHRJY29uIH0gZnJvbSAnLi9zcmMvY29tcG9uZW50cy9pY29ucy9kdC1pY29uLmpzJztcblxuZXhwb3J0IHsgZGVmYXVsdCBhcyBEdEJhc2UgfSBmcm9tICcuL3NyYy9jb21wb25lbnRzL2R0LWJhc2UuanMnO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/index.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/components/dt-base.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/components/dt-base.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DtBase)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var _lit_localize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @lit/localize */ \"./node_modules/@lit/localize/lit-localize.js\");\n/* harmony import */ var _i18n_localization_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../i18n/localization.js */ \"./node_modules/@disciple.tools/web-components/src/i18n/localization.js\");\n/* harmony import */ var _services_apiService_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/apiService.js */ \"./node_modules/@disciple.tools/web-components/src/services/apiService.js\");\n/* harmony import */ var element_internals_polyfill__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! element-internals-polyfill */ \"./node_modules/element-internals-polyfill/dist/index.js\");\n\n\n\n\n\n // eslint-disable-line import/no-extraneous-dependencies\n\nclass DtBase extends lit__WEBPACK_IMPORTED_MODULE_0__.LitElement {\n  static get properties() {\n    return {\n      RTL: { type: String },\n      locale: { type: String },\n      apiRoot: { type: String, reflect: false },\n      postType: { type: String, reflect: false },\n      postID: { type: String, reflect: false },\n    };\n  }\n\n  /**\n   * return the element to proxy focus to\n   */\n  get _focusTarget() {\n    return this.shadowRoot.children[0] instanceof Element\n      ? this.shadowRoot.children[0]\n      : null;\n  }\n\n  constructor() {\n    super();\n    (0,_lit_localize__WEBPACK_IMPORTED_MODULE_1__.updateWhenLocaleChanges)(this);\n    this.addEventListener('focus', this._proxyFocus.bind(this));\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.apiRoot = this.apiRoot ? `${this.apiRoot}/`.replace('//', '/') : '/'; // ensure it ends with /\n    this.api = new _services_apiService_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.nonce, this.apiRoot);\n  }\n\n  willUpdate(props) {\n    // get RTL from closest parent with [dir] attribute\n    if (this.RTL === undefined) {\n      const dirEl = this.closest('[dir]');\n      if (dirEl) {\n        const dir = dirEl.getAttribute('dir');\n        if (dir) {\n          this.RTL = dir.toLowerCase() === 'rtl';\n        }\n      }\n    }\n\n    // get locale from closest parent with [lang] attribute\n    if (!this.locale) {\n      const langEl = this.closest('[lang]');\n      if (langEl) {\n        const lang = langEl.getAttribute('lang');\n        if (lang) {\n          this.locale = lang;\n        }\n      }\n    }\n\n    // if locale is changing, update lit-localize\n    if (props && props.has('locale') && this.locale) {\n      try {\n        (0,_i18n_localization_js__WEBPACK_IMPORTED_MODULE_2__.setLocale)(this.locale);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  }\n\n  /**\n   * Proxy focus to the focus target\n   * @returns\n   */\n  _proxyFocus() {\n    if (!this._focusTarget) {\n      return;\n    }\n\n    this._focusTarget.focus();\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRpc2NpcGxlLnRvb2xzL3dlYi1jb21wb25lbnRzL3NyYy9jb21wb25lbnRzL2R0LWJhc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWlDO0FBQ3VCO0FBQ0o7QUFDRDs7QUFFZixDQUFDOztBQUV0QixxQkFBcUIsMkNBQVU7QUFDOUM7QUFDQTtBQUNBLGFBQWEsY0FBYztBQUMzQixnQkFBZ0IsY0FBYztBQUM5QixpQkFBaUIsOEJBQThCO0FBQy9DLGtCQUFrQiw4QkFBOEI7QUFDaEQsZ0JBQWdCLDhCQUE4QjtBQUM5QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUksc0VBQXVCO0FBQzNCO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxxQ0FBcUMsYUFBYSw2QkFBNkI7QUFDL0UsbUJBQW1CLCtEQUFVO0FBQzdCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsUUFBUSxnRUFBUztBQUNqQixRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kaXNjaXBsZS10b29scy1jb252ZXJzYXRpb25zLy4vbm9kZV9tb2R1bGVzL0BkaXNjaXBsZS50b29scy93ZWItY29tcG9uZW50cy9zcmMvY29tcG9uZW50cy9kdC1iYXNlLmpzPzM2YzgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTGl0RWxlbWVudCB9IGZyb20gJ2xpdCc7XG5pbXBvcnQgeyB1cGRhdGVXaGVuTG9jYWxlQ2hhbmdlcyB9IGZyb20gJ0BsaXQvbG9jYWxpemUnO1xuaW1wb3J0IHsgc2V0TG9jYWxlIH0gZnJvbSAnLi4vaTE4bi9sb2NhbGl6YXRpb24uanMnO1xuaW1wb3J0IEFwaVNlcnZpY2UgZnJvbSAnLi4vc2VydmljZXMvYXBpU2VydmljZS5qcyc7XG5cbmltcG9ydCAnZWxlbWVudC1pbnRlcm5hbHMtcG9seWZpbGwnOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIGltcG9ydC9uby1leHRyYW5lb3VzLWRlcGVuZGVuY2llc1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEdEJhc2UgZXh0ZW5kcyBMaXRFbGVtZW50IHtcbiAgc3RhdGljIGdldCBwcm9wZXJ0aWVzKCkge1xuICAgIHJldHVybiB7XG4gICAgICBSVEw6IHsgdHlwZTogU3RyaW5nIH0sXG4gICAgICBsb2NhbGU6IHsgdHlwZTogU3RyaW5nIH0sXG4gICAgICBhcGlSb290OiB7IHR5cGU6IFN0cmluZywgcmVmbGVjdDogZmFsc2UgfSxcbiAgICAgIHBvc3RUeXBlOiB7IHR5cGU6IFN0cmluZywgcmVmbGVjdDogZmFsc2UgfSxcbiAgICAgIHBvc3RJRDogeyB0eXBlOiBTdHJpbmcsIHJlZmxlY3Q6IGZhbHNlIH0sXG4gICAgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiByZXR1cm4gdGhlIGVsZW1lbnQgdG8gcHJveHkgZm9jdXMgdG9cbiAgICovXG4gIGdldCBfZm9jdXNUYXJnZXQoKSB7XG4gICAgcmV0dXJuIHRoaXMuc2hhZG93Um9vdC5jaGlsZHJlblswXSBpbnN0YW5jZW9mIEVsZW1lbnRcbiAgICAgID8gdGhpcy5zaGFkb3dSb290LmNoaWxkcmVuWzBdXG4gICAgICA6IG51bGw7XG4gIH1cblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIHVwZGF0ZVdoZW5Mb2NhbGVDaGFuZ2VzKHRoaXMpO1xuICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcignZm9jdXMnLCB0aGlzLl9wcm94eUZvY3VzLmJpbmQodGhpcykpO1xuICB9XG5cbiAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgc3VwZXIuY29ubmVjdGVkQ2FsbGJhY2soKTtcblxuICAgIHRoaXMuYXBpUm9vdCA9IHRoaXMuYXBpUm9vdCA/IGAke3RoaXMuYXBpUm9vdH0vYC5yZXBsYWNlKCcvLycsICcvJykgOiAnLyc7IC8vIGVuc3VyZSBpdCBlbmRzIHdpdGggL1xuICAgIHRoaXMuYXBpID0gbmV3IEFwaVNlcnZpY2UodGhpcy5ub25jZSwgdGhpcy5hcGlSb290KTtcbiAgfVxuXG4gIHdpbGxVcGRhdGUocHJvcHMpIHtcbiAgICAvLyBnZXQgUlRMIGZyb20gY2xvc2VzdCBwYXJlbnQgd2l0aCBbZGlyXSBhdHRyaWJ1dGVcbiAgICBpZiAodGhpcy5SVEwgPT09IHVuZGVmaW5lZCkge1xuICAgICAgY29uc3QgZGlyRWwgPSB0aGlzLmNsb3Nlc3QoJ1tkaXJdJyk7XG4gICAgICBpZiAoZGlyRWwpIHtcbiAgICAgICAgY29uc3QgZGlyID0gZGlyRWwuZ2V0QXR0cmlidXRlKCdkaXInKTtcbiAgICAgICAgaWYgKGRpcikge1xuICAgICAgICAgIHRoaXMuUlRMID0gZGlyLnRvTG93ZXJDYXNlKCkgPT09ICdydGwnO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gZ2V0IGxvY2FsZSBmcm9tIGNsb3Nlc3QgcGFyZW50IHdpdGggW2xhbmddIGF0dHJpYnV0ZVxuICAgIGlmICghdGhpcy5sb2NhbGUpIHtcbiAgICAgIGNvbnN0IGxhbmdFbCA9IHRoaXMuY2xvc2VzdCgnW2xhbmddJyk7XG4gICAgICBpZiAobGFuZ0VsKSB7XG4gICAgICAgIGNvbnN0IGxhbmcgPSBsYW5nRWwuZ2V0QXR0cmlidXRlKCdsYW5nJyk7XG4gICAgICAgIGlmIChsYW5nKSB7XG4gICAgICAgICAgdGhpcy5sb2NhbGUgPSBsYW5nO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gaWYgbG9jYWxlIGlzIGNoYW5naW5nLCB1cGRhdGUgbGl0LWxvY2FsaXplXG4gICAgaWYgKHByb3BzICYmIHByb3BzLmhhcygnbG9jYWxlJykgJiYgdGhpcy5sb2NhbGUpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHNldExvY2FsZSh0aGlzLmxvY2FsZSk7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFByb3h5IGZvY3VzIHRvIHRoZSBmb2N1cyB0YXJnZXRcbiAgICogQHJldHVybnNcbiAgICovXG4gIF9wcm94eUZvY3VzKCkge1xuICAgIGlmICghdGhpcy5fZm9jdXNUYXJnZXQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLl9mb2N1c1RhcmdldC5mb2N1cygpO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/components/dt-base.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/components/form/dt-button/dt-button.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/components/form/dt-button/dt-button.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DtButton: () => (/* binding */ DtButton)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit/directives/class-map.js */ \"./node_modules/lit/directives/class-map.js\");\n/* harmony import */ var _dt_base_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../dt-base.js */ \"./node_modules/@disciple.tools/web-components/src/components/dt-base.js\");\n\n\n\n\nclass DtButton extends _dt_base_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n  static get styles() {\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)`\n      :host {\n        display: inline-flex;\n        width: fit-content;\n        height: fit-content;\n      }\n\n      .dt-button {\n        cursor: pointer;\n        display: flex;\n        padding: var(--dt-button-padding-y, 10px)\n          var(--dt-button-padding-x, 10px);\n        font-family: var(--dt-button-font-family);\n        font-size: var(--dt-button-font-size, 14px);\n        line-height: var(--dt-button-line-height, inherit);\n        font-weight: var(--dt-button-font-weight, 700);\n        background-color: var(\n          --dt-button-context-background-color,\n          var(--dt-button-background-color)\n        );\n        border: var(--dt-button-border-width, 1px) solid\n          var(--dt-button-context-border-color, var(--dt-button-border-color));\n        border-radius: var(--dt-button-border-radius, 10px);\n        box-shadow: var(\n          --dt-button-box-shadow,\n          --dt-button-context-box-shadow(0 2px 4px rgb(0 0 0 / 25%))\n        );\n        color: var(--dt-button-context-text-color, var(--dt-button-text-color));\n        text-rendering: optimizeLegibility;\n        gap: var(--dt-button-gap, 10px);\n        justify-content: var(--dt-button-justify-content, center);\n        align-content: var(--dt-button-align-content, center);\n        align-items: var(--dt-button-align-items, center);\n        text-decoration: var(\n          --dt-button-text-decoration,\n          var(--dt-button-context-text-decoration, none)\n        );\n        text-transform: var(--dt-button-text-transform, none);\n        letter-spacing: var(--dt-button-letter-spacing, normal);\n        width: var(--dt-button-width, 100%);\n        height: var(--dt-button-height, auto);\n        aspect-ratio: var(--dt-button-aspect-ratio, auto);\n        position: relative;\n      }\n\n      .dt-button.dt-button--outline {\n        background-color: transparent;\n        color: var(--dt-button-context-text-color, var(--text-color-inverse));\n      }\n\n      .dt-button--primary:not(.dt-button--outline) {\n        --dt-button-context-border-color: var(--primary-color);\n        --dt-button-context-background-color: var(--primary-color);\n        --dt-button-context-text-color: var(--dt-button-text-color-light);\n      }\n\n      .dt-button--link:not(.dt-button--outline) {\n        --dt-button-context-text-decoration: underline;\n        --dt-button-context-box-shadow: none;\n        --dt-button-context-border-color: transparent;\n        --dt-button-context-background-color: transparent;\n        --dt-button-context-text-color: var(--dt-button-text-color-dark);\n      }\n\n      .dt-button--alert:not(.dt-button--outline) {\n        --dt-button-context-border-color: var(--alert-color);\n        --dt-button-context-background-color: var(--alert-color);\n        --dt-button-context-text-color: var(--dt-button-text-color-light);\n      }\n\n      .dt-button--caution:not(.dt-button--outline) {\n        --dt-button-context-border-color: var(--caution-color);\n        --dt-button-context-background-color: var(--caution-color);\n        --dt-button-context-text-color: var(--dt-button-text-color-dark);\n      }\n\n      .dt-button--success:not(.dt-button--outline) {\n        --dt-button-context-border-color: var(--success-color);\n        --dt-button-context-background-color: var(--success-color);\n        --dt-button-context-text-color: var(--dt-button-text-color-light);\n      }\n\n      .dt-button--inactive:not(.dt-button--outline) {\n        --dt-button-context-border-color: var(--inactive-color);\n        --dt-button-context-background-color: var(--inactive-color);\n        --dt-button-context-text-color: var(--dt-button-text-color-light);\n      }\n\n      .dt-button--disabled:not(.dt-button--outline) {\n        --dt-button-context-border-color: var(--disabled-color);\n        --dt-button-context-background-color: var(--disabled-color);\n        --dt-button-context-text-color: var(--dt-button-text-color-dark);\n      }\n\n      .dt-button--primary.dt-button--outline {\n        --dt-button-context-border-color: var(--primary-color);\n        --dt-button-context-text-color: var(--primary-color);\n      }\n\n      .dt-button--alert.dt-button--outline {\n        --dt-button-context-border-color: var(--alert-color);\n        --dt-button-context-text-color: var(--alert-color);\n      }\n\n      .dt-button--caution.dt-button--outline {\n        --dt-button-context-border-color: var(--caution-color);\n        --dt-button-context-text-color: var(--caution-color);\n      }\n\n      .dt-button--success.dt-button--outline {\n        --dt-button-context-border-color: var(--success-color);\n        --dt-button-context-text-color: var(--success-color);\n      }\n\n      .dt-button--inactive.dt-button--outline {\n        --dt-button-context-border-color: var(--inactive-color);\n      }\n\n      .dt-button--disabled.dt-button--outline {\n        --dt-button-context-border-color: var(--disabled-color);\n      }\n\n      .dt-button.dt-button--rounded {\n        --dt-button-border-radius: 50%;\n        --dt-button-padding-x: 0px;\n        --dt-button-padding-y: 0px;\n        --dt-button-aspect-ratio: var(--dt-button-rounded-aspect-ratio, 1/1);\n      }\n\n      button.toggle {\n        margin-inline-end: 0;\n        margin-inline-start: auto;\n        background: none;\n        border: none;\n        color: inherit;\n        cursor: pointer;\n        display: flex;\n        align-items: center;\n      }\n    `;\n  }\n\n  static get properties() {\n    return {\n      context: { type: String },\n      type: { type: String },\n      outline: { type: Boolean },\n      href: { type: String },\n      title: { type: String },\n      onClick: { type: Function },\n      rounded: { type: Boolean },\n      confirm: { type: String },\n    };\n  }\n\n  get classes() {\n    const classes = {\n      'dt-button': true,\n      'dt-button--outline': this.outline,\n      'dt-button--rounded': this.rounded,\n    };\n    const contextClass = `dt-button--${this.context}`;\n    classes[contextClass] = true;\n    return classes;\n  }\n\n  constructor() {\n    super();\n\n    this.context = 'default';\n  }\n\n  handleClick(e) {\n    if (this.confirm) {\n      if (!confirm(this.confirm)) {\n        e.preventDefault();\n        return;\n      }\n    }\n    if (this.onClick) {\n      e.preventDefault();\n      this.onClick(e);\n    } else {\n      const form = this.closest('form');\n      if (form) {\n        form.submit();\n      }\n    }\n  }\n\n  _dismiss() {\n    this.hide = true;\n  }\n\n  render() {\n    if (this.hide) {\n      return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)``;\n    }\n\n    if (this.href) {\n      return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n        <a\n          class=${(0,lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_1__.classMap)(this.classes)}\n          href=${this.href}\n          title=${this.title}\n          type=${this.type}\n          @click=${() => this.handleClick()}\n        >\n          <div>\n            <slot></slot>\n          </div>\n        </a>\n      `;\n    }\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      <button\n        class=${(0,lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_1__.classMap)(this.classes)}\n        title=${this.title}\n        type=${this.type}\n        @click=${() => this.handleClick()}\n      >\n        <div>\n          <slot></slot>\n        </div>\n      </button>\n    `;\n  }\n}\n\nwindow.customElements.define('dt-button', DtButton);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/components/form/dt-button/dt-button.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/components/form/dt-church-health-circle/dt-church-health-circle-icon.js":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/components/form/dt-church-health-circle/dt-church-health-circle-icon.js ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit/directives/class-map.js */ \"./node_modules/lit/directives/class-map.js\");\n/* harmony import */ var _dt_base_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../dt-base.js */ \"./node_modules/@disciple.tools/web-components/src/components/dt-base.js\");\n\n\n\n\nclass DtChurchHealthIcon extends _dt_base_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n  static get styles() {\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)`\n      root {\n        display: block;\n      }\n      .health-item img {\n        width: var(--d);\n        height: var(--d);\n        filter: grayscale(1) opacity(0.75);\n      }\n      .health-item--active img {\n        filter: none !important;\n      }\n    `;\n  }\n\n  static get properties() {\n    return {\n      key: { type: String },\n      metric: { type: Object },\n      group: { type: Object },\n      active: { type: Boolean, reflect: true },\n      missingIcon: { type: String },\n      handleSave: { type: Function },\n    };\n  }\n\n  render() {\n    const {\n      metric,\n      active,\n      missingIcon = `${window.wpApiShare.template_dir}/dt-assets/images/groups/missing.svg`,\n    } = this;\n\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<div\n      class=${(0,lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_1__.classMap)({\n        'health-item': true,\n        'health-item--active': active,\n      })}\n      title=\"${metric.description}\"\n      @click=\"${this._handleClick}\"\n    >\n      <img src=\"${metric.icon ? metric.icon : missingIcon}\" />\n    </div>`;\n  }\n\n  async _handleClick() {\n    if (!this.handleSave) {\n      return;\n    }\n\n    const active = !this.active;\n    this.active = active;\n    const payload = {\n      health_metrics: {\n        values: [\n          {\n            value: this.key,\n            delete: !active,\n          },\n        ],\n      },\n    };\n\n    try {\n      await this.handleSave(this.group.ID, payload);\n    } catch (err) {\n      console.error(err);\n      return;\n    }\n\n    if (active) {\n      this.group.health_metrics.push(this.key);\n    } else {\n      this.group.health_metrics.pop(this.key);\n    }\n  }\n}\n\nwindow.customElements.define('dt-church-health-icon', DtChurchHealthIcon);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRpc2NpcGxlLnRvb2xzL3dlYi1jb21wb25lbnRzL3NyYy9jb21wb25lbnRzL2Zvcm0vZHQtY2h1cmNoLWhlYWx0aC1jaXJjbGUvZHQtY2h1cmNoLWhlYWx0aC1jaXJjbGUtaWNvbi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWdDO0FBQ3VCO0FBQ2pCOztBQUV0QyxpQ0FBaUMsbURBQU07QUFDdkM7QUFDQSxXQUFXLHdDQUFHO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGFBQWEsY0FBYztBQUMzQixnQkFBZ0IsY0FBYztBQUM5QixlQUFlLGNBQWM7QUFDN0IsZ0JBQWdCLDhCQUE4QjtBQUM5QyxxQkFBcUIsY0FBYztBQUNuQyxvQkFBb0IsZ0JBQWdCO0FBQ3BDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsK0JBQStCO0FBQ3RELE1BQU07O0FBRU4sV0FBVyx5Q0FBSTtBQUNmLGNBQWMscUVBQVE7QUFDdEI7QUFDQTtBQUNBLE9BQU87QUFDUCxlQUFlLG1CQUFtQjtBQUNsQyxnQkFBZ0Isa0JBQWtCO0FBQ2xDO0FBQ0Esa0JBQWtCLHdDQUF3QztBQUMxRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Rpc2NpcGxlLXRvb2xzLWNvbnZlcnNhdGlvbnMvLi9ub2RlX21vZHVsZXMvQGRpc2NpcGxlLnRvb2xzL3dlYi1jb21wb25lbnRzL3NyYy9jb21wb25lbnRzL2Zvcm0vZHQtY2h1cmNoLWhlYWx0aC1jaXJjbGUvZHQtY2h1cmNoLWhlYWx0aC1jaXJjbGUtaWNvbi5qcz8wMDY2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNzcywgaHRtbCB9IGZyb20gJ2xpdCc7XG5pbXBvcnQgeyBjbGFzc01hcCB9IGZyb20gJ2xpdC9kaXJlY3RpdmVzL2NsYXNzLW1hcC5qcyc7XG5pbXBvcnQgRHRCYXNlIGZyb20gJy4uLy4uL2R0LWJhc2UuanMnO1xuXG5jbGFzcyBEdENodXJjaEhlYWx0aEljb24gZXh0ZW5kcyBEdEJhc2Uge1xuICBzdGF0aWMgZ2V0IHN0eWxlcygpIHtcbiAgICByZXR1cm4gY3NzYFxuICAgICAgcm9vdCB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgfVxuICAgICAgLmhlYWx0aC1pdGVtIGltZyB7XG4gICAgICAgIHdpZHRoOiB2YXIoLS1kKTtcbiAgICAgICAgaGVpZ2h0OiB2YXIoLS1kKTtcbiAgICAgICAgZmlsdGVyOiBncmF5c2NhbGUoMSkgb3BhY2l0eSgwLjc1KTtcbiAgICAgIH1cbiAgICAgIC5oZWFsdGgtaXRlbS0tYWN0aXZlIGltZyB7XG4gICAgICAgIGZpbHRlcjogbm9uZSAhaW1wb3J0YW50O1xuICAgICAgfVxuICAgIGA7XG4gIH1cblxuICBzdGF0aWMgZ2V0IHByb3BlcnRpZXMoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGtleTogeyB0eXBlOiBTdHJpbmcgfSxcbiAgICAgIG1ldHJpYzogeyB0eXBlOiBPYmplY3QgfSxcbiAgICAgIGdyb3VwOiB7IHR5cGU6IE9iamVjdCB9LFxuICAgICAgYWN0aXZlOiB7IHR5cGU6IEJvb2xlYW4sIHJlZmxlY3Q6IHRydWUgfSxcbiAgICAgIG1pc3NpbmdJY29uOiB7IHR5cGU6IFN0cmluZyB9LFxuICAgICAgaGFuZGxlU2F2ZTogeyB0eXBlOiBGdW5jdGlvbiB9LFxuICAgIH07XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge1xuICAgICAgbWV0cmljLFxuICAgICAgYWN0aXZlLFxuICAgICAgbWlzc2luZ0ljb24gPSBgJHt3aW5kb3cud3BBcGlTaGFyZS50ZW1wbGF0ZV9kaXJ9L2R0LWFzc2V0cy9pbWFnZXMvZ3JvdXBzL21pc3Npbmcuc3ZnYCxcbiAgICB9ID0gdGhpcztcblxuICAgIHJldHVybiBodG1sYDxkaXZcbiAgICAgIGNsYXNzPSR7Y2xhc3NNYXAoe1xuICAgICAgICAnaGVhbHRoLWl0ZW0nOiB0cnVlLFxuICAgICAgICAnaGVhbHRoLWl0ZW0tLWFjdGl2ZSc6IGFjdGl2ZSxcbiAgICAgIH0pfVxuICAgICAgdGl0bGU9XCIke21ldHJpYy5kZXNjcmlwdGlvbn1cIlxuICAgICAgQGNsaWNrPVwiJHt0aGlzLl9oYW5kbGVDbGlja31cIlxuICAgID5cbiAgICAgIDxpbWcgc3JjPVwiJHttZXRyaWMuaWNvbiA/IG1ldHJpYy5pY29uIDogbWlzc2luZ0ljb259XCIgLz5cbiAgICA8L2Rpdj5gO1xuICB9XG5cbiAgYXN5bmMgX2hhbmRsZUNsaWNrKCkge1xuICAgIGlmICghdGhpcy5oYW5kbGVTYXZlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgYWN0aXZlID0gIXRoaXMuYWN0aXZlO1xuICAgIHRoaXMuYWN0aXZlID0gYWN0aXZlO1xuICAgIGNvbnN0IHBheWxvYWQgPSB7XG4gICAgICBoZWFsdGhfbWV0cmljczoge1xuICAgICAgICB2YWx1ZXM6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICB2YWx1ZTogdGhpcy5rZXksXG4gICAgICAgICAgICBkZWxldGU6ICFhY3RpdmUsXG4gICAgICAgICAgfSxcbiAgICAgICAgXSxcbiAgICAgIH0sXG4gICAgfTtcblxuICAgIHRyeSB7XG4gICAgICBhd2FpdCB0aGlzLmhhbmRsZVNhdmUodGhpcy5ncm91cC5JRCwgcGF5bG9hZCk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBjb25zb2xlLmVycm9yKGVycik7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKGFjdGl2ZSkge1xuICAgICAgdGhpcy5ncm91cC5oZWFsdGhfbWV0cmljcy5wdXNoKHRoaXMua2V5KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5ncm91cC5oZWFsdGhfbWV0cmljcy5wb3AodGhpcy5rZXkpO1xuICAgIH1cbiAgfVxufVxuXG53aW5kb3cuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdkdC1jaHVyY2gtaGVhbHRoLWljb24nLCBEdENodXJjaEhlYWx0aEljb24pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/components/form/dt-church-health-circle/dt-church-health-circle-icon.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/components/form/dt-church-health-circle/dt-church-health-circle.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/components/form/dt-church-health-circle/dt-church-health-circle.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DtChurchHealthCircle: () => (/* binding */ DtChurchHealthCircle)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit/directives/class-map.js */ \"./node_modules/lit/directives/class-map.js\");\n/* harmony import */ var _dt_base_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../dt-base.js */ \"./node_modules/@disciple.tools/web-components/src/components/dt-base.js\");\n/* harmony import */ var _dt_church_health_circle_icon_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dt-church-health-circle-icon.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/dt-church-health-circle/dt-church-health-circle-icon.js\");\n\n\n\n\n\nclass DtChurchHealthCircle extends _dt_base_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n  static get styles() {\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)`\n      .health-circle__container {\n        --d: 55px; /* image size */\n        --rel: 1; /* how much extra space we want between images, 1 = one image size */\n        --r: calc(1 * var(--d) / var(--tan)); /* circle radius */\n        --s: calc(3 * var(--r));\n        margin: 1rem auto;\n        display: flex;\n        justify-content: center;\n        align-items: baseline;\n        padding-top: 100%;\n        height: 0;\n        position: relative;\n        overflow: visible;\n      }\n\n      .health-circle {\n        display: block;\n        border-radius: 100%;\n        border: 3px darkgray dashed;\n        max-width: 100%;\n        position: absolute;\n        transform: translate(-50%, -50%);\n        left: 50%;\n        top: 50%;\n        width: 100%;\n        height: 100%;\n      }\n\n      @media (max-width: 519px) {\n        .health-circle__container {\n          --d: 40px; /* image size */\n        }\n\n        .health-circle {\n          max-width: 300px;\n          max-height: 300px;\n        }\n      }\n\n      @media (max-width: 400px) {\n        .health-circle__container {\n          --d: 30px; /* image size */\n        }\n\n        .health-circle {\n          max-width: 250px;\n          max-height: 250px;\n        }\n      }\n\n      @media (max-width: 321px) {\n        .health-circle__container {\n          --d: 25px; /* image size */\n        }\n\n        .health-circle {\n          max-width: 225px;\n          max-height: 225px;\n        }\n      }\n\n      .health-circle__grid {\n        display: inline-block;\n        position: relative;\n        height: 100%;\n        width: 100%;\n        margin-left: auto;\n        margin-right: auto;\n        position: relative;\n        width: var(--s);\n        max-width: 100%;\n      }\n\n      .health-circle--committed {\n        border: 3px #4caf50 solid !important;\n      }\n\n      dt-church-health-icon {\n        position: absolute;\n        border-radius: 100%;\n        font-size: 16px;\n        color: black;\n        text-align: center;\n        font-style: italic;\n        cursor: pointer;\n        top: 50%;\n        left: 50%;\n        margin: calc(-0.5 * var(--d));\n        width: var(--d);\n        height: var(--d);\n        --az: calc(var(--i) * 1turn / var(--m));\n        transform: rotate(var(--az)) translate(var(--r)) rotate(calc(-1 * var(--az)));\n      }\n    `;\n  }\n\n  static get properties() {\n    return {\n      groupId: { type: Number },\n      group: { type: Object, reflect: false },\n      settings: { type: Object, reflect: false },\n      errorMessage: { type: String, attribute: false },\n      missingIcon: { type: String },\n      handleSave: { type: Function },\n    };\n  }\n\n  /**\n   * Map fields settings as an array and filter out church commitment\n   */\n  get metrics() {\n    const settings = this.settings || [];\n\n    if (!Object.values(settings).length) {\n      return [];\n    }\n\n    const entries = Object.entries(settings);\n\n    //We don't want to show church commitment in the circle\n    return entries.filter(([key, value]) => key !== 'church_commitment');\n  }\n\n  get isCommited() {\n    if (!this.group) {\n      return false;\n    }\n\n    if (!this.group.health_metrics) {\n      return false;\n    }\n\n    return this.group.health_metrics.includes('church_commitment');\n  }\n\n  /**\n   * Fetch group data on component load if it's not provided as a property\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.fetch();\n  }\n\n  adoptedCallback() {\n    this.distributeItems();\n  }\n\n  /**\n   * Position the items after the component is rendered\n   */\n  updated() {\n    this.distributeItems();\n  }\n\n  /**\n   * Fetch the group and settings data if not provided by the server\n   */\n  async fetch() {\n    try {\n      const promises = [this.fetchSettings(), this.fetchGroup()];\n      let [settings, group] = await Promise.all(promises);\n      this.settings = settings;\n      this.post = group;\n      if (!settings) {\n        this.errorMessage = 'Error loading settings';\n      }\n      if (!group) {\n        this.errorMessage = 'Error loading group';\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  /**\n   * Fetch the group data if it's not already set\n   * @returns\n   */\n  fetchGroup() {\n    if (this.group) {\n      return Promise.resolve(this.group);\n    }\n    fetch(`/wp-json/dt-posts/v2/groups/${this.groupId}`).then(response =>\n      response.json()\n    );\n  }\n\n  /**\n   * Fetch the settings data if not already set\n   * @returns\n   */\n  fetchSettings() {\n    if (this.settings) {\n      return Promise.resolve(this.settings);\n    }\n    return fetch('/wp-json/dt-posts/v2/groups/settings').then(response =>\n      response.json()\n    );\n  }\n\n  /**\n   * Find a metric by key\n   * @param {*} key\n   * @returns\n   */\n  findMetric(key) {\n    const metric = this.metrics.find(item => item.key === key);\n    return metric ? metric.value : null;\n  }\n\n  /**\n   * Render the component\n   * @returns\n   */\n  render() {\n    // Show the spinner if we don't have data\n    if (!this.group || !this.metrics.length) {\n      return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<dt-spinner></dt-spinner>`;\n    }\n\n    // Setup data\n    const practicedItems = this.group.health_metrics || [];\n\n    // Show the error message if we have one\n    if (this.errorMessage) {\n      (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<dt-alert type=\"error\">${this.errorMessage}</dt-alert>`;\n    }\n\n    // Render the group circle\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      <div class=\"health-circle__wrapper\">\n        <div class=\"health-circle__container\">\n          <div\n            class=${(0,lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_1__.classMap)({\n              'health-circle': true,\n              'health-circle--committed': this.isCommited,\n            })}\n          >\n            <div class=\"health-circle__grid\">\n              ${this.metrics.map(\n                ([key, metric], index) =>\n                  (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<dt-church-health-icon\n                    key=\"${key}\"\n                    .group=\"${this.group}\"\n                    .metric=${metric}\n                    .active=${practicedItems.indexOf(key) !== -1}\n                    .style=\"--i: ${index + 1}\"\n                    .missingIcon=\"${this.missingIcon}\"\n                    .handleSave=\"${this.handleSave}\"\n                  >\n                  </dt-church-health-icon>`\n              )}\n            </div>\n          </div>\n        </div>\n\n        <dt-toggle\n          name=\"church-commitment\"\n          label=\"${this.settings.church_commitment.label}\"\n          requiredmessage=\"\"\n          icon=\"https://cdn-icons-png.flaticon.com/512/1077/1077114.png\"\n          iconalttext=\"Icon Alt Text\"\n          privatelabel=\"\"\n          @click=\"${this.toggleClick}\"\n          ?checked=${this.isCommited}\n        >\n        </dt-toggle>\n      </div>\n    `;\n  }\n\n  /**\n   * Dynamically distribute items in Church Health Circle\n   * according to amount of health metric elements\n   */\n  distributeItems() {\n    const container = this.renderRoot.querySelector(\n      '.health-circle__container'\n    );\n    const items = container.querySelectorAll('dt-church-health-icon');\n\n    let n_items = items.length;\n    let m = n_items; /* how many are ON the circle */\n    let tan = Math.tan(Math.PI / m); /* tangent of half the base angle */\n\n    container.style.setProperty('--m', m);\n    container.style.setProperty('--tan', + tan.toFixed(2));\n  }\n\n  async toggleClick(e) {\n    const { handleSave } = this;\n\n    if (!handleSave) {\n      return;\n    }\n\n    let toggle = this.renderRoot.querySelector('dt-toggle');\n    let church_commitment = toggle.toggleAttribute('checked');\n    if (!this.group.health_metrics) {\n      this.group.health_metrics = [];\n    }\n\n    const payload = {\n      health_metrics: {\n        values: [\n          {\n            value: 'church_commitment',\n            delete: !church_commitment,\n          },\n        ],\n      },\n    };\n\n    try {\n      await handleSave(this.group.ID, payload);\n    } catch (err) {\n      toggle.toggleAttribute('checked', !church_commitment);\n      console.error(err);\n      return;\n    }\n\n    if (church_commitment) {\n      this.group.health_metrics.push('church_commitment');\n    } else {\n      this.group.health_metrics.pop('church_commitment');\n    }\n\n    this.requestUpdate();\n  }\n\n  _isChecked() {\n    if (Object.hasOwn(this.group, 'health_metrics')) {\n      if (this.group.health_metrics.includes('church_commitment')) {\n        return (this.isChurch = true);\n      }\n      return (this.isChurch = false);\n    }\n    return (this.isChurch = false);\n  }\n}\n\nwindow.customElements.define('dt-church-health-circle', DtChurchHealthCircle);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/components/form/dt-church-health-circle/dt-church-health-circle.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/components/form/dt-communication-channel/dt-comm-channel.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/components/form/dt-communication-channel/dt-comm-channel.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DtCommChannel: () => (/* binding */ DtCommChannel)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit/directives/class-map.js */ \"./node_modules/lit/directives/class-map.js\");\n/* harmony import */ var _dt_text_dt_text_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../dt-text/dt-text.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/dt-text/dt-text.js\");\n\n\n\n\n\nclass DtCommChannel extends _dt_text_dt_text_js__WEBPACK_IMPORTED_MODULE_2__.DtText {\n  static get styles() {\n    return [\n      ...super.styles,\n      (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)`\n        :host {\n          display: block;\n        }\n       .label-wrapper {\n          display: flex;\n          flex-direction: row;\n          flex-wrap: wrap;\n          width: 100%;\n          align-items: center;\n       }\n       .add-btn {\n          background-color: transparent;\n          border: none;\n       }\n        .add-icon {\n          color: var(--dt-comm-channel-add-btn-color, var(--success-color));\n          height: 1.75rem;\n          margin: 0 1rem\n        }\n        .input-group {\n          display: flex;\n          list-style-type: none;\n          margin: 0;\n          padding: 0;\n        }\n        .input-group li {\n          display: flex;\n          width: 100%;\n          flex-direction: row;\n          align-content: center;\n          justify-content: center;\n          align-items: center;\n        }\n        #path0_fill {\n          fill: red;\n        }\n\n        .delete-button {\n          background-color: transparent;\n          border: none;\n        }\n\n        .delete-button svg {\n          width: 100%;\n          height: 20px;\n        }\n      `,\n    ];\n  }\n\n  static get properties() {\n    return {\n      ...super.properties,\n      value: { type: Array, reflect: true }\n    };\n  }\n\n  _addClick() {\n    const newValue = {\n      verified: false,\n      value: '',\n      key: `new-${this.name}-${Math.floor(Math.random() * 100)}`\n    };\n    this.value = [...this.value, newValue];\n    this.requestUpdate();\n  }\n\n  _deleteField(item) {\n    const index = this.value.findIndex(currentItem => currentItem.key === item.key);\n    if (index !== -1) {\n      this.value.splice(index, 1);\n    }\n    this.value = [...this.value];\n    this.requestUpdate();\n  }\n\n  labelTemplate() {\n    if (!this.label) {\n      return '';\n    }\n\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      <dt-label\n        ?private=${this.private}\n        privateLabel=\"${this.privateLabel}\"\n        iconAltText=\"${this.iconAltText}\"\n        icon=\"${this.icon}\"\n      >\n        ${!this.icon\n        ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<slot name=\"icon-start\" slot=\"icon-start\"></slot>`\n        : null}\n        ${this.label}\n      </dt-label>\n      <button class=\"add-btn\" @click=${this._addClick}>\n        <svg class=\"add-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M18 10h-4V6a2 2 0 0 0-4 0l.071 4H6a2 2 0 0 0 0 4l4.071-.071L10 18a2 2 0 0 0 4 0v-4.071L18 14a2 2 0 0 0 0-4z\"></svg>\n      </button>\n    `;\n  }\n\n  _inputFieldTemplate(item) {\n    const isFirstItem = item.key === `new-${this.name}-0`;\n    const deleteButton = !isFirstItem ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      <button class=\"delete-button\"  @click=${() => this._deleteField(item)}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\">\n          <path\n            id=\"path0_fill\"\n            fill-rule=\"evenodd\"\n            d=\"M 14 7C 14 10.866 10.866 14 7 14C 3.13403 14 0 10.866 0 7C 0 3.13401 3.13403 0 7 0C 10.866 0 14 3.13401 14 7ZM 9.51294 3.51299L 7 6.01299L 4.48706 3.51299L 3.5 4.49999L 6.01294 6.99999L 3.5 9.49999L 4.48706 10.487L 7 7.98699L 9.5 10.5L 10.4871 9.51299L 7.98706 6.99999L 10.5 4.49999L 9.51294 3.51299Z\"\n          />\n        </svg>\n      </button>\n  ` : '';\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      <div class=\"input-group\">\n        <input\n          id=\"${item.key}\"\n          name=\"${this.name}\"\n          aria-label=\"${this.label}\"\n          type=\"${this.type || 'text'}\"\n          placeholder=\"${this.placeholder}\"\n          ?disabled=${this.disabled}\n          ?required=${this.required}\n          class=\"${(0,lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_1__.classMap)(this.classes)}\"\n          .value=\"${item.value || ''}\"\n          @change=${this._change}\n          novalidate\n          @keyup=\"${this.implicitFormSubmit}\"\n        />\n        ${deleteButton}\n\n        ${this.touched && this.invalid\n        ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<dt-exclamation-circle\n              class=\"icon-overlay alert\"\n            ></dt-exclamation-circle>`\n        : null}\n        ${this.error\n        ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<dt-icon\n              icon=\"mdi:alert-circle\"\n              class=\"icon-overlay alert\"\n              tooltip=\"${this.error}\"\n              size=\"2rem\"\n              ></dt-icon>`\n        : null}\n        ${this.loading\n        ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<dt-spinner class=\"icon-overlay\"></dt-spinner>`\n        : null}\n        ${this.saved\n        ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<dt-checkmark class=\"icon-overlay success\"></dt-checkmark>`\n        : null}\n      </div>\n    `;\n  }\n\n  _setFormValue(value) {\n    super._setFormValue(value);\n    this.internals.setFormValue(JSON.stringify(value));\n  }\n\n  _change(e) {\n    const key = e.target.id;\n    const { value } = e.target;\n    const newValue = this.value;\n    this.value.find((o, i) => {\n      if (o.key === key) {\n        newValue[i] = { verified: false, value, key };\n        return true; // stop searching\n      }\n      return false;\n    });\n\n    const event = new CustomEvent('change', {\n      detail: {\n        field: this.name,\n        oldValue: this.value,\n        newValue,\n      },\n    });\n\n    this.value = newValue;\n\n    this._setFormValue(this.value);\n\n    this.dispatchEvent(event);\n  }\n\n  _renderInputFields() {\n    if (!this.value) {\n      this.value = [{\n        verified: false,\n        value: '',\n        key: `new-${this.name}-0`\n      }];\n\n      // initializing with 0 so that delete button does comes in\n      return this._inputFieldTemplate(this.value[0]);\n    }\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      ${this.value.map((item) =>\n      this._inputFieldTemplate(item)\n    )}\n    `;\n  }\n\n  render() {\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n     <div class=\"label-wrapper\">\n        ${this.labelTemplate()}\n      </div>\n      ${this._renderInputFields()}\n    `;\n  }\n}\n\nwindow.customElements.define('dt-comm-channel', DtCommChannel);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/components/form/dt-communication-channel/dt-comm-channel.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/components/form/dt-connection/dt-connection.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/components/form/dt-connection/dt-connection.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DtConnection: () => (/* binding */ DtConnection)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var _dt_tags_dt_tags_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dt-tags/dt-tags.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/dt-tags/dt-tags.js\");\n\n\n\nclass DtConnection extends _dt_tags_dt_tags_js__WEBPACK_IMPORTED_MODULE_1__.DtTags {\n  static get styles() {\n    return [\n      ...super.styles,\n      (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)`\n        .selected-option a {\n          border-inline-start: solid 3px transparent;\n        }\n\n        li button * {\n          pointer-events: none;\n        }\n\n        li {\n          border-inline-start: solid 5px transparent;\n        }\n\n        li button .status {\n          font-style: italic;\n          opacity: 0.6;\n        }\n        li button .status:before {\n          content: '[';\n          font-style: normal;\n        }\n        li button .status:after {\n          content: ']';\n          font-style: normal;\n        }\n\n        li button svg {\n          width: 20px;\n          height: auto;\n          margin-bottom: -4px;\n        }\n        li button svg use {\n          fill: var(--dt-connection-icon-fill, var(--primary-color));\n        }\n      `,\n    ];\n  }\n\n  _clickOption(e) {\n    if (e.target && e.target.value) {\n      const id = parseInt(e.target.value, 10);\n      const option = this.filteredOptions.reduce((result, opt) => {\n        if (!result && opt.id == id) {\n          return opt;\n        }\n        return result;\n      }, null);\n      if (option) {\n        this._select(option);\n      }\n      this._clearSearch();\n    }\n  }\n\n  _clickAddNew(e) {\n    if (e.target) {\n      this._select({\n        id: e.target.dataset?.label,\n        label: e.target.dataset?.label,\n        isNew: true,\n      });\n      // clear search field if clicked with mouse, since field will lose focus\n      const input = this.shadowRoot.querySelector('input');\n      if (input) {\n        input.value = '';\n      }\n    }\n  }\n\n  _keyboardSelectOption() {\n    if (this.activeIndex > -1) {\n      if (this.activeIndex + 1 > this.filteredOptions.length) {\n        this._select({\n          id: this.query,\n          label: this.query,\n          isNew: true,\n        });\n      } else {\n        this._select(this.filteredOptions[this.activeIndex]);\n      }\n      this._clearSearch();\n    }\n  }\n\n  _remove(e) {\n    if (e.target && e.target.dataset && e.target.dataset.value) {\n      const event = new CustomEvent('change', {\n        detail: {\n          field: this.name,\n          oldValue: this.value,\n        },\n      });\n      this.value = (this.value || []).map(i => {\n        const val = {\n          ...i,\n        };\n        if (i.id === e.target.dataset.value) {\n          val.delete = true;\n        }\n        return val;\n      });\n      event.detail.newValue = this.value;\n\n      // dispatch event for use with addEventListener from javascript\n      this.dispatchEvent(event);\n\n      // If option was de-selected while list was open, re-focus input\n      if (this.open) {\n        this.shadowRoot.querySelector('input').focus();\n      }\n    }\n  }\n\n  /**\n   * Filter to options that:\n   *   1: are not selected\n   *   2: match the search query\n   * @private\n   */\n  _filterOptions() {\n    const selectedValues = (this.value || [])\n      .filter(i => !i.delete)\n      .map(v => v?.id);\n\n    if (this.options?.length) {\n      this.filteredOptions = (this.options || []).filter(\n        opt =>\n          !selectedValues.includes(opt.id) &&\n          (!this.query ||\n            opt.label\n              .toLocaleLowerCase()\n              .includes(this.query.toLocaleLowerCase()))\n      );\n    } else if (this.open) {\n      // Only run this filtering if the list is open.\n      // This prevents it from running on initial load before a `load` event is attached.\n      this.loading = true;\n      this.filteredOptions = [];\n\n      // need to fetch data via API request\n      const self = this;\n      const event = new CustomEvent('load', {\n        bubbles: true,\n        detail: {\n          field: this.name,\n          postType: this.postType,\n          query: this.query,\n          onSuccess: result => {\n            self.loading = false;\n\n            // filter out selected values from list\n            self.filteredOptions = result.filter(\n              opt => !selectedValues.includes(opt.id)\n            );\n          },\n          onError: error => {\n            console.warn(error);\n            self.loading = false;\n          },\n        },\n      });\n      this.dispatchEvent(event);\n    }\n    return this.filteredOptions;\n  }\n\n  _renderSelectedOptions() {\n    return (this.value || [])\n      .filter(i => !i.delete)\n      .map(\n        opt => (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n          <div class=\"selected-option\">\n            <a\n              href=\"${opt.link}\"\n              style=\"border-inline-start-color: ${opt.status\n                ? opt.status.color\n                : ''}\"\n              ?disabled=\"${this.disabled}\"\n              title=\"${opt.status ? opt.status.label : opt.label}\"\n              >${opt.label}</a\n            >\n            <button\n              @click=\"${this._remove}\"\n              ?disabled=\"${this.disabled}\"\n              data-value=\"${opt.id}\"\n            >\n              x\n            </button>\n          </div>\n        `\n      );\n  }\n\n  _renderOption(opt, idx) {\n    // prettier-ignore\n    const svg = (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>circle-08 2</title><desc>Created using Figma</desc><g id=\"Canvas\" transform=\"translate(1457 4940)\"><g id=\"circle-08 2\"><g id=\"Group\"><g id=\"Vector\"><use xlink:href=\"#path0_fill\" transform=\"translate(-1457 -4940)\" fill=\"#000000\"/></g></g></g></g><defs><path id=\"path0_fill\" d=\"M 12 0C 5.383 0 0 5.383 0 12C 0 18.617 5.383 24 12 24C 18.617 24 24 18.617 24 12C 24 5.383 18.617 0 12 0ZM 8 10C 8 7.791 9.844 6 12 6C 14.156 6 16 7.791 16 10L 16 11C 16 13.209 14.156 15 12 15C 9.844 15 8 13.209 8 11L 8 10ZM 12 22C 9.567 22 7.335 21.124 5.599 19.674C 6.438 18.091 8.083 17 10 17L 14 17C 15.917 17 17.562 18.091 18.401 19.674C 16.665 21.124 14.433 22 12 22Z\"/></defs></svg>`\n\n    const status = opt.status || {\n      key: '',\n      label: '',\n      color: '',\n    };\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      <li tabindex=\"-1\" style=\"border-inline-start-color:${status.color}\">\n        <button\n          value=\"${opt.id}\"\n          type=\"button\"\n          data-label=\"${opt.label}\"\n          @click=\"${this._clickOption}\"\n          @touchstart=\"${this._touchStart}\"\n          @touchmove=\"${this._touchMove}\"\n          @touchend=\"${this._touchEnd}\"\n          tabindex=\"-1\"\n          class=\"${this.activeIndex > -1 && this.activeIndex === idx\n            ? 'active'\n            : ''}\"\n        >\n          <span class=\"label\">${opt.label}</span>\n          <span class=\"connection-id\">(#${opt.id})</span>\n          ${status.label\n            ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<span class=\"status\">${status.label}</span>`\n            : null}\n          ${opt.user ? svg : null}\n        </button>\n      </li>\n    `;\n  }\n}\n\nwindow.customElements.define('dt-connection', DtConnection);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/components/form/dt-connection/dt-connection.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/components/form/dt-copy-text/dt-copy-text.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/components/form/dt-copy-text/dt-copy-text.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DtCopyText: () => (/* binding */ DtCopyText)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var lit_directives_style_map_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit/directives/style-map.js */ \"./node_modules/lit/directives/style-map.js\");\n/* harmony import */ var _dt_base_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../dt-base.js */ \"./node_modules/@disciple.tools/web-components/src/components/dt-base.js\");\n/* harmony import */ var _dt_form_base_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../dt-form-base.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/dt-form-base.js\");\n\n\n\n\n\nclass DtCopyText extends _dt_base_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n  static get styles() {\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)`\n      :root {\n        font-size: inherit;\n      }\n\n      .copy-text {\n        --dt-form-text-color: #575757;\n        display: flex;\n        align-items: center;\n        position: relative;\n        width: calc(100% + 20px);\n      }\n\n      .copy-text__input {\n        flex: 1;\n      }\n\n      .copy_icon {\n        cursor: copy;\n        font-size: 16px;\n        display: block;\n        transform: translate(-24px, -5px);\n        width: 20px;\n      }\n\n      :host([dir='rtl']) .copy_icon {\n        transform: translate(24px, -5px);\n      }\n    `;\n  }\n\n  static get properties() {\n    return {\n      value: { type: String },\n      success: { type: Boolean },\n      error: { type: Boolean },\n    };\n  }\n\n  get inputStyles() {\n    if (this.success) {\n      return {\n        '--dt-text-border-color':\n          'var(--copy-text-success-color, var(--success-color))',\n        '--dt-form-text-color':\n          'var( --copy-text-success-color, var(--success-color))',\n        color: 'var( --copy-text-success-color, var(--success-color))',\n      };\n    }\n    if (this.error) {\n      return {\n        '---dt-text-border-color':\n          'var(--copy-text-alert-color, var(--alert-color))',\n        '--dt-form-text-color':\n          'var(--copy-text-alert-color, var(--alert-color))',\n      };\n    }\n\n    return {};\n  }\n\n  get icon() {\n    return this.success ? 'ic:round-check' : 'ic:round-content-copy';\n  }\n\n  async copy() {\n    try {\n      this.success = false;\n      this.error = false;\n      await navigator.clipboard.writeText(this.value);\n      this.success = true;\n      this.error = false;\n    } catch (err) {\n      console.log(err);\n      this.success = false;\n      this.error = true;\n    }\n  }\n\n  render() {\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      <div class=\"copy-text\" style=${(0,lit_directives_style_map_js__WEBPACK_IMPORTED_MODULE_1__.styleMap)(this.inputStyles)}>\n        <dt-text\n          class=\"copy-text__input\"\n          value=\"${this.value}\"\n          disabled\n        ></dt-text>\n        <dt-icon\n          class=\"copy_icon\"\n          icon=\"${this.icon}\"\n          @click=\"${this.copy}\"\n        ></dt-icon>\n      </div>\n    `;\n  }\n}\n\nwindow.customElements.define('dt-copy-text', DtCopyText);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRpc2NpcGxlLnRvb2xzL3dlYi1jb21wb25lbnRzL3NyYy9jb21wb25lbnRzL2Zvcm0vZHQtY29weS10ZXh0L2R0LWNvcHktdGV4dC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFnQztBQUN1QjtBQUNqQjtBQUNNOztBQUVyQyx5QkFBeUIsbURBQU07QUFDdEM7QUFDQSxXQUFXLHdDQUFHO0FBQ2Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxlQUFlLGNBQWM7QUFDN0IsaUJBQWlCLGVBQWU7QUFDaEMsZUFBZSxlQUFlO0FBQzlCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLHlDQUFJO0FBQ2YscUNBQXFDLHFFQUFRLG1CQUFtQjtBQUNoRTtBQUNBO0FBQ0EsbUJBQW1CLFdBQVc7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsVUFBVTtBQUM1QixvQkFBb0IsVUFBVTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGlzY2lwbGUtdG9vbHMtY29udmVyc2F0aW9ucy8uL25vZGVfbW9kdWxlcy9AZGlzY2lwbGUudG9vbHMvd2ViLWNvbXBvbmVudHMvc3JjL2NvbXBvbmVudHMvZm9ybS9kdC1jb3B5LXRleHQvZHQtY29weS10ZXh0LmpzPzgwMGQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzLCBodG1sIH0gZnJvbSAnbGl0JztcbmltcG9ydCB7IHN0eWxlTWFwIH0gZnJvbSAnbGl0L2RpcmVjdGl2ZXMvc3R5bGUtbWFwLmpzJztcbmltcG9ydCBEdEJhc2UgZnJvbSAnLi4vLi4vZHQtYmFzZS5qcyc7XG5pbXBvcnQgRHRGb3JtQmFzZSBmcm9tICcuLi9kdC1mb3JtLWJhc2UuanMnO1xuXG5leHBvcnQgY2xhc3MgRHRDb3B5VGV4dCBleHRlbmRzIER0QmFzZSB7XG4gIHN0YXRpYyBnZXQgc3R5bGVzKCkge1xuICAgIHJldHVybiBjc3NgXG4gICAgICA6cm9vdCB7XG4gICAgICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICAgIH1cblxuICAgICAgLmNvcHktdGV4dCB7XG4gICAgICAgIC0tZHQtZm9ybS10ZXh0LWNvbG9yOiAjNTc1NzU3O1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIHdpZHRoOiBjYWxjKDEwMCUgKyAyMHB4KTtcbiAgICAgIH1cblxuICAgICAgLmNvcHktdGV4dF9faW5wdXQge1xuICAgICAgICBmbGV4OiAxO1xuICAgICAgfVxuXG4gICAgICAuY29weV9pY29uIHtcbiAgICAgICAgY3Vyc29yOiBjb3B5O1xuICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtMjRweCwgLTVweCk7XG4gICAgICAgIHdpZHRoOiAyMHB4O1xuICAgICAgfVxuXG4gICAgICA6aG9zdChbZGlyPSdydGwnXSkgLmNvcHlfaWNvbiB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDI0cHgsIC01cHgpO1xuICAgICAgfVxuICAgIGA7XG4gIH1cblxuICBzdGF0aWMgZ2V0IHByb3BlcnRpZXMoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHZhbHVlOiB7IHR5cGU6IFN0cmluZyB9LFxuICAgICAgc3VjY2VzczogeyB0eXBlOiBCb29sZWFuIH0sXG4gICAgICBlcnJvcjogeyB0eXBlOiBCb29sZWFuIH0sXG4gICAgfTtcbiAgfVxuXG4gIGdldCBpbnB1dFN0eWxlcygpIHtcbiAgICBpZiAodGhpcy5zdWNjZXNzKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAnLS1kdC10ZXh0LWJvcmRlci1jb2xvcic6XG4gICAgICAgICAgJ3ZhcigtLWNvcHktdGV4dC1zdWNjZXNzLWNvbG9yLCB2YXIoLS1zdWNjZXNzLWNvbG9yKSknLFxuICAgICAgICAnLS1kdC1mb3JtLXRleHQtY29sb3InOlxuICAgICAgICAgICd2YXIoIC0tY29weS10ZXh0LXN1Y2Nlc3MtY29sb3IsIHZhcigtLXN1Y2Nlc3MtY29sb3IpKScsXG4gICAgICAgIGNvbG9yOiAndmFyKCAtLWNvcHktdGV4dC1zdWNjZXNzLWNvbG9yLCB2YXIoLS1zdWNjZXNzLWNvbG9yKSknLFxuICAgICAgfTtcbiAgICB9XG4gICAgaWYgKHRoaXMuZXJyb3IpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgICctLS1kdC10ZXh0LWJvcmRlci1jb2xvcic6XG4gICAgICAgICAgJ3ZhcigtLWNvcHktdGV4dC1hbGVydC1jb2xvciwgdmFyKC0tYWxlcnQtY29sb3IpKScsXG4gICAgICAgICctLWR0LWZvcm0tdGV4dC1jb2xvcic6XG4gICAgICAgICAgJ3ZhcigtLWNvcHktdGV4dC1hbGVydC1jb2xvciwgdmFyKC0tYWxlcnQtY29sb3IpKScsXG4gICAgICB9O1xuICAgIH1cblxuICAgIHJldHVybiB7fTtcbiAgfVxuXG4gIGdldCBpY29uKCkge1xuICAgIHJldHVybiB0aGlzLnN1Y2Nlc3MgPyAnaWM6cm91bmQtY2hlY2snIDogJ2ljOnJvdW5kLWNvbnRlbnQtY29weSc7XG4gIH1cblxuICBhc3luYyBjb3B5KCkge1xuICAgIHRyeSB7XG4gICAgICB0aGlzLnN1Y2Nlc3MgPSBmYWxzZTtcbiAgICAgIHRoaXMuZXJyb3IgPSBmYWxzZTtcbiAgICAgIGF3YWl0IG5hdmlnYXRvci5jbGlwYm9hcmQud3JpdGVUZXh0KHRoaXMudmFsdWUpO1xuICAgICAgdGhpcy5zdWNjZXNzID0gdHJ1ZTtcbiAgICAgIHRoaXMuZXJyb3IgPSBmYWxzZTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICB0aGlzLnN1Y2Nlc3MgPSBmYWxzZTtcbiAgICAgIHRoaXMuZXJyb3IgPSB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gaHRtbGBcbiAgICAgIDxkaXYgY2xhc3M9XCJjb3B5LXRleHRcIiBzdHlsZT0ke3N0eWxlTWFwKHRoaXMuaW5wdXRTdHlsZXMpfT5cbiAgICAgICAgPGR0LXRleHRcbiAgICAgICAgICBjbGFzcz1cImNvcHktdGV4dF9faW5wdXRcIlxuICAgICAgICAgIHZhbHVlPVwiJHt0aGlzLnZhbHVlfVwiXG4gICAgICAgICAgZGlzYWJsZWRcbiAgICAgICAgPjwvZHQtdGV4dD5cbiAgICAgICAgPGR0LWljb25cbiAgICAgICAgICBjbGFzcz1cImNvcHlfaWNvblwiXG4gICAgICAgICAgaWNvbj1cIiR7dGhpcy5pY29ufVwiXG4gICAgICAgICAgQGNsaWNrPVwiJHt0aGlzLmNvcHl9XCJcbiAgICAgICAgPjwvZHQtaWNvbj5cbiAgICAgIDwvZGl2PlxuICAgIGA7XG4gIH1cbn1cblxud2luZG93LmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnZHQtY29weS10ZXh0JywgRHRDb3B5VGV4dCk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/components/form/dt-copy-text/dt-copy-text.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/components/form/dt-date/dt-date.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/components/form/dt-date/dt-date.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DtDate: () => (/* binding */ DtDate)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var _dt_form_base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dt-form-base.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/dt-form-base.js\");\n\n\n\nclass DtDate extends _dt_form_base_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n  static get styles() {\n    return [\n      ...super.styles,\n      (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)`\n        input {\n          color: var(--dt-form-text-color, #000);\n          appearance: none;\n          background-color: var(--dt-form-background-color, #cecece);\n          border: 1px solid var(--dt-form-border-color, #cacaca);\n          border-radius: 0;\n          box-shadow: var(\n            --dt-form-input-box-shadow,\n            inset 0 1px 2px hsl(0deg 0% 4% / 10%)\n          );\n          box-sizing: border-box;\n          display: inline-flex;\n          font-family: inherit;\n          font-size: 1rem;\n          font-weight: 300;\n          height: 2.5rem;\n          line-height: 1.5;\n          padding: var(--dt-form-padding, 0.5333333333rem);\n          transition: var(\n            --dt-form-transition,\n            box-shadow 0.5s,\n            border-color 0.25s ease-in-out\n          );\n          width: 100%;\n        }\n        input:disabled,\n        input[readonly],\n        textarea:disabled,\n        textarea[readonly],\n        .input-group button:disabled {\n          background-color: var(--dt-form-disabled-background-color, #e6e6e6);\n          cursor: not-allowed;\n        }\n\n        /* input::-webkit-datetime-edit-text { color: red; padding: 0 0.3em; } */\n        input::-webkit-calendar-picker-indicator {\n          color: red;\n        }\n\n        .input-group {\n          position: relative;\n          display: inline-flex;\n          margin: 0 0 1.0666666667rem;\n          width: 100%;\n        }\n\n        .input-group .input-group-button {\n          font-size: 0.75rem;\n          line-height: 1em;\n          display: inline-flex;\n        }\n        .input-group .button {\n          display: inline-block;\n          background: var(--dt-form-background-color, #cecece);\n          border: 1px solid var(--dt-form-border-color, #cecece);\n          color: var(--alert-color, #cc4b37);\n          align-self: stretch;\n          font-size: 1rem;\n          height: auto;\n          padding: 0 1em;\n          margin: 0;\n        }\n        .input-group .button:hover:not([disabled]) {\n          background-color: var(--alert-color, #cc4b37);\n          color: var(--text-color-inverse, #fefefe);\n        }\n\n        .icon-overlay {\n          inset-inline-end: 5rem;\n        }\n      `,\n    ];\n  }\n\n  static get properties() {\n    return {\n      ...super.properties,\n      id: { type: String },\n      value: {\n        type: String,\n        reflect: true,\n      },\n      timestamp: {\n        converter: date => {\n          let JStimestamp = Number(date);\n          if (JStimestamp < 1000000000000) {\n            JStimestamp *= 1000;\n          }\n          if (JStimestamp) return JStimestamp;\n          return undefined;\n        },\n        reflect: true,\n      },\n      onchange: { type: String },\n    };\n  }\n\n  // _convertArabicToEnglishNumbers() {\n  //   this.value\n  //   .replace(/[\\u0660-\\u0669]/g, (c) => { return c.charCodeAt(0) - 0x0660; })\n  //     .replace(/[\\u06f0-\\u06f9]/g, (c) => {\n  //       return c.charCodeAt(0) - 0x06f0;\n  //     });\n  // }\n\n  updateTimestamp(value) {\n    const timestampMilliseconds = new Date(value).getTime();\n    const timestampSecond = timestampMilliseconds / 1000;\n    const event = new CustomEvent('change', {\n      detail: {\n        field: this.name,\n        oldValue: this.timestamp,\n        newValue: timestampSecond,\n      },\n    });\n\n    this.timestamp = timestampMilliseconds;\n    this.value = value;\n    this._setFormValue(value);\n    this.dispatchEvent(event);\n  }\n\n  _change(e) {\n    this.updateTimestamp(e.target.value);\n  }\n\n  clearInput() {\n    this.updateTimestamp('');\n  }\n\n  showDatePicker() {\n    const input = this.shadowRoot.querySelector('input');\n    input.showPicker();\n  }\n\n  render() {\n    if (this.timestamp) {\n      this.value = new Date(this.timestamp).toISOString().substring(0, 10);\n    } else if (this.value) {\n      this.timestamp = new Date(this.value).getTime();\n    }\n\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      ${this.labelTemplate()}\n\n      <div class=\"input-group\">\n        <input\n          id=\"${this.id}\"\n          class=\"input-group-field dt_date_picker\"\n          type=\"date\"\n          autocomplete=\"off\"\n          .placeholder=\"${new Date().toISOString().substring(0, 10)}\"\n          .value=\"${this.value}\"\n          .timestamp=\"${this.date}\"\n          ?disabled=${this.disabled}\n          @change=\"${this._change}\"\n          @click=\"${this.showDatePicker}\"\n        />\n        <button\n          id=\"${this.id}-clear-button\"\n          class=\"button alert clear-date-button\"\n          data-inputid=\"${this.id}\"\n          title=\"Delete Date\"\n          type=\"button\"\n          ?disabled=${this.disabled}\n          @click=\"${this.clearInput}\"\n        >\n          x\n        </button>\n\n        ${(this.touched && this.invalid) || this.error\n          ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<dt-exclamation-circle\n              class=\"icon-overlay alert\"\n            ></dt-exclamation-circle>`\n          : null}\n        ${this.loading\n          ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<dt-spinner class=\"icon-overlay\"></dt-spinner>`\n          : null}\n        ${this.saved\n          ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<dt-checkmark class=\"icon-overlay success\"></dt-checkmark>`\n          : null}\n      </div>\n    `;\n  }\n}\n\nwindow.customElements.define('dt-date', DtDate);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/components/form/dt-date/dt-date.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/components/form/dt-form-base.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/components/form/dt-form-base.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DtFormBase)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var _dt_base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dt-base.js */ \"./node_modules/@disciple.tools/web-components/src/components/dt-base.js\");\n/* harmony import */ var element_internals_polyfill__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! element-internals-polyfill */ \"./node_modules/element-internals-polyfill/dist/index.js\");\n/* harmony import */ var _dt_label_dt_label_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dt-label/dt-label.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/dt-label/dt-label.js\");\n\n\n // eslint-disable-line import/no-extraneous-dependencies\n\n\nclass DtFormBase extends _dt_base_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n  static get formAssociated() {\n    return true;\n  }\n\n  static get styles() {\n    return [\n      (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)`\n        .input-group {\n          position: relative;\n        }\n        .input-group.disabled {\n          background-color: var(--disabled-color);\n        }\n\n        /* === Inline Icons === */\n        .icon-overlay {\n          position: absolute;\n          inset-inline-end: 1rem;\n          top: 0;\n          height: 100%;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n        }\n\n        .icon-overlay.alert {\n          color: var(--alert-color);\n          cursor: pointer;\n        }\n        .icon-overlay.success {\n          color: var(--success-color);\n        }\n      `,\n    ];\n  }\n\n  static get properties() {\n    return {\n      ...super.properties,\n      name: { type: String },\n      label: { type: String },\n      icon: { type: String },\n      iconAltText: { type: String },\n      private: { type: Boolean },\n      privateLabel: { type: String },\n      disabled: { type: Boolean },\n      required: { type: Boolean },\n      requiredMessage: { type: String },\n      touched: {\n        type: Boolean,\n        state: true,\n      },\n      invalid: {\n        type: Boolean,\n        state: true,\n      },\n      error: { type: String },\n      loading: { type: Boolean },\n      saved: { type: Boolean },\n    };\n  }\n\n  /**\n   * return the field elemnt\n   */\n  get _field() {\n    return this.shadowRoot.querySelector('input, textarea, select');\n  }\n\n  /**\n   * return the element to proxy focus to\n   */\n  get _focusTarget() {\n    return this._field;\n  }\n\n  constructor() {\n    super();\n    this.touched = false;\n    this.invalid = false;\n    this.internals = this.attachInternals();\n\n    // catch oninvalid event (when validation is triggered from form submit)\n    // and set touched=true so that styles are shown\n    this.addEventListener('invalid', () => {\n      this.touched = true;\n      this._validateRequired();\n    });\n  }\n\n  firstUpdated(...args) {\n    super.firstUpdated(...args);\n\n    // set initial form value\n    const formdata = DtFormBase._jsonToFormData(this.value, this.name);\n    this.internals.setFormValue(formdata);\n    this._validateRequired();\n  }\n\n  /**\n   * Recursively create FormData from JSON data\n   * @param formData\n   * @param data\n   * @param parentKey\n   * @private\n   */\n  static _buildFormData(formData, data, parentKey) {\n    if (data && typeof data === 'object' && !(data instanceof Date) && !(data instanceof File)) {\n      Object.keys(data).forEach(key => {\n        this._buildFormData(formData, data[key], parentKey ? `${parentKey}[${key}]` : key);\n      });\n    } else {\n      const value = data == null ? '' : data;\n      formData.append(parentKey, value);\n    }\n  }\n\n  /**\n   * Convert JSON to FormData object\n   * @param data\n   * @param parentKey - prefix for all values. Should be the field name\n   * @returns {FormData}\n   * @private\n   */\n  static _jsonToFormData(data, parentKey) {\n    const formData = new FormData();\n    DtFormBase._buildFormData(formData, data, parentKey);\n    return formData;\n  }\n\n  _setFormValue(value) {\n    // handle complex types like arrays and objects by converting to FormData\n    const formdata = DtFormBase._jsonToFormData(value, this.name);\n    this.internals.setFormValue(formdata, value);\n    this._validateRequired();\n    this.touched = true;\n  }\n\n  /* eslint-disable class-methods-use-this */\n  /**\n   * Can/should be overriden by each component to implement logic for checking if a value is entered/selected\n   * @private\n   */\n  _validateRequired() {\n    // const { value } = this;\n    // const input = this.shadowRoot.querySelector('input');\n    // if (value === '' && this.required) {\n    //   this.invalid = true;\n    //   this.internals.setValidity({\n    //     valueMissing: true\n    //   }, this.requiredMessage || 'This field is required', input);\n    // } else {\n    //   this.invalid = false;\n    //   this.internals.setValidity({});\n    // }\n  }\n  /* eslint-enable class-methods-use-this */\n\n  labelTemplate() {\n    if (!this.label) {\n      return '';\n    }\n\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      <dt-label\n        ?private=${this.private}\n        privateLabel=\"${this.privateLabel}\"\n        iconAltText=\"${this.iconAltText}\"\n        icon=\"${this.icon}\"\n      >\n        ${!this.icon\n          ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<slot name=\"icon-start\" slot=\"icon-start\"></slot>`\n          : null}\n        ${this.label}\n      </dt-label>\n    `;\n  }\n\n  render() {\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      ${this.labelTemplate()}\n      <slot></slot>\n    `;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/components/form/dt-form-base.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/components/form/dt-label/dt-label.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/components/form/dt-label/dt-label.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DtLabel: () => (/* binding */ DtLabel)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var _lit_localize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @lit/localize */ \"./node_modules/@lit/localize/lit-localize.js\");\n/* harmony import */ var _dt_base_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../dt-base.js */ \"./node_modules/@disciple.tools/web-components/src/components/dt-base.js\");\n\n\n\n\nclass DtLabel extends _dt_base_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n  static get styles() {\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)`\n      :host {\n        font-family: var(--font-family);\n        font-size: var(--dt-label-font-size, 14px);\n        font-weight: var(--dt-label-font-weight, 700);\n        color: var(--dt-label-color, #000);\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      .icon {\n        height: var(--dt-label-font-size, 14px);\n        width: auto;\n        display: inline-block;\n      }\n\n      .icon.private {\n        position: relative;\n      }\n      .icon.private:hover .tooltip {\n        display: block;\n      }\n      .tooltip {\n        display: none;\n        position: absolute;\n        color: var(--dt-label-tooltip-color, #666);\n        background: var(--dt-label-tooltip-background, #eee);\n        top: calc(100% + 0.5rem);\n        inset-inline-start: -1rem;\n        font-weight: normal;\n        padding: 0.4rem;\n      }\n      .tooltip:before {\n        content: '';\n        position: absolute;\n        inset-inline-start: 1rem;\n        top: -0.5rem;\n        height: 0;\n        width: 0;\n        border-bottom: 0.5rem solid var(--dt-label-tooltip-background, #eee);\n        border-inline-start: 0.5rem solid transparent;\n        border-inline-end: 0.5rem solid transparent;\n      }\n    `;\n  }\n\n  static get properties() {\n    return {\n      icon: { type: String },\n      iconAltText: { type: String },\n      private: { type: Boolean },\n      privateLabel: { type: String },\n    };\n  }\n\n  firstUpdated() {\n    // handle img or svg content that may be bigger than the space allotted\n    const slot = this.shadowRoot.querySelector('slot[name=icon-start]');\n    const elements = slot.assignedElements({ flatten: true });\n    for (const element of elements) {\n      element.style.height = '100%';\n      element.style.width = 'auto';\n    }\n  }\n\n  get _slottedChildren() {\n    const slot = this.shadowRoot.querySelector('slot');\n    return slot.assignedElements({ flatten: true });\n  }\n\n  render() {\n    // prettier-ignore\n    const svg = (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<svg class=\"icon\" height='100px' width='100px' fill=\"#000000\" xmlns:x=\"http://ns.adobe.com/Extensibility/1.0/\" xmlns:i=\"http://ns.adobe.com/AdobeIllustrator/10.0/\" xmlns:graph=\"http://ns.adobe.com/Graphs/1.0/\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" style=\"enable-background:new 0 0 100 100;\" xml:space=\"preserve\"><g><g i:extraneous=\"self\"><g><path d=\"M5273.1,2400.1v-2c0-2.8-5-4-9.7-4s-9.7,1.3-9.7,4v2c0,1.8,0.7,3.6,2,4.9l5,4.9c0.3,0.3,0.4,0.6,0.4,1v6.4     c0,0.4,0.2,0.7,0.6,0.8l2.9,0.9c0.5,0.1,1-0.2,1-0.8v-7.2c0-0.4,0.2-0.7,0.4-1l5.1-5C5272.4,2403.7,5273.1,2401.9,5273.1,2400.1z      M5263.4,2400c-4.8,0-7.4-1.3-7.5-1.8v0c0.1-0.5,2.7-1.8,7.5-1.8c4.8,0,7.3,1.3,7.5,1.8C5270.7,2398.7,5268.2,2400,5263.4,2400z\"></path><path d=\"M5268.4,2410.3c-0.6,0-1,0.4-1,1c0,0.6,0.4,1,1,1h4.3c0.6,0,1-0.4,1-1c0-0.6-0.4-1-1-1H5268.4z\"></path><path d=\"M5272.7,2413.7h-4.3c-0.6,0-1,0.4-1,1c0,0.6,0.4,1,1,1h4.3c0.6,0,1-0.4,1-1C5273.7,2414.1,5273.3,2413.7,5272.7,2413.7z\"></path><path d=\"M5272.7,2417h-4.3c-0.6,0-1,0.4-1,1c0,0.6,0.4,1,1,1h4.3c0.6,0,1-0.4,1-1C5273.7,2417.5,5273.3,2417,5272.7,2417z\"></path></g><path d=\"M75.8,37.6v-9.3C75.8,14.1,64.2,2.5,50,2.5S24.2,14.1,24.2,28.3v9.3c-7,0.6-12.4,6.4-12.4,13.6v32.6    c0,7.6,6.1,13.7,13.7,13.7h49.1c7.6,0,13.7-6.1,13.7-13.7V51.2C88.3,44,82.8,38.2,75.8,37.6z M56,79.4c0.2,1-0.5,1.9-1.5,1.9h-9.1    c-1,0-1.7-0.9-1.5-1.9l3-11.8c-2.5-1.1-4.3-3.6-4.3-6.6c0-4,3.3-7.3,7.3-7.3c4,0,7.3,3.3,7.3,7.3c0,2.9-1.8,5.4-4.3,6.6L56,79.4z     M62.7,37.5H37.3v-9.1c0-7,5.7-12.7,12.7-12.7s12.7,5.7,12.7,12.7V37.5z\"></path></g></g></svg>`;\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      <div class=\"label\">\n        <span class=\"icon\">\n          <slot name=\"icon-start\">\n            ${this.icon\n              ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<img src=\"${this.icon}\" alt=\"${this.iconAltText}\" />`\n              : null}\n          </slot>\n        </span>\n        <slot></slot>\n\n        ${this.private\n          ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<span class=\"icon private\">\n              ${svg}\n              <span class=\"tooltip\"\n                >${this.privateLabel ||\n                (0,_lit_localize__WEBPACK_IMPORTED_MODULE_1__.msg)('Private Field: Only I can see its content')}</span\n              >\n            </span> `\n          : null}\n      </div>\n    `;\n  }\n}\n\nwindow.customElements.define('dt-label', DtLabel);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRpc2NpcGxlLnRvb2xzL3dlYi1jb21wb25lbnRzL3NyYy9jb21wb25lbnRzL2Zvcm0vZHQtbGFiZWwvZHQtbGFiZWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFnQztBQUNJO0FBQ0U7O0FBRS9CLHNCQUFzQixtREFBTTtBQUNuQztBQUNBLFdBQVcsd0NBQUc7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxjQUFjLGNBQWM7QUFDNUIscUJBQXFCLGNBQWM7QUFDbkMsaUJBQWlCLGVBQWU7QUFDaEMsc0JBQXNCLGNBQWM7QUFDcEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsZUFBZTtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxtQ0FBbUMsZUFBZTtBQUNsRDs7QUFFQTtBQUNBO0FBQ0EsZ0JBQWdCLHlDQUFJLDhYQUE4WDtBQUNsWixXQUFXLHlDQUFJO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkLGdCQUFnQix5Q0FBSSxhQUFhLFVBQVUsU0FBUyxpQkFBaUI7QUFDckU7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsVUFBVTtBQUNWLFlBQVkseUNBQUk7QUFDaEIsZ0JBQWdCO0FBQ2hCO0FBQ0EsbUJBQW1CO0FBQ25CLGdCQUFnQixrREFBRyw4Q0FBOEM7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kaXNjaXBsZS10b29scy1jb252ZXJzYXRpb25zLy4vbm9kZV9tb2R1bGVzL0BkaXNjaXBsZS50b29scy93ZWItY29tcG9uZW50cy9zcmMvY29tcG9uZW50cy9mb3JtL2R0LWxhYmVsL2R0LWxhYmVsLmpzPzAxZTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaHRtbCwgY3NzIH0gZnJvbSAnbGl0JztcbmltcG9ydCB7IG1zZyB9IGZyb20gJ0BsaXQvbG9jYWxpemUnO1xuaW1wb3J0IER0QmFzZSBmcm9tICcuLi8uLi9kdC1iYXNlLmpzJztcblxuZXhwb3J0IGNsYXNzIER0TGFiZWwgZXh0ZW5kcyBEdEJhc2Uge1xuICBzdGF0aWMgZ2V0IHN0eWxlcygpIHtcbiAgICByZXR1cm4gY3NzYFxuICAgICAgOmhvc3Qge1xuICAgICAgICBmb250LWZhbWlseTogdmFyKC0tZm9udC1mYW1pbHkpO1xuICAgICAgICBmb250LXNpemU6IHZhcigtLWR0LWxhYmVsLWZvbnQtc2l6ZSwgMTRweCk7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiB2YXIoLS1kdC1sYWJlbC1mb250LXdlaWdodCwgNzAwKTtcbiAgICAgICAgY29sb3I6IHZhcigtLWR0LWxhYmVsLWNvbG9yLCAjMDAwKTtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgICB9XG5cbiAgICAgIC5pY29uIHtcbiAgICAgICAgaGVpZ2h0OiB2YXIoLS1kdC1sYWJlbC1mb250LXNpemUsIDE0cHgpO1xuICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgfVxuXG4gICAgICAuaWNvbi5wcml2YXRlIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgfVxuICAgICAgLmljb24ucHJpdmF0ZTpob3ZlciAudG9vbHRpcCB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgfVxuICAgICAgLnRvb2x0aXAge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGNvbG9yOiB2YXIoLS1kdC1sYWJlbC10b29sdGlwLWNvbG9yLCAjNjY2KTtcbiAgICAgICAgYmFja2dyb3VuZDogdmFyKC0tZHQtbGFiZWwtdG9vbHRpcC1iYWNrZ3JvdW5kLCAjZWVlKTtcbiAgICAgICAgdG9wOiBjYWxjKDEwMCUgKyAwLjVyZW0pO1xuICAgICAgICBpbnNldC1pbmxpbmUtc3RhcnQ6IC0xcmVtO1xuICAgICAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgICAgICBwYWRkaW5nOiAwLjRyZW07XG4gICAgICB9XG4gICAgICAudG9vbHRpcDpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBpbnNldC1pbmxpbmUtc3RhcnQ6IDFyZW07XG4gICAgICAgIHRvcDogLTAuNXJlbTtcbiAgICAgICAgaGVpZ2h0OiAwO1xuICAgICAgICB3aWR0aDogMDtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMC41cmVtIHNvbGlkIHZhcigtLWR0LWxhYmVsLXRvb2x0aXAtYmFja2dyb3VuZCwgI2VlZSk7XG4gICAgICAgIGJvcmRlci1pbmxpbmUtc3RhcnQ6IDAuNXJlbSBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICAgICAgYm9yZGVyLWlubGluZS1lbmQ6IDAuNXJlbSBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICAgIH1cbiAgICBgO1xuICB9XG5cbiAgc3RhdGljIGdldCBwcm9wZXJ0aWVzKCkge1xuICAgIHJldHVybiB7XG4gICAgICBpY29uOiB7IHR5cGU6IFN0cmluZyB9LFxuICAgICAgaWNvbkFsdFRleHQ6IHsgdHlwZTogU3RyaW5nIH0sXG4gICAgICBwcml2YXRlOiB7IHR5cGU6IEJvb2xlYW4gfSxcbiAgICAgIHByaXZhdGVMYWJlbDogeyB0eXBlOiBTdHJpbmcgfSxcbiAgICB9O1xuICB9XG5cbiAgZmlyc3RVcGRhdGVkKCkge1xuICAgIC8vIGhhbmRsZSBpbWcgb3Igc3ZnIGNvbnRlbnQgdGhhdCBtYXkgYmUgYmlnZ2VyIHRoYW4gdGhlIHNwYWNlIGFsbG90dGVkXG4gICAgY29uc3Qgc2xvdCA9IHRoaXMuc2hhZG93Um9vdC5xdWVyeVNlbGVjdG9yKCdzbG90W25hbWU9aWNvbi1zdGFydF0nKTtcbiAgICBjb25zdCBlbGVtZW50cyA9IHNsb3QuYXNzaWduZWRFbGVtZW50cyh7IGZsYXR0ZW46IHRydWUgfSk7XG4gICAgZm9yIChjb25zdCBlbGVtZW50IG9mIGVsZW1lbnRzKSB7XG4gICAgICBlbGVtZW50LnN0eWxlLmhlaWdodCA9ICcxMDAlJztcbiAgICAgIGVsZW1lbnQuc3R5bGUud2lkdGggPSAnYXV0byc7XG4gICAgfVxuICB9XG5cbiAgZ2V0IF9zbG90dGVkQ2hpbGRyZW4oKSB7XG4gICAgY29uc3Qgc2xvdCA9IHRoaXMuc2hhZG93Um9vdC5xdWVyeVNlbGVjdG9yKCdzbG90Jyk7XG4gICAgcmV0dXJuIHNsb3QuYXNzaWduZWRFbGVtZW50cyh7IGZsYXR0ZW46IHRydWUgfSk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgLy8gcHJldHRpZXItaWdub3JlXG4gICAgY29uc3Qgc3ZnID0gaHRtbGA8c3ZnIGNsYXNzPVwiaWNvblwiIGhlaWdodD0nMTAwcHgnIHdpZHRoPScxMDBweCcgZmlsbD1cIiMwMDAwMDBcIiB4bWxuczp4PVwiaHR0cDovL25zLmFkb2JlLmNvbS9FeHRlbnNpYmlsaXR5LzEuMC9cIiB4bWxuczppPVwiaHR0cDovL25zLmFkb2JlLmNvbS9BZG9iZUlsbHVzdHJhdG9yLzEwLjAvXCIgeG1sbnM6Z3JhcGg9XCJodHRwOi8vbnMuYWRvYmUuY29tL0dyYXBocy8xLjAvXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHhtbG5zOnhsaW5rPVwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiIHZlcnNpb249XCIxLjFcIiB4PVwiMHB4XCIgeT1cIjBweFwiIHZpZXdCb3g9XCIwIDAgMTAwIDEwMFwiIHN0eWxlPVwiZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCAxMDAgMTAwO1wiIHhtbDpzcGFjZT1cInByZXNlcnZlXCI+PGc+PGcgaTpleHRyYW5lb3VzPVwic2VsZlwiPjxnPjxwYXRoIGQ9XCJNNTI3My4xLDI0MDAuMXYtMmMwLTIuOC01LTQtOS43LTRzLTkuNywxLjMtOS43LDR2MmMwLDEuOCwwLjcsMy42LDIsNC45bDUsNC45YzAuMywwLjMsMC40LDAuNiwwLjQsMXY2LjQgICAgIGMwLDAuNCwwLjIsMC43LDAuNiwwLjhsMi45LDAuOWMwLjUsMC4xLDEtMC4yLDEtMC44di03LjJjMC0wLjQsMC4yLTAuNywwLjQtMWw1LjEtNUM1MjcyLjQsMjQwMy43LDUyNzMuMSwyNDAxLjksNTI3My4xLDI0MDAuMXogICAgICBNNTI2My40LDI0MDBjLTQuOCwwLTcuNC0xLjMtNy41LTEuOHYwYzAuMS0wLjUsMi43LTEuOCw3LjUtMS44YzQuOCwwLDcuMywxLjMsNy41LDEuOEM1MjcwLjcsMjM5OC43LDUyNjguMiwyNDAwLDUyNjMuNCwyNDAwelwiPjwvcGF0aD48cGF0aCBkPVwiTTUyNjguNCwyNDEwLjNjLTAuNiwwLTEsMC40LTEsMWMwLDAuNiwwLjQsMSwxLDFoNC4zYzAuNiwwLDEtMC40LDEtMWMwLTAuNi0wLjQtMS0xLTFINTI2OC40elwiPjwvcGF0aD48cGF0aCBkPVwiTTUyNzIuNywyNDEzLjdoLTQuM2MtMC42LDAtMSwwLjQtMSwxYzAsMC42LDAuNCwxLDEsMWg0LjNjMC42LDAsMS0wLjQsMS0xQzUyNzMuNywyNDE0LjEsNTI3My4zLDI0MTMuNyw1MjcyLjcsMjQxMy43elwiPjwvcGF0aD48cGF0aCBkPVwiTTUyNzIuNywyNDE3aC00LjNjLTAuNiwwLTEsMC40LTEsMWMwLDAuNiwwLjQsMSwxLDFoNC4zYzAuNiwwLDEtMC40LDEtMUM1MjczLjcsMjQxNy41LDUyNzMuMywyNDE3LDUyNzIuNywyNDE3elwiPjwvcGF0aD48L2c+PHBhdGggZD1cIk03NS44LDM3LjZ2LTkuM0M3NS44LDE0LjEsNjQuMiwyLjUsNTAsMi41UzI0LjIsMTQuMSwyNC4yLDI4LjN2OS4zYy03LDAuNi0xMi40LDYuNC0xMi40LDEzLjZ2MzIuNiAgICBjMCw3LjYsNi4xLDEzLjcsMTMuNywxMy43aDQ5LjFjNy42LDAsMTMuNy02LjEsMTMuNy0xMy43VjUxLjJDODguMyw0NCw4Mi44LDM4LjIsNzUuOCwzNy42eiBNNTYsNzkuNGMwLjIsMS0wLjUsMS45LTEuNSwxLjloLTkuMSAgICBjLTEsMC0xLjctMC45LTEuNS0xLjlsMy0xMS44Yy0yLjUtMS4xLTQuMy0zLjYtNC4zLTYuNmMwLTQsMy4zLTcuMyw3LjMtNy4zYzQsMCw3LjMsMy4zLDcuMyw3LjNjMCwyLjktMS44LDUuNC00LjMsNi42TDU2LDc5LjR6ICAgICBNNjIuNywzNy41SDM3LjN2LTkuMWMwLTcsNS43LTEyLjcsMTIuNy0xMi43czEyLjcsNS43LDEyLjcsMTIuN1YzNy41elwiPjwvcGF0aD48L2c+PC9nPjwvc3ZnPmA7XG4gICAgcmV0dXJuIGh0bWxgXG4gICAgICA8ZGl2IGNsYXNzPVwibGFiZWxcIj5cbiAgICAgICAgPHNwYW4gY2xhc3M9XCJpY29uXCI+XG4gICAgICAgICAgPHNsb3QgbmFtZT1cImljb24tc3RhcnRcIj5cbiAgICAgICAgICAgICR7dGhpcy5pY29uXG4gICAgICAgICAgICAgID8gaHRtbGA8aW1nIHNyYz1cIiR7dGhpcy5pY29ufVwiIGFsdD1cIiR7dGhpcy5pY29uQWx0VGV4dH1cIiAvPmBcbiAgICAgICAgICAgICAgOiBudWxsfVxuICAgICAgICAgIDwvc2xvdD5cbiAgICAgICAgPC9zcGFuPlxuICAgICAgICA8c2xvdD48L3Nsb3Q+XG5cbiAgICAgICAgJHt0aGlzLnByaXZhdGVcbiAgICAgICAgICA/IGh0bWxgPHNwYW4gY2xhc3M9XCJpY29uIHByaXZhdGVcIj5cbiAgICAgICAgICAgICAgJHtzdmd9XG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwidG9vbHRpcFwiXG4gICAgICAgICAgICAgICAgPiR7dGhpcy5wcml2YXRlTGFiZWwgfHxcbiAgICAgICAgICAgICAgICBtc2coJ1ByaXZhdGUgRmllbGQ6IE9ubHkgSSBjYW4gc2VlIGl0cyBjb250ZW50Jyl9PC9zcGFuXG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgIDwvc3Bhbj4gYFxuICAgICAgICAgIDogbnVsbH1cbiAgICAgIDwvZGl2PlxuICAgIGA7XG4gIH1cbn1cblxud2luZG93LmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnZHQtbGFiZWwnLCBEdExhYmVsKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/components/form/dt-label/dt-label.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/components/form/dt-location-map/dt-location-map-item.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/components/form/dt-location-map/dt-location-map-item.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DtLocationMapItem)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var lit_directives_style_map_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit/directives/style-map.js */ \"./node_modules/lit/directives/style-map.js\");\n/* harmony import */ var _lit_localize__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @lit/localize */ \"./node_modules/@lit/localize/lit-localize.js\");\n/* harmony import */ var _services_mapboxService__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../services/mapboxService */ \"./node_modules/@disciple.tools/web-components/src/services/mapboxService.js\");\n/* harmony import */ var _services_googleGeocodeService__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../services/googleGeocodeService */ \"./node_modules/@disciple.tools/web-components/src/services/googleGeocodeService.js\");\n/* harmony import */ var _icons_dt_icon_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../icons/dt-icon.js */ \"./node_modules/@disciple.tools/web-components/src/components/icons/dt-icon.js\");\n/* harmony import */ var _dt_map_modal_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dt-map-modal.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/dt-location-map/dt-map-modal.js\");\n\n\n\n\n\n\n\n\nclass DtLocationMapItem extends lit__WEBPACK_IMPORTED_MODULE_0__.LitElement {\n  static get properties() {\n    return {\n      id: { type: String, reflect: true },\n      placeholder: { type: String },\n      mapboxToken: { type: String, attribute: 'mapbox-token' },\n      googleToken: { type: String, attribute: 'google-token' },\n      metadata: { type: Object },\n      disabled: { type: Boolean },\n      open: {\n        type: Boolean,\n        state: true,\n      },\n      query: {\n        type: String,\n        state: true,\n      },\n      activeIndex: {\n        type: Number,\n        state: true,\n      },\n      containerHeight: {\n        type: Number,\n        state: true,\n      },\n      loading: { type: Boolean },\n      saved: { type: Boolean },\n      filteredOptions: { type: Array, state: true },\n    };\n  }\n\n  static get styles() {\n    return [\n      (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)`\n        :host {\n          position: relative;\n          font-family: Helvetica, Arial, sans-serif;\n          display: block;\n        }\n        \n        .input-group {\n          color: var(--dt-multi-select-text-color, #0a0a0a);\n          margin-bottom: 1rem;\n        }\n        .input-group.disabled input,\n        .input-group.disabled .field-container {\n          background-color: var(--disabled-color);\n        }\n        .input-group.disabled a,\n        .input-group.disabled button {\n          cursor: not-allowed;\n          pointer-events: none;\n        }\n        .input-group.disabled *:hover {\n          cursor: not-allowed;\n        }\n        \n        /* === Options List === */\n        .option-list {\n          list-style: none;\n          margin: 0;\n          padding: 0;\n          border: 1px solid var(--dt-form-border-color, #cacaca);\n          background: var(--dt-form-background-color, #fefefe);\n          z-index: 10;\n          position: absolute;\n          width: var(--container-width, 100%);\n          width: 100%;\n          top: 0;\n          left: 0;\n          box-shadow: var(--shadow-1);\n          max-height: 150px;\n          overflow-y: scroll;\n        }\n        .option-list li {\n          border-block-start: 1px solid var(--dt-form-border-color, #cacaca);\n          outline: 0;\n        }\n        .option-list li div,\n        .option-list li button {\n          padding: 0.5rem 0.75rem;\n          color: var(--dt-multi-select-text-color, #0a0a0a);\n          font-weight: 100;\n          font-size: 1rem;\n          text-decoration: none;\n          text-align: inherit;\n        }\n        .option-list li button {\n          display: block;\n          width: 100%;\n          border: 0;\n          background: transparent;\n        }\n        .option-list li button:hover,\n        .option-list li button.active {\n          cursor: pointer;\n          background: var(--dt-multi-select-option-hover-background, #f5f5f5);\n        }\n      `,\n      (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)`\n        input {\n          color: var(--dt-form-text-color, #000);\n          appearance: none;\n          background-color: var(--dt-location-map-background-color, #fefefe);\n          border: 1px solid var(--dt-location-map-border-color, #fefefe);\n          border-radius: var(--dt-location-map-border-radius, 0);\n          box-shadow: var(\n            --dt-location-map-box-shadow,\n            var(\n              --dt-form-input-box-shadow,\n              inset 0 1px 2px hsl(0deg 0% 4% / 10%)\n            )\n          );\n          box-sizing: border-box;\n          display: block;\n          font-family: inherit;\n          font-size: 1rem;\n          font-weight: 300;\n          line-height: 1.5;\n          margin: 0;\n          padding: var(--dt-form-padding, 0.5333333333rem);\n          transition: var(\n            --dt-form-transition,\n            box-shadow 0.5s,\n            border-color 0.25s ease-in-out\n          );\n        }\n        input:disabled,\n        input[readonly],\n        textarea:disabled,\n        textarea[readonly] {\n          background-color: var(\n            --dt-text-disabled-background-color,\n            var(--dt-form-disabled-background-color, #e6e6e6)\n          );\n          cursor: not-allowed;\n        }\n        input.disabled {\n          color: var(--dt-text-placeholder-color, #999);        \n        }\n        input:focus-within,\n        input:focus-visible {\n          outline: none;\n        }\n        input::placeholder {\n          color: var(--dt-text-placeholder-color, #999);\n          text-transform: var(--dt-text-placeholder-transform, none);\n          font-size: var(--dt-text-placeholder-font-size, 1rem);\n          font-weight: var(--dt-text-placeholder-font-weight, 400);\n          letter-spacing: var(--dt-text-placeholder-letter-spacing, normal);\n        }\n        input.invalid {\n          border-color: var(--dt-text-border-color-alert, var(--alert-color));\n        }\n        \n        .field-container {\n          display: flex;\n          margin-bottom: 0.5rem;\n        }\n        .field-container input {\n          flex-grow: 1;\n        }\n        .field-container .input-addon {\n          flex-shrink: 1;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          aspect-ratio: 1/1;\n          padding: 10px;\n          border: solid 1px gray;\n          border-collapse: collapse;\n          color: var(--dt-location-map-button-color, #cc4b37);\n          background-color: var(--dt-location-map-background-color, buttonface);\n          border: 1px solid var(--dt-location-map-border-color, #fefefe);\n          border-radius: var(--dt-location-map-border-radius, 0);\n          box-shadow: var(\n            --dt-location-map-box-shadow,\n            var(\n              --dt-form-input-box-shadow,\n              inset 0 1px 2px hsl(0deg 0% 4% / 10%)\n            )\n          );\n        }\n        .field-container .input-addon:hover {\n          background-color: var(--dt-location-map-button-hover-background-color, #cc4b37);\n          color: var(--dt-location-map-button-hover-color, #ffffff);\n        }\n        \n        .input-addon:disabled {\n          background-color: var(--dt-form-disabled-background-color);\n          color: var(--dt-text-placeholder-color, #999);\n        }\n        .input-addon:disabled:hover {\n          background-color: var(--dt-form-disabled-background-color);\n          color: var(--dt-text-placeholder-color, #999);\n          cursor: not-allowed;          \n        }\n      `,\n      (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)`\n        /* === Inline Icons === */\n        .icon-overlay {\n          position: absolute;\n          inset-inline-end: 1rem;\n          top: 0;\n          inset-inline-end: 3rem;\n          height: 100%;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n        }\n\n        .icon-overlay.alert {\n          color: var(--alert-color);\n        }\n        .icon-overlay.success {\n          color: var(--success-color);\n        }\n      `,\n    ];\n  }\n\n  constructor() {\n    super();\n    this.activeIndex = -1;\n    this.filteredOptions = [];\n    this.detectTap = false;\n    this.debounceTimer = null;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.addEventListener('autofocus', async (evt) => {\n      // wait for render to complete\n      await this.updateComplete;\n\n      const input = this.shadowRoot.querySelector('input');\n      if (input) {\n        input.focus();\n      }\n    });\n\n    if (this.mapboxToken) {\n      this.mapboxService = new _services_mapboxService__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.mapboxToken);\n    }\n\n    if (this.googleToken) {\n      this.googleGeocodeService = new _services_googleGeocodeService__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this.googleToken, window, document);\n    }\n  }\n\n  updated(changedProperties) {\n    this._scrollOptionListToActive();\n\n    // set variable with width of container for truncating selected options via CSS\n    const container = this.shadowRoot.querySelector('.input-group');\n    const currentValue = container.style.getPropertyValue('--container-width');\n    if (!currentValue) {\n      container.style.setProperty(\n        '--container-width',\n        `${container.clientWidth}px`\n      );\n    }\n  }\n\n  /**\n   * When navigating via keyboard, keep active element within visible area of option list\n   * @private\n   */\n  _scrollOptionListToActive() {\n    const optionList = this.shadowRoot.querySelector('.option-list');\n    const activeEl = this.shadowRoot.querySelector('button.active');\n    if (optionList && activeEl) {\n      const elTop = activeEl.offsetTop;\n      const elBottom = activeEl.offsetTop + activeEl.clientHeight;\n      const listTop = optionList.scrollTop;\n      const listBottom = optionList.scrollTop + optionList.clientHeight;\n      if (elBottom > listBottom) {\n        // active element below visible area. scroll down\n        optionList.scrollTo({\n          top: elBottom - optionList.clientHeight,\n          behavior: 'smooth',\n        });\n      } else if (elTop < listTop) {\n        // active element above visible area. scroll up\n        optionList.scrollTo({ top: elTop, behavior: 'smooth' });\n      }\n    }\n  }\n\n  _clickOption(e) {\n    const target = e.currentTarget ?? e.target;\n    if (target && target.value) {\n      this._select(JSON.parse(target.value));\n    }\n  }\n\n  _touchStart(e) {\n    if (e.target) {\n      this.detectTap = false;\n    }\n  }\n\n  _touchMove(e) {\n    if (e.target) {\n      this.detectTap = true;\n    }\n  }\n\n  _touchEnd(e) {\n    if (!this.detectTap) {\n      if (e.target && e.target.value) {\n        this._clickOption(e);\n      }\n      this.detectTap = false;\n    }\n  }\n\n  _keyboardSelectOption() {\n    if (this.activeIndex > -1) {\n      if (this.activeIndex < this.filteredOptions.length) {\n        // select one of the options\n        this._select(this.filteredOptions[this.activeIndex]);\n      } else {\n        // select the Add New option\n        this._select({\n          value: this.query,\n          label: this.query,\n        })\n      }\n    }\n  }\n\n  async _select(metadata) {\n    if (metadata.place_id && this.googleGeocodeService) {\n      // Google Places autocomplete will give a place_id instead of geometry details,\n      // so we need to get those details by geocoding the full address from Place lookup\n      this.loading = true;\n      const place = await this.googleGeocodeService.getPlaceDetails(metadata.label, this.locale);\n      this.loading = false;\n      if (place) {\n        metadata.lat = place.geometry.location.lat;\n        metadata.lng = place.geometry.location.lng;\n        metadata.level = place.types && place.types.length ? place.types[0] : null;\n      }\n    }\n\n    // Create custom event with new/old values to pass to onchange function\n    const options = {\n      detail: {\n        metadata,\n      },\n      bubbles: false,\n    };\n    this.dispatchEvent(new CustomEvent('select', options));\n\n    // update value in this component\n    this.metadata = metadata;\n    const input = this.shadowRoot.querySelector('input');\n    if (input) {\n      input.value = metadata?.label;\n    }\n\n    this.open = false; // close options list\n    this.activeIndex = -1; // reset keyboard-selected option\n  }\n\n  get _focusTarget() {\n    let target = this._field;\n    if (this.metadata) {\n      target = this.shadowRoot.querySelector('button') || target;\n    }\n    return target;\n  }\n\n  _inputFocusIn() {\n    this.activeIndex = -1;\n  }\n\n  _inputFocusOut(e) {\n    // allow clicks on option list button to not close the option list\n    // Safari actually passes the parent <li> as the relatedTarget\n    if (\n      !e.relatedTarget ||\n      !['BUTTON', 'LI'].includes(e.relatedTarget.nodeName)\n    ) {\n      this.open = false;\n    }\n  }\n\n  _inputKeyDown(e) {\n    const keycode = e.keyCode || e.which;\n\n    switch (keycode) {\n      case 38: // arrow up\n        this.open = true;\n        this._listHighlightPrevious();\n        break;\n      case 40: // arrow down\n        this.open = true;\n        this._listHighlightNext();\n        break;\n      case 9: // tab\n        if (this.activeIndex < 0) {\n          // if pressing tab while no option is selected,\n          // close the list so you can go to next field\n          this.open = false;\n        } else {\n          e.preventDefault();\n        }\n        this._keyboardSelectOption();\n        break;\n      case 13: // enter\n        this._keyboardSelectOption();\n        break;\n      case 27: // escape\n        this.open = false;\n        this.activeIndex = -1;\n        break;\n      default:\n        this.open = true;\n        break;\n    }\n  }\n\n  _inputKeyUp(e) {\n    const keycode = e.keyCode || e.which;\n    const ignoredKeys = [9, 13]; // ignore tab & enter;\n    if (e.target.value && !ignoredKeys.includes(keycode)) {\n      this.open = true;\n    }\n    this.query = e.target.value;\n  }\n\n  _listHighlightNext() {\n    this.activeIndex = Math.min(\n      this.filteredOptions.length,\n      this.activeIndex + 1\n    );\n  }\n\n  _listHighlightPrevious() {\n    this.activeIndex = Math.max(0, this.activeIndex - 1);\n  }\n\n  /**\n   * Filter to options that:\n   *   1: are not selected\n   *   2: match the search query\n   * @private\n   */\n  async _filterOptions() {\n    if (this.query) {\n      if (this.googleToken && this.googleGeocodeService) {\n        this.loading = true;\n\n        try {\n          const predictions = await this.googleGeocodeService.getPlacePredictions(this.query, this.locale);\n\n          this.filteredOptions = (predictions || []).map((i) => ({\n            label: i.description,\n            place_id: i.place_id,\n            source: 'user',\n            raw: i,\n          }));\n\n          this.loading = false;\n        } catch (ex) {\n          console.error(ex);\n          this.error = true;\n          this.loading = false;\n          return;\n        }\n      } else if (this.mapboxToken && this.mapboxService) {\n        this.loading = true;\n\n        const results = await this.mapboxService.searchPlaces(this.query, this.locale);\n\n        this.filteredOptions = results.map((i) => ({\n          lng: i.center[0],\n          lat: i.center[1],\n          level: i.place_type[0],\n          label: i.place_name,\n          source: 'user'\n        }));\n\n        this.loading = false;\n      }\n    }\n    return this.filteredOptions;\n  }\n\n  willUpdate(props) {\n    super.willUpdate(props);\n\n    if (props) {\n      // // if query changes, trigger filter\n      const queryChanged = props.has('query');\n      if (queryChanged) {\n        this.error = false;\n        clearTimeout(this.debounceTimer);\n        this.debounceTimer = setTimeout(() => this._filterOptions(), 300);\n      }\n\n      // Set the containerHeight for dropdown positioning if it hasn't been set yet\n      if (\n        !this.containerHeight &&\n        this.shadowRoot.children &&\n        this.shadowRoot.children.length\n      ) {\n        const inputGroup = this.shadowRoot.querySelector('.input-group');\n        if (inputGroup) {\n          this.containerHeight = inputGroup.offsetHeight;\n        }\n      }\n    }\n  }\n\n  _change() {\n\n  }\n  _delete() {\n    const options = {\n      detail: {\n        metadata: this.metadata,\n      },\n      bubbles: false,\n    };\n    this.dispatchEvent(new CustomEvent('delete', options));\n  }\n  _openMapModal() {\n    this.shadowRoot.querySelector('dt-map-modal').dispatchEvent(new Event('open'));\n  }\n  async _onMapModalSubmit(e) {\n    if (e?.detail?.location?.lat) {\n      const { location } = e?.detail;\n      const { lat, lng } = location;\n\n      // reverse geocode location and save\n      if (this.googleGeocodeService) {\n        const results = await this.googleGeocodeService.reverseGeocode(lng, lat, this.locale);\n        if (results && results.length) {\n          const place = results[0];\n          this._select({\n            lng: place.geometry.location.lng,\n            lat: place.geometry.location.lat,\n            level: place.types && place.types.length ? place.types[0] : null,\n            label: place.formatted_address,\n            source: 'user',\n          });\n        }\n      } else if (this.mapboxService) {\n        const results = await this.mapboxService.reverseGeocode(lng, lat, this.locale);\n        if (results && results.length) {\n          const place = results[0];\n          this._select({\n            lng: place.center[0],\n            lat: place.center[1],\n            level: place.place_type[0],\n            label: place.place_name,\n            source: 'user',\n          });\n        }\n      }\n    }\n  }\n\n  _renderOption(opt, idx, label) {\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      <li tabindex=\"-1\">\n        <button\n          value=\"${JSON.stringify(opt)}\"\n          type=\"button\"\n          @click=\"${this._clickOption}\"\n          @touchstart=\"${this._touchStart}\"\n          @touchmove=\"${this._touchMove}\"\n          @touchend=\"${this._touchEnd}\"\n          tabindex=\"-1\"\n          class=\"${this.activeIndex > -1 && this.activeIndex === idx\n      ? 'active'\n      : ''}\"\n        >\n          ${label ?? opt.label}\n        </button>\n      </li>\n    `;\n  }\n\n  _renderOptions() {\n    let options = [];\n    if (!this.filteredOptions.length) {\n      if (this.loading) {\n        options.push((0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<li><div>${(0,_lit_localize__WEBPACK_IMPORTED_MODULE_2__.msg)('Loading...')}</div></li>`);\n      } else {\n        options.push((0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<li><div>${(0,_lit_localize__WEBPACK_IMPORTED_MODULE_2__.msg)('No Data Available')}</div></li>`);\n      }\n    } else {\n      options.push(...this.filteredOptions.map((opt, idx) => this._renderOption(opt, idx)));\n    }\n\n    options.push(this._renderOption({\n      value: this.query,\n      label: this.query,\n    }, (this.filteredOptions || []).length, (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<strong>${(0,_lit_localize__WEBPACK_IMPORTED_MODULE_2__.msg)('Use')}: \"${this.query}\"</strong>`));\n    return options;\n  }\n\n  render() {\n    const optionListStyles = {\n      display: this.open ? 'block' : 'none',\n      top: this.containerHeight ? `${this.containerHeight}px` : '2.5rem',\n    };\n    const existingValue = !!this.metadata?.label;\n    const hasGeometry = this.metadata?.lat && this.metadata?.lng;\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      <div class=\"input-group\">\n        <div class=\"field-container\">      \n          <input \n            type=\"text\"\n            class=\"${this.disabled ? 'disabled' : null}\"\n            placeholder=\"${this.placeholder}\"\n            value=\"${this.metadata?.label}\"\n            .disabled=${(existingValue && hasGeometry) || this.disabled}\n            @focusin=\"${this._inputFocusIn}\"\n            @blur=\"${this._inputFocusOut}\"\n            @keydown=\"${this._inputKeyDown}\"\n            @keyup=\"${this._inputKeyUp}\"\n          />\n          \n          ${existingValue && hasGeometry ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n          <button \n            class=\"input-addon btn-map\" \n            @click=${this._openMapModal}\n            ?disabled=${this.disabled}\n          >\n            <dt-icon icon=\"mdi:map\" />\n          </button>\n          ` : null }\n          ${existingValue ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n          <button \n            class=\"input-addon btn-delete\" \n            @click=${this._delete}\n            ?disabled=${this.disabled}\n          >\n            <dt-icon icon=\"mdi:trash-can-outline\" />\n          </button>\n          ` : (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n          <button \n            class=\"input-addon btn-pin\" \n            @click=${this._openMapModal}\n            ?disabled=${this.disabled}\n          >\n            <dt-icon icon=\"mdi:map-marker-radius\" />\n          </button>\n          ` }\n        </div>\n        <ul class=\"option-list\" style=${(0,lit_directives_style_map_js__WEBPACK_IMPORTED_MODULE_1__.styleMap)(optionListStyles)}>\n          ${this._renderOptions()}\n        </ul>\n        ${(this.touched && this.invalid) || this.error\n          ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<dt-exclamation-circle class=\"icon-overlay alert\"></dt-exclamation-circle>`\n            : null}\n        ${this.loading\n          ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<dt-spinner class=\"icon-overlay\"></dt-spinner>` : null}\n        ${this.saved \n          ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<dt-checkmark class=\"icon-overlay success\"></dt-checkmark>` : null}\n      </div>\n      \n      <dt-map-modal \n        .metadata=${this.metadata} \n        mapbox-token=\"${this.mapboxToken}\"\n        @submit=${this._onMapModalSubmit} \n      />\n      \n`;\n  }\n}\nwindow.customElements.define('dt-location-map-item', DtLocationMapItem);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/components/form/dt-location-map/dt-location-map-item.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/components/form/dt-location-map/dt-location-map.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/components/form/dt-location-map/dt-location-map.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DtLocationMap: () => (/* binding */ DtLocationMap)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var lit_directives_repeat_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit/directives/repeat.js */ \"./node_modules/lit/directives/repeat.js\");\n/* harmony import */ var _dt_form_base_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../dt-form-base.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/dt-form-base.js\");\n/* harmony import */ var _dt_location_map_item_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dt-location-map-item.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/dt-location-map/dt-location-map-item.js\");\n\n\n\n\n\nclass DtLocationMap extends _dt_form_base_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n  static get properties() {\n    return {\n      ...super.properties,\n      placeholder: { type: String },\n      value: {\n        type: Array,\n        reflect: true,\n      },\n      locations: {\n        type: Array,\n        state: true,\n      },\n      open: {\n        type: Boolean,\n        state: true,\n      },\n      onchange: { type: String },\n      mapboxToken: {\n        type: String,\n        attribute: 'mapbox-token',\n      },\n      googleToken: {\n        type: String,\n        attribute: 'google-token',\n      },\n    };\n  }\n\n  static get styles() {\n    return [\n      ...super.styles,\n      (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)`\n        :host {\n          font-family: Helvetica, Arial, sans-serif;\n        }\n        .input-group {\n          display: flex;\n        }\n\n        .field-container {\n          position: relative;\n        }\n      `,\n    ];\n  }\n\n  constructor() {\n    super();\n    this.value = [];\n    this.locations = [{\n      id: Date.now(),\n    }];\n  }\n\n  _setFormValue(value) {\n    super._setFormValue(value);\n    this.internals.setFormValue(JSON.stringify(value));\n  }\n\n  willUpdate(...args) {\n    super.willUpdate(...args);\n\n    if (this.value) {\n      if (this.value.filter((opt) => !opt.id)) {\n        this.value = [\n          ...this.value.map((opt) => ({\n            ...opt,\n            id: opt.grid_meta_id,\n          }))\n        ];\n      }\n    }\n    this.updateLocationList();\n  }\n\n  firstUpdated(...args) {\n    super.firstUpdated(...args);\n    this.internals.setFormValue(JSON.stringify(this.value));\n  }\n\n  updated(changedProperties) {\n    // if length of value was changed, focus the last element\n    if (changedProperties.has('value')) {\n      const old = changedProperties.get('value');\n      if (old && old?.length !== this.value?.length) {\n        this.focusNewLocation();\n      }\n    }\n    // if length of locations was changed, focus the last element\n    if (changedProperties.has('locations')) {\n      const old = changedProperties.get('locations');\n      if (old && old?.length !== this.locations?.length) {\n        this.focusNewLocation();\n      }\n    }\n  }\n\n  focusNewLocation() {\n    const items = this.shadowRoot.querySelectorAll('dt-location-map-item');\n    if (items && items.length) {\n      // console.log('trigger focus');\n      items[items.length - 1].dispatchEvent(new Event('autofocus'));\n    }\n  }\n\n  updateLocationList() {\n    if (!this.disabled && (this.open || !this.value || !this.value.length)) {\n      this.open = true;\n      this.locations = [\n        ...(this.value || []).filter(i => i.label),\n        {\n          id: Date.now(),\n        }\n      ];\n    } else {\n      this.locations = [\n        ...(this.value || []).filter(i => i.label),\n      ];\n    }\n  }\n\n  selectLocation(evt) {\n    const event = new CustomEvent('change', {\n      detail: {\n        field: this.name,\n        oldValue: this.value,\n      },\n    });\n    const newLocation = {\n      ...evt.detail.metadata,\n      id: Date.now(),\n    }\n    this.value = [\n      ...(this.value || []).filter(i => i.label),\n      newLocation,\n    ];\n    this.updateLocationList();\n    event.detail.newValue = this.value;\n\n    // dispatch event for use with addEventListener from javascript\n    this.dispatchEvent(event);\n    this._setFormValue(this.value);\n  }\n\n  deleteItem(evt) {\n    const event = new CustomEvent('change', {\n      detail: {\n        field: this.name,\n        oldValue: this.value,\n      },\n    });\n\n    const item = evt.detail?.metadata;\n    const gridMetaId = item?.grid_meta_id;\n    if (gridMetaId) {\n      // remove this item from the value\n      this.value = (this.value || []).filter(m => m.grid_meta_id !== gridMetaId);\n    } else {\n      // remove by lat/lng\n      this.value = (this.value || []).filter(m => m.lat !== item.lat && m.lng !== item.lng);\n    }\n\n    this.updateLocationList();\n    event.detail.newValue = this.value;\n\n    // dispatch event for use with addEventListener from javascript\n    this.dispatchEvent(event);\n    this._setFormValue(this.value);\n  }\n\n  addNew() {\n    this.open = true;\n    this.updateLocationList();\n  }\n\n  renderItem(opt) {\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      <dt-location-map-item\n        placeholder=\"${this.placeholder}\"\n        .metadata=${opt}\n        mapbox-token=\"${this.mapboxToken}\"\n        google-token=\"${this.googleToken}\"\n        @delete=${this.deleteItem}\n        @select=${this.selectLocation}\n        ?disabled=${this.disabled}\n      ></dt-location-map-item>\n    `;\n  }\n\n  render() {\n    const values = [...(this.value || [])];\n    values.push({\n      id: Date.now(),\n    });\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      ${this.labelTemplate()}\n\n      ${(0,lit_directives_repeat_js__WEBPACK_IMPORTED_MODULE_1__.repeat)(this.locations || [], (opt) => opt.id, (opt, idx) => this.renderItem(opt, idx))}\n      ${!this.open\n        ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<button @click=\"${this.addNew}\">Add New</button>`\n        : null}\n    `;\n  }\n}\n\nwindow.customElements.define('dt-location-map', DtLocationMap);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/components/form/dt-location-map/dt-location-map.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/components/form/dt-location-map/dt-map-modal.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/components/form/dt-location-map/dt-map-modal.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DtMapModal: () => (/* binding */ DtMapModal)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var _lit_localize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @lit/localize */ \"./node_modules/@lit/localize/lit-localize.js\");\n/* harmony import */ var _dt_base_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../dt-base.js */ \"./node_modules/@disciple.tools/web-components/src/components/dt-base.js\");\n/* harmony import */ var _layout_dt_modal_dt_modal_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../layout/dt-modal/dt-modal.js */ \"./node_modules/@disciple.tools/web-components/src/components/layout/dt-modal/dt-modal.js\");\n\n\n\n\n\nclass DtMapModal extends _dt_base_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n  static get properties() {\n    return {\n      ...super.properties,\n      title: { type: String },\n      isOpen: { type: Boolean },\n      canEdit: { type: Boolean, state: true },\n      metadata: { type: Object },\n      center: { type: Array },\n      mapboxToken: {\n        type: String,\n        attribute: 'mapbox-token',\n      },\n    };\n  }\n\n  static get styles() {\n    return [\n      (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)`\n        .map {\n          width: 100%;\n          min-width: 50vw;\n          min-height: 50dvb;\n        }\n      `,\n    ];\n  }\n\n  constructor() {\n    super();\n\n    this.addEventListener('open', (e) => {\n      this.shadowRoot.querySelector('dt-modal').dispatchEvent(new Event('open'));\n      this.isOpen = true;\n    });\n    this.addEventListener('close', (e) => {\n      this.shadowRoot.querySelector('dt-modal').dispatchEvent(new Event('close'));\n      this.isOpen = false;\n    });\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.canEdit = !this.metadata;\n\n    if (!window.mapboxgl) {\n      let script = document.createElement('script');\n      script.src = 'https://api.mapbox.com/mapbox-gl-js/v2.11.0/mapbox-gl.js';\n      script.onload = this.initMap.bind(this);\n      document.body.appendChild(script);\n      console.log('injected script')\n    } else {\n      this.initMap();\n    }\n  }\n\n  initMap() {\n    if (!this.isOpen || !window.mapboxgl || !this.mapboxToken) {\n      return;\n    }\n\n    const mapContainer = this.shadowRoot.querySelector('#map')\n    if (mapContainer && !this.map) {\n      this.map = new window.mapboxgl.Map({\n        accessToken: this.mapboxToken,\n        container: mapContainer,\n        style: 'mapbox://styles/mapbox/streets-v12', // style URL\n        minZoom: 1,\n      });\n      this.map.on('load', () => this.map.resize());\n      if (this.center && this.center.length) {\n        this.map.setCenter(this.center);\n        this.map.setZoom(15);\n      }\n\n      // Add zoom controls\n      const nav = new mapboxgl.NavigationControl();\n      this.map.addControl(nav, 'bottom-right');\n\n      // Add pin if there is one\n      this.addPinFromMetadata();\n\n      // If map is editable add/move marker on click\n      this.map.on('click', (e) => {\n        if (!this.canEdit) {\n          return;\n        }\n        if (this.marker) {\n          this.marker.setLngLat(e.lngLat)\n        } else {\n          this.marker = new mapboxgl.Marker()\n            .setLngLat(e.lngLat)\n            .addTo(this.map);\n        }\n      });\n    }\n  }\n\n  addPinFromMetadata() {\n    if (this.metadata) {\n      const { lng, lat, level } = this.metadata;\n      let zoom = 15\n      if ('admin0' === level) {\n        zoom = 3\n      } else if ('admin1' === level) {\n        zoom = 6\n      } else if ('admin2' === level) {\n        zoom = 10\n      }\n\n      if (this.map) {\n        this.map.setCenter([lng, lat]);\n        this.map.setZoom(zoom);\n        this.marker = new mapboxgl.Marker()\n          .setLngLat([lng, lat])\n          .addTo(this.map);\n      }\n    }\n  }\n\n  updated(changedProperties) {\n    if (!window.mapboxgl) {\n      return;\n    }\n\n    if (changedProperties.has('metadata') && this.metadata && this.metadata.lat) {\n      this.addPinFromMetadata()\n    }\n    if (changedProperties.has('isOpen') && this.isOpen) {\n      this.initMap();\n    }\n  }\n\n  onClose(e) {\n    if (e?.detail?.action === 'button' && this.marker) {\n      this.dispatchEvent(new CustomEvent('submit', {\n        detail: {\n          location: this.marker.getLngLat(),\n        }\n      }));\n    }\n  }\n  render() {\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`      \n      <dt-modal\n        .title=${this.metadata?.label}\n        ?isopen=${this.isOpen}\n        hideButton\n        @close=${this.onClose}\n      >\n        <div slot=\"content\">\n          <div class=\"map\" id=\"map\"></div>\n        </div>\n       \n        ${this.canEdit ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<div slot=\"close-button\">${(0,_lit_localize__WEBPACK_IMPORTED_MODULE_1__.msg)('Save')}</div>` : null}\n      </dt-modal>\n      \n      <link href='https://api.mapbox.com/mapbox-gl-js/v2.11.0/mapbox-gl.css' rel='stylesheet' />\n    `;\n  }\n}\n\nwindow.customElements.define('dt-map-modal', DtMapModal);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRpc2NpcGxlLnRvb2xzL3dlYi1jb21wb25lbnRzL3NyYy9jb21wb25lbnRzL2Zvcm0vZHQtbG9jYXRpb24tbWFwL2R0LW1hcC1tb2RhbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFnQztBQUNJO0FBQ0U7QUFDSzs7QUFFcEMseUJBQXlCLG1EQUFNO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBLGVBQWUsY0FBYztBQUM3QixnQkFBZ0IsZUFBZTtBQUMvQixpQkFBaUIsNEJBQTRCO0FBQzdDLGtCQUFrQixjQUFjO0FBQ2hDLGdCQUFnQixhQUFhO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxNQUFNLHdDQUFHO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsY0FBYyxrQkFBa0I7QUFDaEM7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxXQUFXLHlDQUFJO0FBQ2Y7QUFDQSxpQkFBaUI7QUFDakIsa0JBQWtCO0FBQ2xCO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLGVBQWUseUNBQUksNEJBQTRCLGtEQUFHLFNBQVM7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGlzY2lwbGUtdG9vbHMtY29udmVyc2F0aW9ucy8uL25vZGVfbW9kdWxlcy9AZGlzY2lwbGUudG9vbHMvd2ViLWNvbXBvbmVudHMvc3JjL2NvbXBvbmVudHMvZm9ybS9kdC1sb2NhdGlvbi1tYXAvZHQtbWFwLW1vZGFsLmpzPzZkM2UiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzLCBodG1sIH0gZnJvbSAnbGl0JztcbmltcG9ydCB7IG1zZyB9IGZyb20gJ0BsaXQvbG9jYWxpemUnO1xuaW1wb3J0IER0QmFzZSBmcm9tICcuLi8uLi9kdC1iYXNlLmpzJztcbmltcG9ydCAnLi4vLi4vbGF5b3V0L2R0LW1vZGFsL2R0LW1vZGFsLmpzJztcblxuZXhwb3J0IGNsYXNzIER0TWFwTW9kYWwgZXh0ZW5kcyBEdEJhc2Uge1xuICBzdGF0aWMgZ2V0IHByb3BlcnRpZXMoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLnN1cGVyLnByb3BlcnRpZXMsXG4gICAgICB0aXRsZTogeyB0eXBlOiBTdHJpbmcgfSxcbiAgICAgIGlzT3BlbjogeyB0eXBlOiBCb29sZWFuIH0sXG4gICAgICBjYW5FZGl0OiB7IHR5cGU6IEJvb2xlYW4sIHN0YXRlOiB0cnVlIH0sXG4gICAgICBtZXRhZGF0YTogeyB0eXBlOiBPYmplY3QgfSxcbiAgICAgIGNlbnRlcjogeyB0eXBlOiBBcnJheSB9LFxuICAgICAgbWFwYm94VG9rZW46IHtcbiAgICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgICBhdHRyaWJ1dGU6ICdtYXBib3gtdG9rZW4nLFxuICAgICAgfSxcbiAgICB9O1xuICB9XG5cbiAgc3RhdGljIGdldCBzdHlsZXMoKSB7XG4gICAgcmV0dXJuIFtcbiAgICAgIGNzc2BcbiAgICAgICAgLm1hcCB7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgbWluLXdpZHRoOiA1MHZ3O1xuICAgICAgICAgIG1pbi1oZWlnaHQ6IDUwZHZiO1xuICAgICAgICB9XG4gICAgICBgLFxuICAgIF07XG4gIH1cblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuXG4gICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKCdvcGVuJywgKGUpID0+IHtcbiAgICAgIHRoaXMuc2hhZG93Um9vdC5xdWVyeVNlbGVjdG9yKCdkdC1tb2RhbCcpLmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KCdvcGVuJykpO1xuICAgICAgdGhpcy5pc09wZW4gPSB0cnVlO1xuICAgIH0pO1xuICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcignY2xvc2UnLCAoZSkgPT4ge1xuICAgICAgdGhpcy5zaGFkb3dSb290LnF1ZXJ5U2VsZWN0b3IoJ2R0LW1vZGFsJykuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoJ2Nsb3NlJykpO1xuICAgICAgdGhpcy5pc09wZW4gPSBmYWxzZTtcbiAgICB9KTtcbiAgfVxuXG4gIGNvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIHN1cGVyLmNvbm5lY3RlZENhbGxiYWNrKCk7XG5cbiAgICB0aGlzLmNhbkVkaXQgPSAhdGhpcy5tZXRhZGF0YTtcblxuICAgIGlmICghd2luZG93Lm1hcGJveGdsKSB7XG4gICAgICBsZXQgc2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7XG4gICAgICBzY3JpcHQuc3JjID0gJ2h0dHBzOi8vYXBpLm1hcGJveC5jb20vbWFwYm94LWdsLWpzL3YyLjExLjAvbWFwYm94LWdsLmpzJztcbiAgICAgIHNjcmlwdC5vbmxvYWQgPSB0aGlzLmluaXRNYXAuYmluZCh0aGlzKTtcbiAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoc2NyaXB0KTtcbiAgICAgIGNvbnNvbGUubG9nKCdpbmplY3RlZCBzY3JpcHQnKVxuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmluaXRNYXAoKTtcbiAgICB9XG4gIH1cblxuICBpbml0TWFwKCkge1xuICAgIGlmICghdGhpcy5pc09wZW4gfHwgIXdpbmRvdy5tYXBib3hnbCB8fCAhdGhpcy5tYXBib3hUb2tlbikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IG1hcENvbnRhaW5lciA9IHRoaXMuc2hhZG93Um9vdC5xdWVyeVNlbGVjdG9yKCcjbWFwJylcbiAgICBpZiAobWFwQ29udGFpbmVyICYmICF0aGlzLm1hcCkge1xuICAgICAgdGhpcy5tYXAgPSBuZXcgd2luZG93Lm1hcGJveGdsLk1hcCh7XG4gICAgICAgIGFjY2Vzc1Rva2VuOiB0aGlzLm1hcGJveFRva2VuLFxuICAgICAgICBjb250YWluZXI6IG1hcENvbnRhaW5lcixcbiAgICAgICAgc3R5bGU6ICdtYXBib3g6Ly9zdHlsZXMvbWFwYm94L3N0cmVldHMtdjEyJywgLy8gc3R5bGUgVVJMXG4gICAgICAgIG1pblpvb206IDEsXG4gICAgICB9KTtcbiAgICAgIHRoaXMubWFwLm9uKCdsb2FkJywgKCkgPT4gdGhpcy5tYXAucmVzaXplKCkpO1xuICAgICAgaWYgKHRoaXMuY2VudGVyICYmIHRoaXMuY2VudGVyLmxlbmd0aCkge1xuICAgICAgICB0aGlzLm1hcC5zZXRDZW50ZXIodGhpcy5jZW50ZXIpO1xuICAgICAgICB0aGlzLm1hcC5zZXRab29tKDE1KTtcbiAgICAgIH1cblxuICAgICAgLy8gQWRkIHpvb20gY29udHJvbHNcbiAgICAgIGNvbnN0IG5hdiA9IG5ldyBtYXBib3hnbC5OYXZpZ2F0aW9uQ29udHJvbCgpO1xuICAgICAgdGhpcy5tYXAuYWRkQ29udHJvbChuYXYsICdib3R0b20tcmlnaHQnKTtcblxuICAgICAgLy8gQWRkIHBpbiBpZiB0aGVyZSBpcyBvbmVcbiAgICAgIHRoaXMuYWRkUGluRnJvbU1ldGFkYXRhKCk7XG5cbiAgICAgIC8vIElmIG1hcCBpcyBlZGl0YWJsZSBhZGQvbW92ZSBtYXJrZXIgb24gY2xpY2tcbiAgICAgIHRoaXMubWFwLm9uKCdjbGljaycsIChlKSA9PiB7XG4gICAgICAgIGlmICghdGhpcy5jYW5FZGl0KSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLm1hcmtlcikge1xuICAgICAgICAgIHRoaXMubWFya2VyLnNldExuZ0xhdChlLmxuZ0xhdClcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLm1hcmtlciA9IG5ldyBtYXBib3hnbC5NYXJrZXIoKVxuICAgICAgICAgICAgLnNldExuZ0xhdChlLmxuZ0xhdClcbiAgICAgICAgICAgIC5hZGRUbyh0aGlzLm1hcCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGFkZFBpbkZyb21NZXRhZGF0YSgpIHtcbiAgICBpZiAodGhpcy5tZXRhZGF0YSkge1xuICAgICAgY29uc3QgeyBsbmcsIGxhdCwgbGV2ZWwgfSA9IHRoaXMubWV0YWRhdGE7XG4gICAgICBsZXQgem9vbSA9IDE1XG4gICAgICBpZiAoJ2FkbWluMCcgPT09IGxldmVsKSB7XG4gICAgICAgIHpvb20gPSAzXG4gICAgICB9IGVsc2UgaWYgKCdhZG1pbjEnID09PSBsZXZlbCkge1xuICAgICAgICB6b29tID0gNlxuICAgICAgfSBlbHNlIGlmICgnYWRtaW4yJyA9PT0gbGV2ZWwpIHtcbiAgICAgICAgem9vbSA9IDEwXG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLm1hcCkge1xuICAgICAgICB0aGlzLm1hcC5zZXRDZW50ZXIoW2xuZywgbGF0XSk7XG4gICAgICAgIHRoaXMubWFwLnNldFpvb20oem9vbSk7XG4gICAgICAgIHRoaXMubWFya2VyID0gbmV3IG1hcGJveGdsLk1hcmtlcigpXG4gICAgICAgICAgLnNldExuZ0xhdChbbG5nLCBsYXRdKVxuICAgICAgICAgIC5hZGRUbyh0aGlzLm1hcCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgdXBkYXRlZChjaGFuZ2VkUHJvcGVydGllcykge1xuICAgIGlmICghd2luZG93Lm1hcGJveGdsKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKGNoYW5nZWRQcm9wZXJ0aWVzLmhhcygnbWV0YWRhdGEnKSAmJiB0aGlzLm1ldGFkYXRhICYmIHRoaXMubWV0YWRhdGEubGF0KSB7XG4gICAgICB0aGlzLmFkZFBpbkZyb21NZXRhZGF0YSgpXG4gICAgfVxuICAgIGlmIChjaGFuZ2VkUHJvcGVydGllcy5oYXMoJ2lzT3BlbicpICYmIHRoaXMuaXNPcGVuKSB7XG4gICAgICB0aGlzLmluaXRNYXAoKTtcbiAgICB9XG4gIH1cblxuICBvbkNsb3NlKGUpIHtcbiAgICBpZiAoZT8uZGV0YWlsPy5hY3Rpb24gPT09ICdidXR0b24nICYmIHRoaXMubWFya2VyKSB7XG4gICAgICB0aGlzLmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KCdzdWJtaXQnLCB7XG4gICAgICAgIGRldGFpbDoge1xuICAgICAgICAgIGxvY2F0aW9uOiB0aGlzLm1hcmtlci5nZXRMbmdMYXQoKSxcbiAgICAgICAgfVxuICAgICAgfSkpO1xuICAgIH1cbiAgfVxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIGh0bWxgICAgICAgXG4gICAgICA8ZHQtbW9kYWxcbiAgICAgICAgLnRpdGxlPSR7dGhpcy5tZXRhZGF0YT8ubGFiZWx9XG4gICAgICAgID9pc29wZW49JHt0aGlzLmlzT3Blbn1cbiAgICAgICAgaGlkZUJ1dHRvblxuICAgICAgICBAY2xvc2U9JHt0aGlzLm9uQ2xvc2V9XG4gICAgICA+XG4gICAgICAgIDxkaXYgc2xvdD1cImNvbnRlbnRcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwibWFwXCIgaWQ9XCJtYXBcIj48L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgXG4gICAgICAgICR7dGhpcy5jYW5FZGl0ID8gaHRtbGA8ZGl2IHNsb3Q9XCJjbG9zZS1idXR0b25cIj4ke21zZygnU2F2ZScpfTwvZGl2PmAgOiBudWxsfVxuICAgICAgPC9kdC1tb2RhbD5cbiAgICAgIFxuICAgICAgPGxpbmsgaHJlZj0naHR0cHM6Ly9hcGkubWFwYm94LmNvbS9tYXBib3gtZ2wtanMvdjIuMTEuMC9tYXBib3gtZ2wuY3NzJyByZWw9J3N0eWxlc2hlZXQnIC8+XG4gICAgYDtcbiAgfVxufVxuXG53aW5kb3cuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdkdC1tYXAtbW9kYWwnLCBEdE1hcE1vZGFsKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/components/form/dt-location-map/dt-map-modal.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/components/form/dt-location/dt-location.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/components/form/dt-location/dt-location.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DtLocation: () => (/* binding */ DtLocation)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var lit_directives_style_map_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit/directives/style-map.js */ \"./node_modules/lit/directives/style-map.js\");\n/* harmony import */ var lit_directives_map_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lit/directives/map.js */ \"./node_modules/lit/directives/map.js\");\n/* harmony import */ var _dt_tags_dt_tags_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../dt-tags/dt-tags.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/dt-tags/dt-tags.js\");\n\n\n\n\n\nclass DtLocation extends _dt_tags_dt_tags_js__WEBPACK_IMPORTED_MODULE_3__.DtTags {\n  static get properties() {\n    return {\n      ...super.properties,\n      filters: { type: Array },\n      mapboxKey: { type: String },\n      dtMapbox: { type: Object },\n    };\n  }\n\n  static get styles() {\n    return [\n      ...super.styles,\n      (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)`\n        .input-group {\n          display: flex;\n        }\n\n        .field-container {\n          position: relative;\n        }\n\n        select {\n          border: 1px solid var(--dt-form-border-color, #cacaca);\n          outline: 0;\n        }\n        .selected-option > *:first-child {\n          max-width: calc(\n            var(--container-width) - var(--select-width) -\n              var(--container-padding) - var(--option-padding) -\n              var(--option-button) - 8px\n          );\n        }\n      `,\n    ];\n  }\n\n  _clickOption(e) {\n    if (e.target && e.target.value) {\n      const id = e.target.value;\n      const option = this.filteredOptions.reduce((result, opt) => {\n        if (!result && opt.id === id) {\n          return opt;\n        }\n        return result;\n      }, null);\n      this._select(option);\n    }\n  }\n\n  _clickAddNew(e) {\n    if (e.target) {\n      this._select({\n        id: e.target.dataset?.label,\n        label: e.target.dataset?.label,\n        isNew: true,\n      });\n      // clear search field if clicked with mouse, since field will lose focus\n      const input = this.shadowRoot.querySelector('input');\n      if (input) {\n        input.value = '';\n      }\n    }\n  }\n\n  _keyboardSelectOption() {\n    if (this.activeIndex > -1) {\n      if (this.activeIndex + 1 > this.filteredOptions.length) {\n        this._select({\n          id: this.query,\n          label: this.query,\n          isNew: true,\n        });\n      } else {\n        this._select(this.filteredOptions[this.activeIndex]);\n      }\n    }\n  }\n\n  _remove(e) {\n    if (e.target && e.target.dataset && e.target.dataset.value) {\n      const event = new CustomEvent('change', {\n        detail: {\n          field: this.name,\n          oldValue: this.value,\n        },\n      });\n      this.value = (this.value || []).map(i => {\n        const val = {\n          ...i,\n        };\n        if (i.id === e.target.dataset.value) {\n          val.delete = true;\n        }\n        return val;\n      });\n      event.detail.newValue = this.value;\n\n      // dispatch event for use with addEventListener from javascript\n      this.dispatchEvent(event);\n\n      // If option was de-selected while list was open, re-focus input\n      if (this.open) {\n        this.shadowRoot.querySelector('input').focus();\n      }\n    }\n  }\n\n  updated() {\n    super.updated();\n\n    // set variable with width of container for truncating selected options via CSS\n    const container = this.shadowRoot.querySelector('.input-group');\n    const currentValue = container.style.getPropertyValue('--select-width');\n    const select = this.shadowRoot.querySelector('select');\n    if (!currentValue && select?.clientWidth > 0) {\n      container.style.setProperty('--select-width', `${select.clientWidth}px`);\n    }\n  }\n\n  /**\n   * Filter to options that:\n   *   1: are not selected\n   *   2: match the search query\n   * @private\n   */\n  _filterOptions() {\n    const selectedValues = (this.value || [])\n      .filter(i => !i.delete)\n      .map(v => v?.id);\n\n    if (this.options?.length) {\n      this.filteredOptions = (this.options || []).filter(\n        opt =>\n          !selectedValues.includes(opt.id) &&\n          (!this.query ||\n            opt.label\n              .toLocaleLowerCase()\n              .includes(this.query.toLocaleLowerCase()))\n      );\n    } else {\n      this.loading = true;\n      this.filteredOptions = [];\n\n      // need to fetch data via API request\n      const self = this;\n      const selectEl = this.shadowRoot.querySelector('select');\n      const event = new CustomEvent('load', {\n        bubbles: true,\n        detail: {\n          field: this.name,\n          query: this.query,\n          filter: selectEl?.value,\n          onSuccess: result => {\n            self.loading = false;\n\n            // filter out selected values from list\n            self.filteredOptions = result.filter(\n              opt => !selectedValues.includes(opt.id)\n            );\n          },\n          onError: error => {\n            console.warn(error);\n            self.loading = false;\n          },\n        },\n      });\n      this.dispatchEvent(event);\n    }\n    return this.filteredOptions;\n  }\n\n  _renderOption(opt, idx) {\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      <li tabindex=\"-1\">\n        <button\n          value=\"${opt.id}\"\n          type=\"button\"\n          data-label=\"${opt.label}\"\n          @click=\"${this._clickOption}\"\n          @touchstart=\"${this._touchStart}\"\n          @touchmove=\"${this._touchMove}\"\n          @touchend=\"${this._touchEnd}\"\n          tabindex=\"-1\"\n          class=\"${this.activeIndex > -1 && this.activeIndex === idx\n      ? 'active'\n      : ''}\"\n        >\n          ${opt.label}\n        </button>\n      </li>\n    `;\n  }\n\n  _renderSelectedOptions() {\n    return (this.value || [])\n      .filter(i => !i.delete)\n      .map(\n        opt => {\n          return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n          <div class=\"selected-option\">\n            <a\n              href=\"${opt.link}\"\n              ?disabled=\"${this.disabled}\"\n              alt=\"${opt.status ? opt.status.label : opt.label}\"\n              >${opt.label}</a\n            >\n            <button\n              @click=\"${this._remove}\"\n              ?disabled=\"${this.disabled}\"\n              data-value=\"${opt.id}\"\n            >\n              x\n            </button>\n          </div>\n        `}\n      );\n  }\n\n  render() {\n    const optionListStyles = {\n      display: this.open ? 'block' : 'none',\n      top: `${this.containerHeight}px`,\n    };\n    return this.mapboxKey\n      ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)` ${this.labelTemplate()}\n          <div id=\"mapbox-wrapper\">\n            <div\n              id=\"mapbox-autocomplete\"\n              class=\"mapbox-autocomplete input-group\"\n              data-autosubmit=\"true\"\n              data-add-address=\"true\"\n            >\n              <input\n                id=\"mapbox-search\"\n                type=\"text\"\n                name=\"mapbox_search\"\n                class=\"input-group-field\"\n                autocomplete=\"off\"\n                dir=\"auto\"\n                placeholder=\"Search Location\"\n              />\n              <div class=\"input-group-button\">\n                <button\n                  id=\"mapbox-spinner-button\"\n                  class=\"button hollow\"\n                  style=\"display:none;border-color:lightgrey;\"\n                >\n                  <span\n                    class=\"\"\n                    style=\"border-radius: 50%;width: 24px;height: 24px;border: 0.25rem solid lightgrey;border-top-color: black;animation: spin 1s infinite linear;display: inline-block;\"\n                  ></span>\n                </button>\n                <button\n                  id=\"mapbox-clear-autocomplete\"\n                  class=\"button alert input-height delete-button-style mapbox-delete-button\"\n                  type=\"button\"\n                  title=\"Clear\"\n                  style=\"display:none;\"\n                >\n                  ×\n                </button>\n              </div>\n              <div\n                id=\"mapbox-autocomplete-list\"\n                class=\"mapbox-autocomplete-items\"\n              ></div>\n            </div>\n            <div id=\"location-grid-meta-results\"></div>\n          </div>`\n      : (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n          ${this.labelTemplate()}\n\n          <div class=\"input-group ${this.disabled ? 'disabled' : ''}\">\n            <div\n              class=\"field-container\"\n              @click=\"${this._focusInput}\"\n              @keydown=\"${this._focusInput}\"\n            >\n              ${this._renderSelectedOptions()}\n              <input\n                type=\"text\"\n                placeholder=\"${this.placeholder}\"\n                @focusin=\"${this._inputFocusIn}\"\n                @blur=\"${this._inputFocusOut}\"\n                @keydown=\"${this._inputKeyDown}\"\n                @keyup=\"${this._inputKeyUp}\"\n                ?disabled=\"${this.disabled}\"\n              />\n\n              ${this.loading\n                ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<dt-spinner class=\"icon-overlay\"></dt-spinner>`\n                : null}\n              ${this.saved\n                ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<dt-checkmark\n                    class=\"icon-overlay success\"\n                  ></dt-checkmark>`\n                : null}\n            </div>\n            <select class=\"filter-list\" ?disabled=\"${this.disabled}\">\n              ${(0,lit_directives_map_js__WEBPACK_IMPORTED_MODULE_2__.map)(\n                this.filters,\n                f => (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<option value=\"${f.id}\">${f.label}</option>`\n              )}\n            </select>\n            <ul class=\"option-list\" style=${(0,lit_directives_style_map_js__WEBPACK_IMPORTED_MODULE_1__.styleMap)(optionListStyles)}>\n              ${this._renderOptions()}\n            </ul>\n          </div>\n        `;\n  }\n}\n\nwindow.customElements.define('dt-location', DtLocation);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/components/form/dt-location/dt-location.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/components/form/dt-multi-select/dt-multi-select.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/components/form/dt-multi-select/dt-multi-select.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DtMultiSelect: () => (/* binding */ DtMultiSelect)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var lit_directives_style_map_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit/directives/style-map.js */ \"./node_modules/lit/directives/style-map.js\");\n/* harmony import */ var _lit_localize__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @lit/localize */ \"./node_modules/@lit/localize/lit-localize.js\");\n/* harmony import */ var _dt_form_base_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../dt-form-base.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/dt-form-base.js\");\n/* harmony import */ var _mixins_hasOptionsList_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../mixins/hasOptionsList.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/mixins/hasOptionsList.js\");\n/* harmony import */ var _icons_dt_spinner_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../icons/dt-spinner.js */ \"./node_modules/@disciple.tools/web-components/src/components/icons/dt-spinner.js\");\n/* harmony import */ var _icons_dt_checkmark_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../icons/dt-checkmark.js */ \"./node_modules/@disciple.tools/web-components/src/components/icons/dt-checkmark.js\");\n\n\n\n\n\n\n\n\nclass DtMultiSelect extends (0,_mixins_hasOptionsList_js__WEBPACK_IMPORTED_MODULE_4__.HasOptionsList)(_dt_form_base_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]) {\n  static get styles() {\n    return [\n      ...super.styles,\n      (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)`\n        :host {\n          position: relative;\n          font-family: Helvetica, Arial, sans-serif;\n        }\n\n        .input-group {\n          color: var(--dt-multi-select-text-color, #0a0a0a);\n          margin-bottom: 1rem;\n        }\n        .input-group.disabled input,\n        .input-group.disabled .field-container {\n          background-color: var(--disabled-color);\n        }\n        .input-group.disabled a,\n        .input-group.disabled button {\n          cursor: not-allowed;\n          pointer-events: none;\n        }\n        .input-group.disabled *:hover {\n          cursor: not-allowed;\n        }\n\n        .field-container {\n          background-color: var(--dt-multi-select-background-color, #fefefe);\n          border: 1px solid var(--dt-form-border-color, #cacaca);\n          border-radius: 0;\n          color: var(--dt-multi-select-text-color, #0a0a0a);\n          font-size: 1rem;\n          font-weight: 300;\n          min-height: 2.5rem;\n          line-height: 1.5;\n          margin: 0;\n          padding-top: calc(0.5rem - 0.375rem);\n          padding-bottom: 0.5rem;\n          padding-inline: 0.5rem 1.6rem;\n          box-sizing: border-box;\n          width: 100%;\n          text-transform: none;\n          display: flex;\n          flex-wrap: wrap;\n        }\n\n        .field-container input,\n        .field-container .selected-option {\n          height: 1.25rem;\n        }\n\n        .selected-option {\n          border: 1px solid var(--dt-multi-select-tag-border-color, #c2e0ff);\n          background-color: var(\n            --dt-multi-select-tag-background-color,\n            #c2e0ff\n          );\n\n          display: flex;\n          font-size: 0.875rem;\n          position: relative;\n          border-radius: 2px;\n          margin-inline-end: 4px;\n          margin-block-start: 0.375rem;\n          box-sizing: border-box;\n        }\n        .selected-option > *:first-child {\n          padding-inline-start: 4px;\n          text-overflow: ellipsis;\n          overflow: hidden;\n          white-space: nowrap;\n          --container-padding: calc(0.5rem + 1.6rem + 2px);\n          --option-padding: 8px;\n          --option-button: 20px;\n          max-width: calc(\n            var(--container-width) - var(--container-padding) -\n              var(--option-padding) - var(--option-button)\n          );\n        }\n        .selected-option * {\n          align-self: center;\n        }\n        .selected-option button {\n          background: transparent;\n          outline: 0;\n          border: 0;\n          border-inline-start: 1px solid\n            var(--dt-multi-select-tag-border-color, #c2e0ff);\n          color: var(--dt-multi-select-text-color, #0a0a0a);\n          margin-inline-start: 4px;\n        }\n        .selected-option button:hover {\n          cursor: pointer;\n        }\n\n        .field-container input {\n          background-color: var(--dt-form-background-color, #fff);\n          color: var(--dt-form-text-color, #000);\n          flex-grow: 1;\n          min-width: 50px;\n          border: 0;\n          margin-block-start: 0.375rem;\n        }\n        .field-container input:focus,\n        .field-container input:focus-visible,\n        .field-container input:active {\n          border: 0;\n          outline: 0;\n        }\n        .field-container input::placeholder {\n          color: var(--dt-text-placeholder-color, #999);\n          opacity: 1;\n        }\n\n        /* === Options List === */\n        .option-list {\n          list-style: none;\n          margin: 0;\n          padding: 0;\n          border: 1px solid var(--dt-form-border-color, #cacaca);\n          background: var(--dt-form-background-color, #fefefe);\n          z-index: 10;\n          position: absolute;\n          width: 100%;\n          top: 0;\n          left: 0;\n          box-shadow: var(--shadow-1);\n          max-height: 150px;\n          overflow-y: scroll;\n        }\n        .option-list li {\n          border-block-start: 1px solid var(--dt-form-border-color, #cacaca);\n          outline: 0;\n        }\n        .option-list li div,\n        .option-list li button {\n          padding: 0.5rem 0.75rem;\n          color: var(--dt-multi-select-text-color, #0a0a0a);\n          font-weight: 100;\n          font-size: 1rem;\n          text-decoration: none;\n          text-align: inherit;\n        }\n        .option-list li button {\n          display: block;\n          width: 100%;\n          border: 0;\n          background: transparent;\n        }\n        .option-list li button:hover,\n        .option-list li button.active {\n          cursor: pointer;\n          background: var(--dt-multi-select-option-hover-background, #f5f5f5);\n        }\n      `,\n    ];\n  }\n\n  static get properties() {\n    return {\n      ...super.properties,\n      placeholder: { type: String },\n      containerHeight: {\n        type: Number,\n        state: true,\n      },\n      onchange: { type: String },\n    };\n  }\n\n  _select(value) {\n    // Create custom event with new/old values to pass to onchange function\n    const event = new CustomEvent('change', {\n      bubbles: true,\n      detail: {\n        field: this.name,\n        oldValue: this.value,\n      },\n    });\n\n    // update value in this component\n    if (this.value && this.value.length) {\n      if (typeof this.value[0] === 'string') {\n        // If value is array of strings, check for same value prefixed with hyphen\n        this.value = [...this.value.filter(i => i !== `-${value}`), value];\n      } else {\n        // If value is array of objects, check for same value with `delete` property\n        let foundPrevious = false;\n        const newVal = this.value.map(i => {\n          const val = {\n            ...i,\n          };\n          if (i.id === value.id && i.delete) {\n            delete val.delete;\n            foundPrevious = true;\n          }\n          return val;\n        });\n        if (!foundPrevious) {\n          newVal.push(value);\n        }\n        this.value = newVal;\n      }\n    } else {\n      this.value = [value];\n    }\n    event.detail.newValue = this.value;\n    this.open = false; // close options list\n    this.activeIndex = -1; // reset keyboard-selected option\n\n    // dispatch event for use with addEventListener from javascript\n    this.dispatchEvent(event);\n    this._setFormValue(this.value);\n  }\n\n  _remove(e) {\n    if (e.target && e.target.dataset && e.target.dataset.value) {\n      const event = new CustomEvent('change', {\n        bubbles: true,\n        detail: {\n          field: this.name,\n          oldValue: this.value,\n        },\n      });\n      this.value = (this.value || []).map(i =>\n        i === e.target.dataset.value ? `-${i}` : i\n      );\n      event.detail.newValue = this.value;\n\n      // dispatch event for use with addEventListener from javascript\n      this.dispatchEvent(event);\n      this._setFormValue(this.value);\n\n      // If option was de-selected while list was open, re-focus input\n      if (this.open) {\n        this.shadowRoot.querySelector('input').focus();\n      }\n    }\n  }\n\n  /**\n   * Filter to options that:\n   *   1: are not selected\n   *   2: match the search query\n   * @private\n   */\n  _filterOptions() {\n    this.filteredOptions = (this.options || []).filter(\n      opt =>\n        !(this.value || []).includes(opt.id) &&\n        (!this.query ||\n          opt.label\n            .toLocaleLowerCase()\n            .includes(this.query.toLocaleLowerCase()))\n    );\n    return this.filteredOptions;\n  }\n\n  willUpdate(props) {\n    super.willUpdate(props);\n\n    if (props) {\n      const valueChanged = props.has('value');\n      const queryChanged = props.has('query');\n      const optionsChanged = props.has('options');\n\n      // if value, query, or options change, trigger filter\n      if (valueChanged || queryChanged || optionsChanged) {\n        this._filterOptions();\n      }\n    }\n  }\n\n  _renderSelectedOptions() {\n    return (\n      this.options &&\n      this.options\n        .filter(opt => this.value && this.value.indexOf(opt.id) > -1)\n        .map(\n          opt => (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n            <div class=\"selected-option\">\n              <span>${opt.label}</span>\n              <button\n                @click=\"${this._remove}\"\n                ?disabled=\"${this.disabled}\"\n                data-value=\"${opt.id}\"\n              >\n                x\n              </button>\n            </div>\n          `\n        )\n    );\n  }\n\n  render() {\n    const optionListStyles = {\n      display: this.open ? 'block' : 'none',\n      top: this.containerHeight ? `${this.containerHeight}px` : '2.5rem',\n    };\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      ${this.labelTemplate()}\n\n      <div class=\"input-group ${this.disabled ? 'disabled' : ''}\">\n        <div\n          class=\"field-container\"\n          @click=\"${this._focusInput}\"\n          @keydown=\"${this._focusInput}\"\n        >\n          ${this._renderSelectedOptions()}\n          <input\n            type=\"text\"\n            placeholder=\"${this.placeholder}\"\n            @focusin=\"${this._inputFocusIn}\"\n            @blur=\"${this._inputFocusOut}\"\n            @keydown=\"${this._inputKeyDown}\"\n            @keyup=\"${this._inputKeyUp}\"\n            ?disabled=\"${this.disabled}\"\n          />\n        </div>\n        <ul class=\"option-list\" style=${(0,lit_directives_style_map_js__WEBPACK_IMPORTED_MODULE_1__.styleMap)(optionListStyles)}>\n          ${this._renderOptions()}\n        </ul>\n        ${this.loading\n          ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<dt-spinner class=\"icon-overlay\"></dt-spinner>`\n          : null}\n        ${this.saved\n          ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<dt-checkmark class=\"icon-overlay success\"></dt-checkmark>`\n          : null}\n        ${this.error\n          ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<dt-icon\n                icon=\"mdi:alert-circle\"\n                class=\"icon-overlay alert\"\n                tooltip=\"${this.error}\"\n                size=\"2rem\"\n                ></dt-icon>`\n              : null}\n        </div>\n`;\n  }\n}\n\nwindow.customElements.define('dt-multi-select', DtMultiSelect);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/components/form/dt-multi-select/dt-multi-select.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/components/form/dt-number/dt-number.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/components/form/dt-number/dt-number.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DtNumberField: () => (/* binding */ DtNumberField)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit/directives/if-defined.js */ \"./node_modules/lit/directives/if-defined.js\");\n/* harmony import */ var _dt_form_base_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../dt-form-base.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/dt-form-base.js\");\n/* harmony import */ var _services_apiService_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../services/apiService.js */ \"./node_modules/@disciple.tools/web-components/src/services/apiService.js\");\n\n\n\n\n\nclass DtNumberField extends _dt_form_base_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n  static get styles() {\n    return [\n      ...super.styles,\n      (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)`\n        input {\n          color: var(--dt-form-text-color, #000);\n          appearance: none;\n          background-color: var(--dt-form-background-color, #fff);\n          border: 1px solid var(--dt-form-border-color, #ccc);\n          border-radius: 0;\n          box-shadow: var(\n            --dt-form-input-box-shadow,\n            inset 0 1px 2px hsl(0deg 0% 4% / 10%)\n          );\n          box-sizing: border-box;\n          display: block;\n          font-family: inherit;\n          font-size: 1rem;\n          font-weight: 300;\n          height: 2.5rem;\n          line-height: 1.5;\n          margin: 0 0 1.0666666667rem;\n          padding: var(--dt-form-padding, 0.5333333333rem);\n          transition: var(\n            --dt-form-transition,\n            box-shadow 0.5s,\n            border-color 0.25s ease-in-out\n          );\n        }\n        input:disabled,\n        input[readonly],\n        textarea:disabled,\n        textarea[readonly] {\n          background-color: var(--dt-form-disabled-background-color, #e6e6e6);\n          cursor: not-allowed;\n        }\n        input:invalid {\n          border-color: var(--dt-form-invalid-border-color, #dc3545);\n        }\n      `,\n    ];\n  }\n\n  static get properties() {\n    return {\n      ...super.properties,\n      id: { type: String },\n      value: {\n        type: String,\n        reflect: true,\n      },\n      oldValue: {\n        type: String,\n      },\n      min: { type: Number },\n      max: { type: Number },\n      loading: { type: Boolean },\n      saved: { type: Boolean },\n      onchange: { type: String },\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.oldValue = this.value;\n  }\n\n  _checkValue(value) {\n    if (value < this.min || value > this.max) {\n      return false;\n    }\n\n    return true;\n  }\n\n  async onChange(e) {\n    if (this._checkValue(e.target.value)) {\n      const event = new CustomEvent('change', {\n        detail: {\n          field: this.name,\n          oldValue: this.value,\n          newValue: e.target.value,\n        },\n        bubbles: true,\n        composed: true,\n      });\n\n      this.value = e.target.value;\n      this._field.setCustomValidity('');\n      this.dispatchEvent(event);\n      this.api = new _services_apiService_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.nonce, `${this.apiRoot}`);\n\n      /*try {\n        const response = await this.api.updatePost(this.postType, this.postID, {\n          [this.name]: e.target.value,\n        });\n        if (response.data && response.data.status !== 200) {\n          this.handleError(response.message);\n        } else {\n          this.saved = true;\n          this.oldValue = this.value;\n        }\n      } catch (error) {\n        this.handleError(error);\n      }*/\n    } else {\n      e.currentTarget.value = '';\n    }\n  }\n\n  handleError(er = 'An error occurred.') {\n    let error = er;\n    if (error instanceof Error) {\n      console.error(error);\n      error = error.message;\n    } else {\n      console.error(error);\n    }\n    this.error = error;\n    this._field.setCustomValidity(error);\n    this.invalid = true;\n    this.value = this.oldValue;\n  }\n\n  render() {\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      ${this.labelTemplate()}\n\n      <input\n        id=\"${this.id}\"\n        name=\"${this.name}\"\n        aria-label=\"${this.label}\"\n        type=\"number\"\n        ?disabled=${this.disabled}\n        class=\"text-input\"\n        .value=\"${this.value}\"\n        min=\"${(0,lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_1__.ifDefined)(this.min)}\"\n        max=\"${(0,lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_1__.ifDefined)(this.max)}\"\n        @change=${this.onChange}\n      />\n    `;\n  }\n}\n\nwindow.customElements.define('dt-number', DtNumberField);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRpc2NpcGxlLnRvb2xzL3dlYi1jb21wb25lbnRzL3NyYy9jb21wb25lbnRzL2Zvcm0vZHQtbnVtYmVyL2R0LW51bWJlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFnQztBQUN5QjtBQUNiO0FBQ2E7O0FBRWxELDRCQUE0Qix3REFBVTtBQUM3QztBQUNBO0FBQ0E7QUFDQSxNQUFNLHdDQUFHO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGNBQWM7QUFDMUI7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsYUFBYSxjQUFjO0FBQzNCLGFBQWEsY0FBYztBQUMzQixpQkFBaUIsZUFBZTtBQUNoQyxlQUFlLGVBQWU7QUFDOUIsa0JBQWtCLGNBQWM7QUFDaEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxPQUFPOztBQUVQO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiwrREFBVSxnQkFBZ0IsYUFBYTs7QUFFNUQ7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0EsT0FBTztBQUNQLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcseUNBQUk7QUFDZixRQUFROztBQUVSO0FBQ0EsY0FBYyxRQUFRO0FBQ3RCLGdCQUFnQixVQUFVO0FBQzFCLHNCQUFzQixXQUFXO0FBQ2pDO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0Esa0JBQWtCLFdBQVc7QUFDN0IsZUFBZSx1RUFBUyxXQUFXO0FBQ25DLGVBQWUsdUVBQVMsV0FBVztBQUNuQyxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kaXNjaXBsZS10b29scy1jb252ZXJzYXRpb25zLy4vbm9kZV9tb2R1bGVzL0BkaXNjaXBsZS50b29scy93ZWItY29tcG9uZW50cy9zcmMvY29tcG9uZW50cy9mb3JtL2R0LW51bWJlci9kdC1udW1iZXIuanM/NWNmOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBodG1sLCBjc3MgfSBmcm9tICdsaXQnO1xuaW1wb3J0IHsgaWZEZWZpbmVkIH0gZnJvbSAnbGl0L2RpcmVjdGl2ZXMvaWYtZGVmaW5lZC5qcyc7XG5pbXBvcnQgRHRGb3JtQmFzZSBmcm9tICcuLi9kdC1mb3JtLWJhc2UuanMnO1xuaW1wb3J0IEFwaVNlcnZpY2UgZnJvbSAnLi4vLi4vLi4vc2VydmljZXMvYXBpU2VydmljZS5qcyc7XG5cbmV4cG9ydCBjbGFzcyBEdE51bWJlckZpZWxkIGV4dGVuZHMgRHRGb3JtQmFzZSB7XG4gIHN0YXRpYyBnZXQgc3R5bGVzKCkge1xuICAgIHJldHVybiBbXG4gICAgICAuLi5zdXBlci5zdHlsZXMsXG4gICAgICBjc3NgXG4gICAgICAgIGlucHV0IHtcbiAgICAgICAgICBjb2xvcjogdmFyKC0tZHQtZm9ybS10ZXh0LWNvbG9yLCAjMDAwKTtcbiAgICAgICAgICBhcHBlYXJhbmNlOiBub25lO1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWR0LWZvcm0tYmFja2dyb3VuZC1jb2xvciwgI2ZmZik7XG4gICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tZHQtZm9ybS1ib3JkZXItY29sb3IsICNjY2MpO1xuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDA7XG4gICAgICAgICAgYm94LXNoYWRvdzogdmFyKFxuICAgICAgICAgICAgLS1kdC1mb3JtLWlucHV0LWJveC1zaGFkb3csXG4gICAgICAgICAgICBpbnNldCAwIDFweCAycHggaHNsKDBkZWcgMCUgNCUgLyAxMCUpXG4gICAgICAgICAgKTtcbiAgICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgICAgICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICAgICAgICBmb250LXdlaWdodDogMzAwO1xuICAgICAgICAgIGhlaWdodDogMi41cmVtO1xuICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG4gICAgICAgICAgbWFyZ2luOiAwIDAgMS4wNjY2NjY2NjY3cmVtO1xuICAgICAgICAgIHBhZGRpbmc6IHZhcigtLWR0LWZvcm0tcGFkZGluZywgMC41MzMzMzMzMzMzcmVtKTtcbiAgICAgICAgICB0cmFuc2l0aW9uOiB2YXIoXG4gICAgICAgICAgICAtLWR0LWZvcm0tdHJhbnNpdGlvbixcbiAgICAgICAgICAgIGJveC1zaGFkb3cgMC41cyxcbiAgICAgICAgICAgIGJvcmRlci1jb2xvciAwLjI1cyBlYXNlLWluLW91dFxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgaW5wdXQ6ZGlzYWJsZWQsXG4gICAgICAgIGlucHV0W3JlYWRvbmx5XSxcbiAgICAgICAgdGV4dGFyZWE6ZGlzYWJsZWQsXG4gICAgICAgIHRleHRhcmVhW3JlYWRvbmx5XSB7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tZHQtZm9ybS1kaXNhYmxlZC1iYWNrZ3JvdW5kLWNvbG9yLCAjZTZlNmU2KTtcbiAgICAgICAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuICAgICAgICB9XG4gICAgICAgIGlucHV0OmludmFsaWQge1xuICAgICAgICAgIGJvcmRlci1jb2xvcjogdmFyKC0tZHQtZm9ybS1pbnZhbGlkLWJvcmRlci1jb2xvciwgI2RjMzU0NSk7XG4gICAgICAgIH1cbiAgICAgIGAsXG4gICAgXTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgcHJvcGVydGllcygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uc3VwZXIucHJvcGVydGllcyxcbiAgICAgIGlkOiB7IHR5cGU6IFN0cmluZyB9LFxuICAgICAgdmFsdWU6IHtcbiAgICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgICByZWZsZWN0OiB0cnVlLFxuICAgICAgfSxcbiAgICAgIG9sZFZhbHVlOiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIH0sXG4gICAgICBtaW46IHsgdHlwZTogTnVtYmVyIH0sXG4gICAgICBtYXg6IHsgdHlwZTogTnVtYmVyIH0sXG4gICAgICBsb2FkaW5nOiB7IHR5cGU6IEJvb2xlYW4gfSxcbiAgICAgIHNhdmVkOiB7IHR5cGU6IEJvb2xlYW4gfSxcbiAgICAgIG9uY2hhbmdlOiB7IHR5cGU6IFN0cmluZyB9LFxuICAgIH07XG4gIH1cblxuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICBzdXBlci5jb25uZWN0ZWRDYWxsYmFjaygpO1xuICAgIHRoaXMub2xkVmFsdWUgPSB0aGlzLnZhbHVlO1xuICB9XG5cbiAgX2NoZWNrVmFsdWUodmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPCB0aGlzLm1pbiB8fCB2YWx1ZSA+IHRoaXMubWF4KSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBhc3luYyBvbkNoYW5nZShlKSB7XG4gICAgaWYgKHRoaXMuX2NoZWNrVmFsdWUoZS50YXJnZXQudmFsdWUpKSB7XG4gICAgICBjb25zdCBldmVudCA9IG5ldyBDdXN0b21FdmVudCgnY2hhbmdlJywge1xuICAgICAgICBkZXRhaWw6IHtcbiAgICAgICAgICBmaWVsZDogdGhpcy5uYW1lLFxuICAgICAgICAgIG9sZFZhbHVlOiB0aGlzLnZhbHVlLFxuICAgICAgICAgIG5ld1ZhbHVlOiBlLnRhcmdldC52YWx1ZSxcbiAgICAgICAgfSxcbiAgICAgICAgYnViYmxlczogdHJ1ZSxcbiAgICAgICAgY29tcG9zZWQ6IHRydWUsXG4gICAgICB9KTtcblxuICAgICAgdGhpcy52YWx1ZSA9IGUudGFyZ2V0LnZhbHVlO1xuICAgICAgdGhpcy5fZmllbGQuc2V0Q3VzdG9tVmFsaWRpdHkoJycpO1xuICAgICAgdGhpcy5kaXNwYXRjaEV2ZW50KGV2ZW50KTtcbiAgICAgIHRoaXMuYXBpID0gbmV3IEFwaVNlcnZpY2UodGhpcy5ub25jZSwgYCR7dGhpcy5hcGlSb290fWApO1xuXG4gICAgICAvKnRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5hcGkudXBkYXRlUG9zdCh0aGlzLnBvc3RUeXBlLCB0aGlzLnBvc3RJRCwge1xuICAgICAgICAgIFt0aGlzLm5hbWVdOiBlLnRhcmdldC52YWx1ZSxcbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChyZXNwb25zZS5kYXRhICYmIHJlc3BvbnNlLmRhdGEuc3RhdHVzICE9PSAyMDApIHtcbiAgICAgICAgICB0aGlzLmhhbmRsZUVycm9yKHJlc3BvbnNlLm1lc3NhZ2UpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMuc2F2ZWQgPSB0cnVlO1xuICAgICAgICAgIHRoaXMub2xkVmFsdWUgPSB0aGlzLnZhbHVlO1xuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICB0aGlzLmhhbmRsZUVycm9yKGVycm9yKTtcbiAgICAgIH0qL1xuICAgIH0gZWxzZSB7XG4gICAgICBlLmN1cnJlbnRUYXJnZXQudmFsdWUgPSAnJztcbiAgICB9XG4gIH1cblxuICBoYW5kbGVFcnJvcihlciA9ICdBbiBlcnJvciBvY2N1cnJlZC4nKSB7XG4gICAgbGV0IGVycm9yID0gZXI7XG4gICAgaWYgKGVycm9yIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xuICAgICAgZXJyb3IgPSBlcnJvci5tZXNzYWdlO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcbiAgICB9XG4gICAgdGhpcy5lcnJvciA9IGVycm9yO1xuICAgIHRoaXMuX2ZpZWxkLnNldEN1c3RvbVZhbGlkaXR5KGVycm9yKTtcbiAgICB0aGlzLmludmFsaWQgPSB0cnVlO1xuICAgIHRoaXMudmFsdWUgPSB0aGlzLm9sZFZhbHVlO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiBodG1sYFxuICAgICAgJHt0aGlzLmxhYmVsVGVtcGxhdGUoKX1cblxuICAgICAgPGlucHV0XG4gICAgICAgIGlkPVwiJHt0aGlzLmlkfVwiXG4gICAgICAgIG5hbWU9XCIke3RoaXMubmFtZX1cIlxuICAgICAgICBhcmlhLWxhYmVsPVwiJHt0aGlzLmxhYmVsfVwiXG4gICAgICAgIHR5cGU9XCJudW1iZXJcIlxuICAgICAgICA/ZGlzYWJsZWQ9JHt0aGlzLmRpc2FibGVkfVxuICAgICAgICBjbGFzcz1cInRleHQtaW5wdXRcIlxuICAgICAgICAudmFsdWU9XCIke3RoaXMudmFsdWV9XCJcbiAgICAgICAgbWluPVwiJHtpZkRlZmluZWQodGhpcy5taW4pfVwiXG4gICAgICAgIG1heD1cIiR7aWZEZWZpbmVkKHRoaXMubWF4KX1cIlxuICAgICAgICBAY2hhbmdlPSR7dGhpcy5vbkNoYW5nZX1cbiAgICAgIC8+XG4gICAgYDtcbiAgfVxufVxuXG53aW5kb3cuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdkdC1udW1iZXInLCBEdE51bWJlckZpZWxkKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/components/form/dt-number/dt-number.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/components/form/dt-single-select/dt-single-select.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/components/form/dt-single-select/dt-single-select.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DtSingleSelect: () => (/* binding */ DtSingleSelect)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var _dt_form_base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dt-form-base.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/dt-form-base.js\");\n/* harmony import */ var _icons_dt_spinner_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../icons/dt-spinner.js */ \"./node_modules/@disciple.tools/web-components/src/components/icons/dt-spinner.js\");\n/* harmony import */ var _icons_dt_checkmark_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../icons/dt-checkmark.js */ \"./node_modules/@disciple.tools/web-components/src/components/icons/dt-checkmark.js\");\n\n\n\n\n\nclass DtSingleSelect extends _dt_form_base_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n  static get styles() {\n    return [\n      ...super.styles,\n      (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)`\n        :host {\n          position: relative;\n        }\n\n        select {\n          appearance: none;\n          background-color: var(--dt-form-background-color, #fefefe);\n          background-image: linear-gradient(\n              45deg,\n              transparent 50%,\n              var(--dt-single-select-text-color) 50%\n            ),\n            linear-gradient(\n              135deg,\n              var(--dt-single-select-text-color) 50%,\n              transparent 50%\n            );\n          background-position: calc(100% - 20px) calc(1em + 2px),\n            calc(100% - 15px) calc(1em + 2px), calc(100% - 2.5em) 0.5em;\n          background-size: 5px 5px, 5px 5px, 1px 1.5em;\n          background-repeat: no-repeat;\n          border: 1px solid var(--dt-form-border-color, #cacaca);\n          border-radius: 0;\n          color: var(--dt-single-select-text-color, #0a0a0a);\n          font-family: var(--font-family, sans-serif);\n          font-size: 1rem;\n          font-weight: 300;\n          height: 2.5rem;\n          line-height: 1.5;\n          margin: 0 0 1rem;\n          padding: 0.53rem;\n          padding-inline-end: 1.6rem;\n          transition: border-color 0.25s ease-in-out;\n          transition: box-shadow 0.5s, border-color 0.25s ease-in-out;\n          box-sizing: border-box;\n          width: 100%;\n          text-transform: none;\n        }\n        [dir='rtl'] select {\n          background-position: 15px calc(1em + 2px), 20px calc(1em + 2px),\n            2.5em 0.5em;\n        }\n        select.color-select {\n          background-image: url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' version='1.1' width='32' height='24' viewBox='0 0 32 24'><polygon points='0,0 32,0 16,24' style='fill: white'></polygon></svg>\");\n          background-color: var(--dt-form-border-color, #cacaca);\n          border: none;\n          border-radius: 10px;\n          color: var(--dt-single-select-text-color-inverse, #fff);\n          font-weight: 700;\n          text-shadow: rgb(0 0 0 / 45%) 0 0 6px;\n        }\n\n        .icon-overlay {\n          inset-inline-end: 2.5rem;\n        }\n      `,\n    ];\n  }\n\n  static get properties() {\n    return {\n      ...super.properties,\n      placeholder: { type: String },\n      options: { type: Array },\n      value: {\n        type: String,\n        reflect: true,\n      },\n      color: {\n        type: String,\n        state: true,\n      },\n      onchange: { type: String },\n    };\n  }\n\n  /**\n   * Find the color for the currently selected value\n   */\n  updateColor() {\n    if (this.value && this.options) {\n      const options = this.options.filter(opt => opt.id === this.value);\n      if (options && options.length) {\n        this.color = options[0].color;\n      }\n    }\n  }\n\n  isColorSelect() {\n    return (this.options || []).reduce(\n      (isColor, option) => isColor || option.color,\n      false\n    );\n  }\n\n  willUpdate(changedProperties) {\n    super.willUpdate(changedProperties);\n    if (changedProperties.has('value')) {\n      this.updateColor();\n    }\n  }\n\n  _change(e) {\n    // Create custom event with new/old values to pass to onchange function\n    const event = new CustomEvent('change', {\n      detail: {\n        field: this.name,\n        oldValue: this.value,\n        newValue: e.target.value,\n      },\n    });\n\n    // update value in this component\n    this.value = e.target.value;\n    this._setFormValue(this.value);\n\n    // dispatch event for use with addEventListener from javascript\n    this.dispatchEvent(event);\n  }\n\n  render() {\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      ${this.labelTemplate()}\n\n      <div class=\"container\" dir=\"${this.RTL ? 'rtl' : 'ltr'}\">\n        <select\n          name=\"${this.name}\"\n          aria-label=\"${this.name}\"\n          @change=\"${this._change}\"\n          class=\"${this.isColorSelect() ? 'color-select' : ''}\"\n          style=\"background-color: ${this.color};\"\n          ?disabled=\"${this.disabled}\"\n        >\n          <option disabled selected hidden value=\"\">${this.placeholder}</option>\n\n          ${this.options &&\n          this.options.map(\n            i => (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n              <option value=\"${i.id}\" ?selected=\"${i.id === this.value}\">\n                ${i.label}\n              </option>\n            `\n          )}\n        </select>\n        ${this.loading\n          ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<dt-spinner class=\"icon-overlay\"></dt-spinner>`\n          : null}\n        ${this.saved\n          ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<dt-checkmark class=\"icon-overlay success\"></dt-checkmark>`\n          : null}\n      </div>\n    `;\n  }\n}\n\nwindow.customElements.define('dt-single-select', DtSingleSelect);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/components/form/dt-single-select/dt-single-select.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/components/form/dt-tags/dt-tags.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/components/form/dt-tags/dt-tags.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DtTags: () => (/* binding */ DtTags)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var _dt_multi_select_dt_multi_select_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dt-multi-select/dt-multi-select.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/dt-multi-select/dt-multi-select.js\");\n\n\n\nclass DtTags extends _dt_multi_select_dt_multi_select_js__WEBPACK_IMPORTED_MODULE_1__.DtMultiSelect {\n  static get properties() {\n    return {\n      ...super.properties,\n      allowAdd: { type: Boolean },\n      onload: { type: String },\n    };\n  }\n\n  static get styles() {\n    return [\n      ...super.styles,\n      (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)`\n        .selected-option a,\n        .selected-option a:active,\n        .selected-option a:visited {\n          text-decoration: none;\n          color: var(--primary-color, #3f729b);\n        }\n      `,\n    ];\n  }\n\n  willUpdate(props) {\n    super.willUpdate(props);\n\n    if (props) {\n      const openChanged = props.has('open');\n      // When list is first opened and we don't have any options yet,\n      // trigger _filterOptions to load options\n      if (openChanged && this.open && (!this.filteredOptions || !this.filteredOptions.length)) {\n        this._filterOptions();\n      }\n    }\n  }\n\n  /**\n   * Filter to options that:\n   *   1: are not selected\n   *   2: match the search query\n   * @private\n   */\n  _filterOptions() {\n    const selectedValues = (this.value || [])\n      .filter(i => !i.startsWith('-'));\n\n    if (this.options?.length) {\n      this.filteredOptions = (this.options || []).filter(\n        opt =>\n          !selectedValues.includes(opt.id) &&\n          (!this.query ||\n            opt.id\n              .toLocaleLowerCase()\n              .includes(this.query.toLocaleLowerCase()))\n      );\n    } else if (this.open) {\n      // Only run this filtering if the list is open.\n      // This prevents it from running on initial load before a `load` event is attached.\n      this.loading = true;\n      this.filteredOptions = [];\n\n      // need to fetch data via API request\n      const self = this;\n      const event = new CustomEvent('load', {\n        bubbles: true,\n        detail: {\n          field: this.name,\n          postType: this.postType,\n          query: this.query,\n          onSuccess: result => {\n            self.loading = false;\n\n            // if given an array of strings, transform to object array\n            let options = result;\n            if (options.length && typeof options[0] === 'string') {\n              options = options.map(o => ({\n                id: o,\n              }));\n            }\n\n            self.allOptions = options;\n            // filter out selected values from list\n            self.filteredOptions = options.filter(\n              opt => !selectedValues.includes(opt.id)\n            );\n          },\n          onError: error => {\n            console.warn(error);\n            self.loading = false;\n          },\n        },\n      });\n      this.dispatchEvent(event);\n    }\n    return this.filteredOptions;\n  }\n\n  _renderOption(opt, idx) {\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      <li tabindex=\"-1\">\n        <button\n          value=\"${opt.id}\"\n          type=\"button\"\n          data-label=\"${opt.label}\"\n          @click=\"${this._clickOption}\"\n          @touchstart=\"${this._touchStart}\"\n          @touchmove=\"${this._touchMove}\"\n          @touchend=\"${this._touchEnd}\"\n          tabindex=\"-1\"\n          class=\"${this.activeIndex > -1 && this.activeIndex === idx\n      ? 'active'\n      : ''}\"\n        >\n          ${opt.label || opt.id}\n        </button>\n      </li>\n    `;\n  }\n\n  _renderSelectedOptions() {\n    const options = this.options || this.allOptions;\n    return (this.value || [])\n      .filter(i => !i.startsWith('-'))\n      .map(\n        tag => {\n          let label = tag;\n          if (options) {\n            const option = options.filter(o => o === tag || o.id === tag);\n            if (option.length) {\n              label = option[0].label || option[0].id || tag;\n            }\n          }\n          let link;\n          if (!link && window?.SHAREDFUNCTIONS?.createCustomFilter) {\n            const query =  window.SHAREDFUNCTIONS.createCustomFilter(this.name, [tag])\n            const fieldLabel = this.label || this.name\n            const labels = [{ id: `${this.name}_${tag}`, name: `${fieldLabel}: ${tag}`}]\n            link = window.SHAREDFUNCTIONS.create_url_for_list_query(this.postType, query, labels);\n          }\n          return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n          <div class=\"selected-option\">\n            <a\n              href=\"${link || '#'}\"\n              ?disabled=\"${this.disabled}\"\n              alt=\"${tag}\"\n              >${label}</a\n            >\n            <button\n              @click=\"${this._remove}\"\n              ?disabled=\"${this.disabled}\"\n              data-value=\"${tag}\"\n            >\n              x\n            </button>\n          </div>\n        `}\n      );\n  }\n}\n\nwindow.customElements.define('dt-tags', DtTags);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/components/form/dt-tags/dt-tags.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/components/form/dt-text/dt-text.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/components/form/dt-text/dt-text.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DtText: () => (/* binding */ DtText)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit/directives/class-map.js */ \"./node_modules/lit/directives/class-map.js\");\n/* harmony import */ var _dt_form_base_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../dt-form-base.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/dt-form-base.js\");\n/* harmony import */ var _icons_dt_spinner_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../icons/dt-spinner.js */ \"./node_modules/@disciple.tools/web-components/src/components/icons/dt-spinner.js\");\n/* harmony import */ var _icons_dt_checkmark_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../icons/dt-checkmark.js */ \"./node_modules/@disciple.tools/web-components/src/components/icons/dt-checkmark.js\");\n/* harmony import */ var _icons_dt_exclamation_circle_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../icons/dt-exclamation-circle.js */ \"./node_modules/@disciple.tools/web-components/src/components/icons/dt-exclamation-circle.js\");\n\n\n\n\n\n\n\nclass DtText extends _dt_form_base_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n  static get styles() {\n    return [\n      ...super.styles,\n      (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)`\n        input {\n          color: var(--dt-form-text-color, #000);\n          appearance: none;\n          background-color: var(--dt-text-background-color, #fefefe);\n          border: 1px solid var(--dt-text-border-color, #fefefe);\n          border-radius: var(--dt-text-border-radius, 0);\n          box-shadow: var(\n            --dt-text-box-shadow,\n            var(\n              --dt-form-input-box-shadow,\n              inset 0 1px 2px hsl(0deg 0% 4% / 10%)\n            )\n          );\n          box-sizing: border-box;\n          display: block;\n          font-family: inherit;\n          font-size: 1rem;\n          font-weight: 300;\n          height: 2.5rem;\n          line-height: 1.5;\n          margin: 0 0 1.0666666667rem;\n          padding: var(--dt-form-padding, 0.5333333333rem);\n          transition: var(\n            --dt-form-transition,\n            box-shadow 0.5s,\n            border-color 0.25s ease-in-out\n          );\n          width: 100%;\n        }\n        input:disabled,\n        input[readonly],\n        textarea:disabled,\n        textarea[readonly] {\n          background-color: var(\n            --dt-text-disabled-background-color,\n            var(--dt-form-disabled-background-color, #e6e6e6)\n          );\n          cursor: copy;\n        }\n        input:focus-within,\n        input:focus-visible {\n          outline: none;\n        }\n        input::placeholder {\n          color: var(--dt-text-placeholder-color, #999);\n          text-transform: var(--dt-text-placeholder-transform, none);\n          font-size: var(--dt-text-placeholder-font-size, 1rem);\n          font-weight: var(--dt-text-placeholder-font-weight, 400);\n          letter-spacing: var(--dt-text-placeholder-letter-spacing, normal);\n        }\n        input.invalid {\n          border-color: var(--dt-text-border-color-alert, var(--alert-color));\n        }\n      `,\n    ];\n  }\n\n  static get properties() {\n    return {\n      ...super.properties,\n      id: { type: String },\n      type: { type: String },\n      placeholder: { type: String },\n      value: {\n        type: String,\n        reflect: true,\n      },\n      onchange: { type: String },\n    };\n  }\n\n  _change(e) {\n    const event = new CustomEvent('change', {\n      bubbles: true,\n      detail: {\n        field: this.name,\n        oldValue: this.value,\n        newValue: e.target.value,\n      },\n    });\n\n    this.value = e.target.value;\n\n    this._setFormValue(this.value);\n\n    this.dispatchEvent(event);\n  }\n\n  implicitFormSubmit(e) {\n    const keycode = e.keyCode || e.which;\n    // If the Enter key is pressed, find the first button in the form and click it.\n    // This replicates normal browser handling of input elements when pressing Enter\n    if (keycode === 13 && this.internals.form) {\n      const button = this.internals.form.querySelector('button');\n      if (button) {\n        button.click();\n      }\n    }\n  }\n\n  _validateRequired() {\n    const { value } = this;\n    const input = this.shadowRoot.querySelector('input');\n    if (value === '' && this.required) {\n      this.invalid = true;\n      this.internals.setValidity(\n        {\n          valueMissing: true,\n        },\n        this.requiredMessage || 'This field is required',\n        input\n      );\n    } else {\n      this.invalid = false;\n      this.internals.setValidity({});\n    }\n  }\n\n  get classes() {\n    const classes = {\n      'text-input': true,\n      invalid: this.touched && this.invalid,\n    };\n    return classes;\n  }\n\n  render() {\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      ${this.labelTemplate()}\n\n      <div class=\"input-group\">\n        <input\n          id=\"${this.id}\"\n          name=\"${this.name}\"\n          aria-label=\"${this.label}\"\n          type=\"${this.type || 'text'}\"\n          placeholder=\"${this.placeholder}\"\n          ?disabled=${this.disabled}\n          ?required=${this.required}\n          class=\"${(0,lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_1__.classMap)(this.classes)}\"\n          .value=\"${this.value || ''}\"\n          @change=${this._change}\n          novalidate\n          @keyup=\"${this.implicitFormSubmit}\"\n        />\n\n        ${this.touched && this.invalid\n          ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<dt-exclamation-circle\n              class=\"icon-overlay alert\"\n            ></dt-exclamation-circle>`\n          : null}\n        ${this.error\n          ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<dt-icon\n              icon=\"mdi:alert-circle\"\n              class=\"icon-overlay alert\"\n              tooltip=\"${this.error}\"\n              size=\"2rem\"\n              ></dt-icon>`\n            : null}\n        ${this.loading\n          ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<dt-spinner class=\"icon-overlay\"></dt-spinner>`\n          : null}\n        ${this.saved\n          ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<dt-checkmark class=\"icon-overlay success\"></dt-checkmark>`\n          : null}\n      </div>\n    `;\n  }\n}\n\nwindow.customElements.define('dt-text', DtText);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/components/form/dt-text/dt-text.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/components/form/dt-textarea/dt-textarea.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/components/form/dt-textarea/dt-textarea.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DtTextArea: () => (/* binding */ DtTextArea)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var _dt_form_base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dt-form-base.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/dt-form-base.js\");\n\n\n\nclass DtTextArea extends _dt_form_base_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n  static get styles() {\n    return [\n      ...super.styles,\n      (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)`\n        textarea {\n          color: var(--dt-textarea-text-color, #0a0a0a);\n          appearance: none;\n          background-color: var(--dt-textarea-background-color, #fefefe);\n          border: 1px solid var(--dt-textarea-border-color, #cecece);\n          border-radius: 3px;\n          box-shadow: var(\n            --dt-textarea-input-box-shadow,\n            inset 0 1px 2px hsl(0deg 0% 4% / 10%)\n          );\n          box-sizing: border-box;\n          display: block;\n          font-family: inherit;\n          font-size: 1rem;\n          font-weight: 300;\n          height: 10rem;\n          line-height: 1.5;\n          margin: 0 0 1.0666666667rem;\n          padding: var(--dt-form-padding, 0.5333333333rem);\n          transition: var(\n            --dt-form-transition,\n            box-shadow 0.5s,\n            border-color 0.25s ease-in-out\n          );\n          overflow: hidden;\n          position: relative;\n          outline: 0;\n          resize: none;\n        }\n        input:disabled,\n        input[readonly],\n        textarea:disabled,\n        textarea[readonly] {\n          background-color: var(\n            --dt-textarea-disabled-background-color,\n            #e6e6e6\n          );\n          cursor: not-allowed;\n        }\n      `,\n    ];\n  }\n\n  static get properties() {\n    return {\n      ...super.properties,\n      id: { type: String },\n      value: {\n        type: String,\n        reflect: true,\n      },\n      loading: { type: Boolean },\n      saved: { type: Boolean },\n      onchange: { type: String },\n    };\n  }\n\n  onChange(e) {\n    const event = new CustomEvent('change', {\n      detail: {\n        field: this.name,\n        oldValue: this.value,\n        newValue: e.target.value,\n      },\n    });\n\n    this.value = e.target.value;\n\n    this.dispatchEvent(event);\n  }\n\n  render() {\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      ${this.labelTemplate()}\n\n      <textarea\n        id=\"${this.id}\"\n        name=\"${this.name}\"\n        aria-label=\"${this.label}\"\n        type=\"text\"\n        ?disabled=${this.disabled}\n        class=\"text-input\"\n        @change=${this.onChange}\n        .value=\"${this.value || ''}\"\n      ></textarea>\n    `;\n  }\n}\n\nwindow.customElements.define('dt-textarea', DtTextArea);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRpc2NpcGxlLnRvb2xzL3dlYi1jb21wb25lbnRzL3NyYy9jb21wb25lbnRzL2Zvcm0vZHQtdGV4dGFyZWEvZHQtdGV4dGFyZWEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdDO0FBQ1k7O0FBRXJDLHlCQUF5Qix3REFBVTtBQUMxQztBQUNBO0FBQ0E7QUFDQSxNQUFNLHdDQUFHO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVksY0FBYztBQUMxQjtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsaUJBQWlCLGVBQWU7QUFDaEMsZUFBZSxlQUFlO0FBQzlCLGtCQUFrQixjQUFjO0FBQ2hDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7O0FBRUw7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLFdBQVcseUNBQUk7QUFDZixRQUFROztBQUVSO0FBQ0EsY0FBYyxRQUFRO0FBQ3RCLGdCQUFnQixVQUFVO0FBQzFCLHNCQUFzQixXQUFXO0FBQ2pDO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0Esa0JBQWtCO0FBQ2xCLGtCQUFrQixpQkFBaUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kaXNjaXBsZS10b29scy1jb252ZXJzYXRpb25zLy4vbm9kZV9tb2R1bGVzL0BkaXNjaXBsZS50b29scy93ZWItY29tcG9uZW50cy9zcmMvY29tcG9uZW50cy9mb3JtL2R0LXRleHRhcmVhL2R0LXRleHRhcmVhLmpzPzg5MmMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaHRtbCwgY3NzIH0gZnJvbSAnbGl0JztcbmltcG9ydCBEdEZvcm1CYXNlIGZyb20gJy4uL2R0LWZvcm0tYmFzZS5qcyc7XG5cbmV4cG9ydCBjbGFzcyBEdFRleHRBcmVhIGV4dGVuZHMgRHRGb3JtQmFzZSB7XG4gIHN0YXRpYyBnZXQgc3R5bGVzKCkge1xuICAgIHJldHVybiBbXG4gICAgICAuLi5zdXBlci5zdHlsZXMsXG4gICAgICBjc3NgXG4gICAgICAgIHRleHRhcmVhIHtcbiAgICAgICAgICBjb2xvcjogdmFyKC0tZHQtdGV4dGFyZWEtdGV4dC1jb2xvciwgIzBhMGEwYSk7XG4gICAgICAgICAgYXBwZWFyYW5jZTogbm9uZTtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1kdC10ZXh0YXJlYS1iYWNrZ3JvdW5kLWNvbG9yLCAjZmVmZWZlKTtcbiAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1kdC10ZXh0YXJlYS1ib3JkZXItY29sb3IsICNjZWNlY2UpO1xuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICAgICAgICBib3gtc2hhZG93OiB2YXIoXG4gICAgICAgICAgICAtLWR0LXRleHRhcmVhLWlucHV0LWJveC1zaGFkb3csXG4gICAgICAgICAgICBpbnNldCAwIDFweCAycHggaHNsKDBkZWcgMCUgNCUgLyAxMCUpXG4gICAgICAgICAgKTtcbiAgICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgICAgICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICAgICAgICBmb250LXdlaWdodDogMzAwO1xuICAgICAgICAgIGhlaWdodDogMTByZW07XG4gICAgICAgICAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgICAgICAgICBtYXJnaW46IDAgMCAxLjA2NjY2NjY2NjdyZW07XG4gICAgICAgICAgcGFkZGluZzogdmFyKC0tZHQtZm9ybS1wYWRkaW5nLCAwLjUzMzMzMzMzMzNyZW0pO1xuICAgICAgICAgIHRyYW5zaXRpb246IHZhcihcbiAgICAgICAgICAgIC0tZHQtZm9ybS10cmFuc2l0aW9uLFxuICAgICAgICAgICAgYm94LXNoYWRvdyAwLjVzLFxuICAgICAgICAgICAgYm9yZGVyLWNvbG9yIDAuMjVzIGVhc2UtaW4tb3V0XG4gICAgICAgICAgKTtcbiAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICBvdXRsaW5lOiAwO1xuICAgICAgICAgIHJlc2l6ZTogbm9uZTtcbiAgICAgICAgfVxuICAgICAgICBpbnB1dDpkaXNhYmxlZCxcbiAgICAgICAgaW5wdXRbcmVhZG9ubHldLFxuICAgICAgICB0ZXh0YXJlYTpkaXNhYmxlZCxcbiAgICAgICAgdGV4dGFyZWFbcmVhZG9ubHldIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoXG4gICAgICAgICAgICAtLWR0LXRleHRhcmVhLWRpc2FibGVkLWJhY2tncm91bmQtY29sb3IsXG4gICAgICAgICAgICAjZTZlNmU2XG4gICAgICAgICAgKTtcbiAgICAgICAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuICAgICAgICB9XG4gICAgICBgLFxuICAgIF07XG4gIH1cblxuICBzdGF0aWMgZ2V0IHByb3BlcnRpZXMoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLnN1cGVyLnByb3BlcnRpZXMsXG4gICAgICBpZDogeyB0eXBlOiBTdHJpbmcgfSxcbiAgICAgIHZhbHVlOiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgcmVmbGVjdDogdHJ1ZSxcbiAgICAgIH0sXG4gICAgICBsb2FkaW5nOiB7IHR5cGU6IEJvb2xlYW4gfSxcbiAgICAgIHNhdmVkOiB7IHR5cGU6IEJvb2xlYW4gfSxcbiAgICAgIG9uY2hhbmdlOiB7IHR5cGU6IFN0cmluZyB9LFxuICAgIH07XG4gIH1cblxuICBvbkNoYW5nZShlKSB7XG4gICAgY29uc3QgZXZlbnQgPSBuZXcgQ3VzdG9tRXZlbnQoJ2NoYW5nZScsIHtcbiAgICAgIGRldGFpbDoge1xuICAgICAgICBmaWVsZDogdGhpcy5uYW1lLFxuICAgICAgICBvbGRWYWx1ZTogdGhpcy52YWx1ZSxcbiAgICAgICAgbmV3VmFsdWU6IGUudGFyZ2V0LnZhbHVlLFxuICAgICAgfSxcbiAgICB9KTtcblxuICAgIHRoaXMudmFsdWUgPSBlLnRhcmdldC52YWx1ZTtcblxuICAgIHRoaXMuZGlzcGF0Y2hFdmVudChldmVudCk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIGh0bWxgXG4gICAgICAke3RoaXMubGFiZWxUZW1wbGF0ZSgpfVxuXG4gICAgICA8dGV4dGFyZWFcbiAgICAgICAgaWQ9XCIke3RoaXMuaWR9XCJcbiAgICAgICAgbmFtZT1cIiR7dGhpcy5uYW1lfVwiXG4gICAgICAgIGFyaWEtbGFiZWw9XCIke3RoaXMubGFiZWx9XCJcbiAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICA/ZGlzYWJsZWQ9JHt0aGlzLmRpc2FibGVkfVxuICAgICAgICBjbGFzcz1cInRleHQtaW5wdXRcIlxuICAgICAgICBAY2hhbmdlPSR7dGhpcy5vbkNoYW5nZX1cbiAgICAgICAgLnZhbHVlPVwiJHt0aGlzLnZhbHVlIHx8ICcnfVwiXG4gICAgICA+PC90ZXh0YXJlYT5cbiAgICBgO1xuICB9XG59XG5cbndpbmRvdy5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ2R0LXRleHRhcmVhJywgRHRUZXh0QXJlYSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/components/form/dt-textarea/dt-textarea.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/components/form/dt-toggle/dt-toggle.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/components/form/dt-toggle/dt-toggle.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DtToggle: () => (/* binding */ DtToggle)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var _dt_form_base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dt-form-base.js */ \"./node_modules/@disciple.tools/web-components/src/components/form/dt-form-base.js\");\n\n\n\nclass DtToggle extends _dt_form_base_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n  static get styles() {\n    return [\n      ...super.styles,\n      (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)`\n        :host {\n          display: inline-block;\n        }\n\n        .Toggle {\n          display: flex;\n          flex-wrap: wrap;\n          align-items: center;\n          position: relative;\n          margin-bottom: 1em;\n          cursor: pointer;\n          gap: 1ch;\n        }\n\n        button.Toggle {\n          border: 0;\n          padding: 0;\n          background-color: transparent;\n          font: inherit;\n        }\n\n        .Toggle__input {\n          position: absolute;\n          opacity: 0;\n          width: 100%;\n          height: 100%;\n        }\n\n        .Toggle__display {\n          --offset: 0.25em;\n          --diameter: 1.2em;\n\n          display: inline-flex;\n          align-items: center;\n          justify-content: space-around;\n          box-sizing: content-box;\n          width: calc(var(--diameter) * 2 + var(--offset) * 2);\n          height: calc(var(--diameter) + var(--offset) * 2);\n          border: 0.1em solid rgb(0 0 0 / 0.2);\n          position: relative;\n          border-radius: 100vw;\n          background-color: var(--dt-toggle-background-color-off, #ecf5fc);\n          transition: 250ms;\n        }\n\n        .Toggle__display::before {\n          content: '';\n          z-index: 2;\n          position: absolute;\n          top: 50%;\n          left: var(--offset);\n          box-sizing: border-box;\n          width: var(--diameter);\n          height: var(--diameter);\n          border: 0.1em solid rgb(0 0 0 / 0.2);\n          border-radius: 50%;\n          background-color: white;\n          transform: translate(0, -50%);\n          will-change: transform;\n          transition: inherit;\n        }\n\n        .Toggle:focus .Toggle__display,\n        .Toggle__input:focus + .Toggle__display {\n          outline: 1px dotted #212121;\n          outline: 1px auto -webkit-focus-ring-color;\n          outline-offset: 2px;\n        }\n\n        .Toggle:focus,\n        .Toggle:focus:not(:focus-visible) .Toggle__display,\n        .Toggle__input:focus:not(:focus-visible) + .Toggle__display {\n          outline: 0;\n        }\n\n        .Toggle[aria-pressed='true'] .Toggle__display,\n        .Toggle__input:checked + .Toggle__display {\n          background-color: var(--primary-color);\n        }\n\n        .Toggle[aria-pressed='true'] .Toggle__display::before,\n        .Toggle__input:checked + .Toggle__display::before {\n          transform: translate(100%, -50%);\n        }\n\n        .Toggle[disabled] .Toggle__display,\n        .Toggle__input:disabled + .Toggle__display {\n          opacity: 0.6;\n          filter: grayscale(40%);\n          cursor: not-allowed;\n        }\n        [dir='rtl'] .Toggle__display::before {\n          left: auto;\n          right: var(--offset);\n        }\n\n        [dir='rtl'] .Toggle[aria-pressed='true'] + .Toggle__display::before,\n        [dir='rtl'] .Toggle__input:checked + .Toggle__display::before {\n          transform: translate(-100%, -50%);\n        }\n\n        .Toggle__icon {\n          display: inline-block;\n          width: 1em;\n          height: 1em;\n          color: inherit;\n          fill: currentcolor;\n          vertical-align: middle;\n          overflow: hidden;\n        }\n\n        .Toggle__icon--cross {\n          color: var(--alert-color);\n          font-size: 65%;\n        }\n\n        .Toggle__icon--checkmark {\n          color: var(--success-color);\n        }\n      `,\n    ];\n  }\n\n  static get properties() {\n    return {\n      ...super.properties,\n      id: { type: String },\n      checked: {\n        type: Boolean,\n        reflect: true,\n      },\n      onchange: { type: String },\n      hideIcons: { type: Boolean, default: true },\n    };\n  }\n\n  constructor() {\n    super();\n    this.hideIcons = false;\n  }\n\n  onChange(e) {\n    const event = new CustomEvent('change', {\n      detail: {\n        field: this.name,\n        oldValue: this.checked,\n        newValue: e.target.checked,\n      },\n    });\n    this.checked = e.target.checked;\n\n    this._setFormValue(this.checked);\n\n    this.dispatchEvent(event);\n  }\n\n  render() {\n    // prettier-ignore\n    const check = (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<svg width=\"18\" height=\"14\" viewBox=\"0 0 18 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\" class=\"Toggle__icon Toggle__icon--checkmark\"><path d=\"M6.08471 10.6237L2.29164 6.83059L1 8.11313L6.08471 13.1978L17 2.28255L15.7175 1L6.08471 10.6237Z\" fill=\"currentcolor\" stroke=\"currentcolor\" /></svg>`\n    // prettier-ignore\n    const cross = (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<svg width=\"13\" height=\"13\" viewBox=\"0 0 13 13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\" class=\"Toggle__icon Toggle__icon--cross\"><path d=\"M11.167 0L6.5 4.667L1.833 0L0 1.833L4.667 6.5L0 11.167L1.833 13L6.5 8.333L11.167 13L13 11.167L8.333 6.5L13 1.833L11.167 0Z\" fill=\"currentcolor\" /></svg>`\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      <label class=\"Toggle\" for=\"${this.id}\" dir=\"${this.RTL ? 'rtl' : 'ltr'}\">\n        ${this.label}\n        <input\n          type=\"checkbox\"\n          name=\"${this.id}\"\n          id=\"${this.id}\"\n          class=\"Toggle__input\"\n          ?checked=${this.checked}\n          @click=${this.onChange}\n          ?disabled=${this.disabled}\n        />\n        <span class=\"Toggle__display\" hidden>\n          ${!this.hideIcons ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)` ${check} ${cross} ` : (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)``}\n        </span>\n      </label>\n    `;\n  }\n}\n\nwindow.customElements.define('dt-toggle', DtToggle);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/components/form/dt-toggle/dt-toggle.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/components/form/mixins/hasOptionsList.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/components/form/mixins/hasOptionsList.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HasOptionsList: () => (/* binding */ HasOptionsList)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var _lit_localize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @lit/localize */ \"./node_modules/@lit/localize/lit-localize.js\");\n\n\n\nconst HasOptionsList = (superClass) => class extends superClass {\n  constructor() {\n    super();\n    this.activeIndex = -1;\n    this.filteredOptions = [];\n    this.detectTap = false;\n  }\n\n  static get properties() {\n    return {\n      ...super.properties,\n      value: {\n        type: Array,\n        reflect: true,\n      },\n      query: {\n        type: String,\n        state: true,\n      },\n      options: { type: Array },\n      filteredOptions: { type: Array, state: true },\n      open: {\n        type: Boolean,\n        state: true,\n      },\n      activeIndex: {\n        type: Number,\n        state: true,\n      },\n      containerHeight: {\n        type: Number,\n        state: true,\n      },\n      loading: { type: Boolean },\n    };\n  }\n\n  willUpdate(props) {\n    super.willUpdate(props);\n\n    if (props) {\n      // Set the containerHeight for dropdown positioning if it hasn't been set yet\n      if (\n        !this.containerHeight &&\n        this.shadowRoot.children &&\n        this.shadowRoot.children.length\n      ) {\n        const inputGroup = this.shadowRoot.querySelector('.input-group');\n        if (inputGroup) {\n          this.containerHeight = inputGroup.offsetHeight;\n        }\n      }\n    }\n  }\n\n  updated() {\n    this._scrollOptionListToActive();\n\n    // set variable with width of container for truncating selected options via CSS\n    const container = this.shadowRoot.querySelector('.input-group');\n    const currentValue = container.style.getPropertyValue('--container-width');\n    if (!currentValue && container.clientWidth > 0) {\n      container.style.setProperty(\n        '--container-width',\n        `${container.clientWidth}px`\n      );\n    }\n  }\n\n  _select() { // eslint-disable-line class-methods-use-this\n    console.error(\"Must implement `_select(value)` function\");\n  }\n\n  /* Search Input Field Events */\n  static _focusInput(e) {\n    if (e.target !== e.currentTarget) return;\n\n    e.target.getElementsByTagName('input')[0].focus();\n  }\n\n  _inputFocusIn(e) {\n    if (\n      !e.relatedTarget ||\n      !['BUTTON', 'LI'].includes(e.relatedTarget.nodeName)\n    ) {\n      this.open = true;\n      this.activeIndex = -1;\n    }\n  }\n\n  _inputFocusOut(e) {\n    // allow clicks on option list button to not close the option list\n    // Safari actually passes the parent <li> as the relatedTarget\n    if (\n      !e.relatedTarget ||\n      !['BUTTON', 'LI'].includes(e.relatedTarget.nodeName)\n    ) {\n      this.open = false;\n    }\n  }\n\n  _inputKeyDown(e) {\n    const keycode = e.keyCode || e.which;\n\n    switch (keycode) {\n      case 8: // backspace\n        if (e.target.value === '') {\n          this.value = this.value.slice(0, -1);\n        } else {\n          this.open = true;\n        }\n        break;\n      case 38: // arrow up\n        this.open = true;\n        this._listHighlightPrevious();\n        break;\n      case 40: // arrow down\n        this.open = true;\n        this._listHighlightNext();\n        break;\n      case 9: // tab\n        if (this.activeIndex < 0) {\n          // if pressing tab while no option is selected,\n          // close the list so you can go to next field\n          this.open = false;\n        } else {\n          e.preventDefault();\n        }\n        this._keyboardSelectOption();\n        break;\n      case 13: // enter\n        this._keyboardSelectOption();\n        break;\n      case 27: // escape\n        this.open = false;\n        this.activeIndex = -1;\n        break;\n      default:\n        this.open = true;\n        break;\n    }\n  }\n\n  _inputKeyUp(e) {\n    this.query = e.target.value;\n  }\n\n  /**\n   * When navigating via keyboard, keep active element within visible area of option list\n   * @private\n   */\n  _scrollOptionListToActive() {\n    const optionList = this.shadowRoot.querySelector('.option-list');\n    const activeEl = this.shadowRoot.querySelector('button.active');\n    if (optionList && activeEl) {\n      const elTop = activeEl.offsetTop;\n      const elBottom = activeEl.offsetTop + activeEl.clientHeight;\n      const listTop = optionList.scrollTop;\n      const listBottom = optionList.scrollTop + optionList.clientHeight;\n      if (elBottom > listBottom) {\n        // active element below visible area. scroll down\n        optionList.scrollTo({\n          top: elBottom - optionList.clientHeight,\n          behavior: 'smooth',\n        });\n      } else if (elTop < listTop) {\n        // active element above visible area. scroll up\n        optionList.scrollTo({ top: elTop, behavior: 'smooth' });\n      }\n    }\n  }\n\n  /* Option List Events */\n  _touchStart(e) {\n    if (e.target) {\n      this.detectTap = false;\n    }\n  }\n\n  _touchMove(e) {\n    if (e.target) {\n      this.detectTap = true;\n    }\n  }\n\n  _touchEnd(e) {\n    if (!this.detectTap) {\n      if (e.target && e.target.value) {\n        this._clickOption(e);\n      }\n      this.detectTap = false;\n    }\n  }\n\n  _keyboardSelectOption() {\n    if (this.activeIndex > -1) {\n      if (this.activeIndex + 1 > this.filteredOptions.length) {\n        this._select(this.query);\n      } else {\n        this._select(this.filteredOptions[this.activeIndex].id);\n      }\n      this._clearSearch();\n    }\n  }\n\n  _clickOption(e) {\n    if (e.target && e.target.value) {\n      this._select(e.target.value);\n      this._clearSearch();\n    }\n  }\n\n  _clickAddNew(e) {\n    if (e.target) {\n      this._select(e.target.dataset?.label);\n      // clear search field if clicked with mouse, since field will lose focus\n      this._clearSearch();\n    }\n  }\n\n  _clearSearch()  {\n    const input = this.shadowRoot.querySelector('input');\n      if (input) {\n        input.value = '';\n      }\n  }\n\n  /* Option List Navigation */\n  _listHighlightNext() {\n    if (this.allowAdd) {\n      this.activeIndex = Math.min(\n        this.filteredOptions.length, // allow 1 more than the list length\n        this.activeIndex + 1\n      );\n    } else {\n      this.activeIndex = Math.min(\n        this.filteredOptions.length - 1,\n        this.activeIndex + 1\n      );\n    }\n  }\n\n  _listHighlightPrevious() {\n    this.activeIndex = Math.max(0, this.activeIndex - 1);\n  }\n\n  /* Rendering */\n  _renderOption(opt, idx) {\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      <li tabindex=\"-1\">\n        <button\n          value=\"${opt.id}\"\n          type=\"button\"\n          data-label=\"${opt.label}\"\n          @click=\"${this._clickOption}\"\n          @touchstart=\"${this._touchStart}\"\n          @touchmove=\"${this._touchMove}\"\n          @touchend=\"${this._touchEnd}\"\n          tabindex=\"-1\"\n          class=\"${this.activeIndex > -1 && this.activeIndex === idx\n      ? 'active'\n      : ''}\"\n        >\n          ${opt.label}\n        </button>\n      </li>\n    `;\n  }\n\n  _baseRenderOptions() {\n    if (!this.filteredOptions.length) {\n      if (this.loading) {\n        return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<li><div>${(0,_lit_localize__WEBPACK_IMPORTED_MODULE_1__.msg)('Loading options...')}</div></li>`;\n      }\n      return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<li><div>${(0,_lit_localize__WEBPACK_IMPORTED_MODULE_1__.msg)('No Data Available')}</div></li>`;\n    }\n\n    return this.filteredOptions.map((opt, idx) => this._renderOption(opt, idx));\n  }\n\n  _renderOptions() {\n    let optionsMarkup = this._baseRenderOptions();\n\n    if (this.allowAdd && this.query) {\n      if (!Array.isArray(optionsMarkup)) {\n        optionsMarkup = [optionsMarkup];\n      }\n      optionsMarkup.push((0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<li tabindex=\"-1\">\n        <button\n          data-label=\"${this.query}\"\n          @click=\"${this._clickAddNew}\"\n          @touchstart=\"${this._touchStart}\"\n          @touchmove=\"${this._touchMove}\"\n          @touchend=\"${this._touchEnd}\"\n          class=\"${this.activeIndex > -1 &&\n      this.activeIndex >= this.filteredOptions.length\n        ? 'active'\n        : ''}\"\n        >\n          ${(0,_lit_localize__WEBPACK_IMPORTED_MODULE_1__.msg)('Add')} \"${this.query}\"\n        </button>\n      </li>`);\n    }\n    return optionsMarkup;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/components/form/mixins/hasOptionsList.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/components/icons/dt-checkmark.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/components/icons/dt-checkmark.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DtCheckmark: () => (/* binding */ DtCheckmark)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n\n\nclass DtCheckmark extends lit__WEBPACK_IMPORTED_MODULE_0__.LitElement {\n  static get styles() {\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)`\n      @keyframes fadeOut {\n        0% {\n          opacity: 1;\n        }\n        75% {\n          opacity: 1;\n        }\n        100% {\n          opacity: 0;\n        }\n      }\n      :host {\n        margin-top: -0.25rem;\n      }\n      :host::before {\n        content: '';\n        transform: rotate(45deg);\n        height: 1rem;\n        width: 0.5rem;\n        opacity: 0;\n        color: inherit;\n        border-bottom: var(--dt-checkmark-width) solid currentcolor;\n        border-right: var(--dt-checkmark-width) solid currentcolor;\n        animation: fadeOut 4s;\n      }\n    `;\n  }\n}\n\nwindow.customElements.define('dt-checkmark', DtCheckmark);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRpc2NpcGxlLnRvb2xzL3dlYi1jb21wb25lbnRzL3NyYy9jb21wb25lbnRzL2ljb25zL2R0LWNoZWNrbWFyay5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFzQzs7QUFFL0IsMEJBQTBCLDJDQUFVO0FBQzNDO0FBQ0EsV0FBVyx3Q0FBRztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGlzY2lwbGUtdG9vbHMtY29udmVyc2F0aW9ucy8uL25vZGVfbW9kdWxlcy9AZGlzY2lwbGUudG9vbHMvd2ViLWNvbXBvbmVudHMvc3JjL2NvbXBvbmVudHMvaWNvbnMvZHQtY2hlY2ttYXJrLmpzPzlmYTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzLCBMaXRFbGVtZW50IH0gZnJvbSAnbGl0JztcblxuZXhwb3J0IGNsYXNzIER0Q2hlY2ttYXJrIGV4dGVuZHMgTGl0RWxlbWVudCB7XG4gIHN0YXRpYyBnZXQgc3R5bGVzKCkge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBAa2V5ZnJhbWVzIGZhZGVPdXQge1xuICAgICAgICAwJSB7XG4gICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgfVxuICAgICAgICA3NSUge1xuICAgICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgIH1cbiAgICAgICAgMTAwJSB7XG4gICAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgOmhvc3Qge1xuICAgICAgICBtYXJnaW4tdG9wOiAtMC4yNXJlbTtcbiAgICAgIH1cbiAgICAgIDpob3N0OjpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgICAgICBoZWlnaHQ6IDFyZW07XG4gICAgICAgIHdpZHRoOiAwLjVyZW07XG4gICAgICAgIG9wYWNpdHk6IDA7XG4gICAgICAgIGNvbG9yOiBpbmhlcml0O1xuICAgICAgICBib3JkZXItYm90dG9tOiB2YXIoLS1kdC1jaGVja21hcmstd2lkdGgpIHNvbGlkIGN1cnJlbnRjb2xvcjtcbiAgICAgICAgYm9yZGVyLXJpZ2h0OiB2YXIoLS1kdC1jaGVja21hcmstd2lkdGgpIHNvbGlkIGN1cnJlbnRjb2xvcjtcbiAgICAgICAgYW5pbWF0aW9uOiBmYWRlT3V0IDRzO1xuICAgICAgfVxuICAgIGA7XG4gIH1cbn1cblxud2luZG93LmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnZHQtY2hlY2ttYXJrJywgRHRDaGVja21hcmspO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/components/icons/dt-checkmark.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/components/icons/dt-exclamation-circle.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/components/icons/dt-exclamation-circle.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DtExclamationCircle: () => (/* binding */ DtExclamationCircle)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n\n\nclass DtExclamationCircle extends lit__WEBPACK_IMPORTED_MODULE_0__.LitElement {\n  static get styles() {\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)`\n      svg use {\n        fill: currentcolor;\n      }\n    `;\n  }\n\n  render() {\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      <svg\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n      >\n        <g id=\"Canvas\" transform=\"translate(1845 -2441)\">\n          <g id=\"alert-circle-exc\">\n            <g id=\"Group\">\n              <g id=\"Vector\">\n                <use\n                  xlink:href=\"#path0_fill\"\n                  transform=\"translate(-1845 2441)\"\n                  fill=\"#000000\"\n                />\n              </g>\n            </g>\n          </g>\n        </g>\n        <defs>\n          <path\n            id=\"path0_fill\"\n            d=\"M 12 0C 5.383 0 0 5.383 0 12C 0 18.617 5.383 24 12 24C 18.617 24 24 18.617 24 12C 24 5.383 18.617 0 12 0ZM 13.645 5L 13 14L 11 14L 10.392 5L 13.645 5ZM 12 20C 10.895 20 10 19.105 10 18C 10 16.895 10.895 16 12 16C 13.105 16 14 16.895 14 18C 14 19.105 13.105 20 12 20Z\"\n          />\n        </defs>\n      </svg>\n    `;\n  }\n}\n\nwindow.customElements.define('dt-exclamation-circle', DtExclamationCircle);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRpc2NpcGxlLnRvb2xzL3dlYi1jb21wb25lbnRzL3NyYy9jb21wb25lbnRzL2ljb25zL2R0LWV4Y2xhbWF0aW9uLWNpcmNsZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE0Qzs7QUFFckMsa0NBQWtDLDJDQUFVO0FBQ25EO0FBQ0EsV0FBVyx3Q0FBRztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLHlDQUFJO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kaXNjaXBsZS10b29scy1jb252ZXJzYXRpb25zLy4vbm9kZV9tb2R1bGVzL0BkaXNjaXBsZS50b29scy93ZWItY29tcG9uZW50cy9zcmMvY29tcG9uZW50cy9pY29ucy9kdC1leGNsYW1hdGlvbi1jaXJjbGUuanM/YTk1MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MsIGh0bWwsIExpdEVsZW1lbnQgfSBmcm9tICdsaXQnO1xuXG5leHBvcnQgY2xhc3MgRHRFeGNsYW1hdGlvbkNpcmNsZSBleHRlbmRzIExpdEVsZW1lbnQge1xuICBzdGF0aWMgZ2V0IHN0eWxlcygpIHtcbiAgICByZXR1cm4gY3NzYFxuICAgICAgc3ZnIHVzZSB7XG4gICAgICAgIGZpbGw6IGN1cnJlbnRjb2xvcjtcbiAgICAgIH1cbiAgICBgO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiBodG1sYFxuICAgICAgPHN2Z1xuICAgICAgICB3aWR0aD1cIjI0XCJcbiAgICAgICAgaGVpZ2h0PVwiMjRcIlxuICAgICAgICB2aWV3Qm94PVwiMCAwIDI0IDI0XCJcbiAgICAgICAgdmVyc2lvbj1cIjEuMVwiXG4gICAgICAgIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIlxuICAgICAgICB4bWxuczp4bGluaz1cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIlxuICAgICAgPlxuICAgICAgICA8ZyBpZD1cIkNhbnZhc1wiIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSgxODQ1IC0yNDQxKVwiPlxuICAgICAgICAgIDxnIGlkPVwiYWxlcnQtY2lyY2xlLWV4Y1wiPlxuICAgICAgICAgICAgPGcgaWQ9XCJHcm91cFwiPlxuICAgICAgICAgICAgICA8ZyBpZD1cIlZlY3RvclwiPlxuICAgICAgICAgICAgICAgIDx1c2VcbiAgICAgICAgICAgICAgICAgIHhsaW5rOmhyZWY9XCIjcGF0aDBfZmlsbFwiXG4gICAgICAgICAgICAgICAgICB0cmFuc2Zvcm09XCJ0cmFuc2xhdGUoLTE4NDUgMjQ0MSlcIlxuICAgICAgICAgICAgICAgICAgZmlsbD1cIiMwMDAwMDBcIlxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDwvZz5cbiAgICAgICAgICAgIDwvZz5cbiAgICAgICAgICA8L2c+XG4gICAgICAgIDwvZz5cbiAgICAgICAgPGRlZnM+XG4gICAgICAgICAgPHBhdGhcbiAgICAgICAgICAgIGlkPVwicGF0aDBfZmlsbFwiXG4gICAgICAgICAgICBkPVwiTSAxMiAwQyA1LjM4MyAwIDAgNS4zODMgMCAxMkMgMCAxOC42MTcgNS4zODMgMjQgMTIgMjRDIDE4LjYxNyAyNCAyNCAxOC42MTcgMjQgMTJDIDI0IDUuMzgzIDE4LjYxNyAwIDEyIDBaTSAxMy42NDUgNUwgMTMgMTRMIDExIDE0TCAxMC4zOTIgNUwgMTMuNjQ1IDVaTSAxMiAyMEMgMTAuODk1IDIwIDEwIDE5LjEwNSAxMCAxOEMgMTAgMTYuODk1IDEwLjg5NSAxNiAxMiAxNkMgMTMuMTA1IDE2IDE0IDE2Ljg5NSAxNCAxOEMgMTQgMTkuMTA1IDEzLjEwNSAyMCAxMiAyMFpcIlxuICAgICAgICAgIC8+XG4gICAgICAgIDwvZGVmcz5cbiAgICAgIDwvc3ZnPlxuICAgIGA7XG4gIH1cbn1cblxud2luZG93LmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnZHQtZXhjbGFtYXRpb24tY2lyY2xlJywgRHRFeGNsYW1hdGlvbkNpcmNsZSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/components/icons/dt-exclamation-circle.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/components/icons/dt-icon.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/components/icons/dt-icon.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DtIcon: () => (/* binding */ DtIcon)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var _dt_base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dt-base.js */ \"./node_modules/@disciple.tools/web-components/src/components/dt-base.js\");\n/* harmony import */ var iconify_icon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! iconify-icon */ \"./node_modules/iconify-icon/dist/iconify-icon.mjs\");\n\n\n\n\nclass DtIcon extends _dt_base_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n  static get styles() {\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)`\n      :root {\n        font-size: inherit;\n        color: inherit;\n        display: inline-flex;\n        width: fit-content;\n        height: fit-content;\n        position: relative;\n      }\n      .tooltip {\n        position: absolute;\n        right: 0px;\n        top: 100%;\n        min-width: 9rem;\n        border: solid 1px currentcolor;\n        background-color: var(--dt-form-background-color, var(--surface-1));\n        padding: .25rem;\n        border-radius: .25rem;\n        text-align: end;\n        z-index: 1;\n        display:block;\n      }\n      .tooltip:before {\n        position: absolute;\n        right: .7rem;\n        top: -.55rem;\n        content: \" \";\n        border-width: .25rem;\n        border-style: solid;\n        border-color: transparent transparent currentcolor transparent;\n      }\n      .tooltip[hidden] {\n        display: none;\n      }\n    `;\n  }\n\n  static get properties() {\n    return {\n      ...super.properties,\n      icon: { type: String },\n      tooltip: { type: String },\n      tooltip_open: { type: Boolean },\n      size: { type: String },\n    };\n  }\n\n  _showTooltip() {\n    if (this.tooltip_open){\n      this.tooltip_open = false;\n    } else {\n      this.tooltip_open = true;\n    }\n  }\n\n  render() {\n    const tooltip = this.tooltip ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<div class=\"tooltip\" ?hidden=${this.tooltip_open}>${this.tooltip}</div>` : null;\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      <iconify-icon icon=${this.icon} width=\"${this.size}\" @click=${this._showTooltip}></iconify-icon>\n      ${tooltip}\n    `;\n  }\n}\n\nwindow.customElements.define('dt-icon', DtIcon);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRpc2NpcGxlLnRvb2xzL3dlYi1jb21wb25lbnRzL3NyYy9jb21wb25lbnRzL2ljb25zL2R0LWljb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFnQztBQUNHO0FBQ2I7O0FBRWYscUJBQXFCLG1EQUFNO0FBQ2xDO0FBQ0EsV0FBVyx3Q0FBRztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsY0FBYyxjQUFjO0FBQzVCLGlCQUFpQixjQUFjO0FBQy9CLHNCQUFzQixlQUFlO0FBQ3JDLGNBQWMsY0FBYztBQUM1QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxtQ0FBbUMseUNBQUksZ0NBQWdDLGtCQUFrQixHQUFHLGFBQWE7QUFDekcsV0FBVyx5Q0FBSTtBQUNmLDJCQUEyQixXQUFXLFNBQVMsVUFBVSxXQUFXLGtCQUFrQjtBQUN0RixRQUFRO0FBQ1I7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGlzY2lwbGUtdG9vbHMtY29udmVyc2F0aW9ucy8uL25vZGVfbW9kdWxlcy9AZGlzY2lwbGUudG9vbHMvd2ViLWNvbXBvbmVudHMvc3JjL2NvbXBvbmVudHMvaWNvbnMvZHQtaWNvbi5qcz81MDIxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNzcywgaHRtbCB9IGZyb20gJ2xpdCc7XG5pbXBvcnQgRHRCYXNlIGZyb20gJy4uL2R0LWJhc2UuanMnO1xuaW1wb3J0ICdpY29uaWZ5LWljb24nO1xuXG5leHBvcnQgY2xhc3MgRHRJY29uIGV4dGVuZHMgRHRCYXNlIHtcbiAgc3RhdGljIGdldCBzdHlsZXMoKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIDpyb290IHtcbiAgICAgICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgICAgICBjb2xvcjogaW5oZXJpdDtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gICAgICAgIHdpZHRoOiBmaXQtY29udGVudDtcbiAgICAgICAgaGVpZ2h0OiBmaXQtY29udGVudDtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgfVxuICAgICAgLnRvb2x0aXAge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHJpZ2h0OiAwcHg7XG4gICAgICAgIHRvcDogMTAwJTtcbiAgICAgICAgbWluLXdpZHRoOiA5cmVtO1xuICAgICAgICBib3JkZXI6IHNvbGlkIDFweCBjdXJyZW50Y29sb3I7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWR0LWZvcm0tYmFja2dyb3VuZC1jb2xvciwgdmFyKC0tc3VyZmFjZS0xKSk7XG4gICAgICAgIHBhZGRpbmc6IC4yNXJlbTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogLjI1cmVtO1xuICAgICAgICB0ZXh0LWFsaWduOiBlbmQ7XG4gICAgICAgIHotaW5kZXg6IDE7XG4gICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICB9XG4gICAgICAudG9vbHRpcDpiZWZvcmUge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHJpZ2h0OiAuN3JlbTtcbiAgICAgICAgdG9wOiAtLjU1cmVtO1xuICAgICAgICBjb250ZW50OiBcIiBcIjtcbiAgICAgICAgYm9yZGVyLXdpZHRoOiAuMjVyZW07XG4gICAgICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgY3VycmVudGNvbG9yIHRyYW5zcGFyZW50O1xuICAgICAgfVxuICAgICAgLnRvb2x0aXBbaGlkZGVuXSB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICB9XG4gICAgYDtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgcHJvcGVydGllcygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uc3VwZXIucHJvcGVydGllcyxcbiAgICAgIGljb246IHsgdHlwZTogU3RyaW5nIH0sXG4gICAgICB0b29sdGlwOiB7IHR5cGU6IFN0cmluZyB9LFxuICAgICAgdG9vbHRpcF9vcGVuOiB7IHR5cGU6IEJvb2xlYW4gfSxcbiAgICAgIHNpemU6IHsgdHlwZTogU3RyaW5nIH0sXG4gICAgfTtcbiAgfVxuXG4gIF9zaG93VG9vbHRpcCgpIHtcbiAgICBpZiAodGhpcy50b29sdGlwX29wZW4pe1xuICAgICAgdGhpcy50b29sdGlwX29wZW4gPSBmYWxzZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy50b29sdGlwX29wZW4gPSB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB0b29sdGlwID0gdGhpcy50b29sdGlwID8gaHRtbGA8ZGl2IGNsYXNzPVwidG9vbHRpcFwiID9oaWRkZW49JHt0aGlzLnRvb2x0aXBfb3Blbn0+JHt0aGlzLnRvb2x0aXB9PC9kaXY+YCA6IG51bGw7XG4gICAgcmV0dXJuIGh0bWxgXG4gICAgICA8aWNvbmlmeS1pY29uIGljb249JHt0aGlzLmljb259IHdpZHRoPVwiJHt0aGlzLnNpemV9XCIgQGNsaWNrPSR7dGhpcy5fc2hvd1Rvb2x0aXB9PjwvaWNvbmlmeS1pY29uPlxuICAgICAgJHt0b29sdGlwfVxuICAgIGA7XG4gIH1cbn1cblxud2luZG93LmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnZHQtaWNvbicsIER0SWNvbik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/components/icons/dt-icon.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/components/icons/dt-spinner.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/components/icons/dt-spinner.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DtSpinner: () => (/* binding */ DtSpinner)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n\n\nclass DtSpinner extends lit__WEBPACK_IMPORTED_MODULE_0__.LitElement {\n  static get styles() {\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)`\n      @keyframes spin {\n        0% {\n          transform: rotate(0deg);\n        }\n\n        100% {\n          transform: rotate(360deg);\n        }\n      }\n      :host::before {\n        content: '';\n        animation: spin 1s linear infinite;\n        border: 0.25rem solid var(--dt-spinner-color-1, #919191);\n        border-radius: 50%;\n        border-top-color: var(--dt-spinner-color-2, #000);\n        display: inline-block;\n        height: 1rem;\n        width: 1rem;\n      }\n    `;\n  }\n}\n\nwindow.customElements.define('dt-spinner', DtSpinner);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRpc2NpcGxlLnRvb2xzL3dlYi1jb21wb25lbnRzL3NyYy9jb21wb25lbnRzL2ljb25zL2R0LXNwaW5uZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBc0M7O0FBRS9CLHdCQUF3QiwyQ0FBVTtBQUN6QztBQUNBLFdBQVcsd0NBQUc7QUFDZDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGlzY2lwbGUtdG9vbHMtY29udmVyc2F0aW9ucy8uL25vZGVfbW9kdWxlcy9AZGlzY2lwbGUudG9vbHMvd2ViLWNvbXBvbmVudHMvc3JjL2NvbXBvbmVudHMvaWNvbnMvZHQtc3Bpbm5lci5qcz8zMjAxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNzcywgTGl0RWxlbWVudCB9IGZyb20gJ2xpdCc7XG5cbmV4cG9ydCBjbGFzcyBEdFNwaW5uZXIgZXh0ZW5kcyBMaXRFbGVtZW50IHtcbiAgc3RhdGljIGdldCBzdHlsZXMoKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIEBrZXlmcmFtZXMgc3BpbiB7XG4gICAgICAgIDAlIHtcbiAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIDEwMCUge1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIDpob3N0OjpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgYW5pbWF0aW9uOiBzcGluIDFzIGxpbmVhciBpbmZpbml0ZTtcbiAgICAgICAgYm9yZGVyOiAwLjI1cmVtIHNvbGlkIHZhcigtLWR0LXNwaW5uZXItY29sb3ItMSwgIzkxOTE5MSk7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogdmFyKC0tZHQtc3Bpbm5lci1jb2xvci0yLCAjMDAwKTtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBoZWlnaHQ6IDFyZW07XG4gICAgICAgIHdpZHRoOiAxcmVtO1xuICAgICAgfVxuICAgIGA7XG4gIH1cbn1cblxud2luZG93LmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnZHQtc3Bpbm5lcicsIER0U3Bpbm5lcik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/components/icons/dt-spinner.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/components/icons/dt-star.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/components/icons/dt-star.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DtStar: () => (/* binding */ DtStar)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n\n\nclass DtStar extends lit__WEBPACK_IMPORTED_MODULE_0__.LitElement {\n  static get styles() {\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)`\n      :host {\n        fill: var(--star-unselected-color, #c7c6c1);\n      }\n      :host([selected]) {\n        fill: var(--star-unselected-color, hsl(45, 100%, 51%));\n      }\n    `;\n  }\n\n  static get properties() {\n    return {\n      postID: { type: Number },\n      selected: { type: Boolean, reflect: true },\n    };\n  }\n\n  _onclick() {\n    this.selected = !this.selected;\n\n    const event = new CustomEvent('change', {\n      detail: {\n        postID: this.postID,\n        favorited: this.selected,\n      },\n    });\n\n    this.dispatchEvent(event);\n  }\n\n  _keyUp(e) {\n    // If key pressed was enter, simulate a click\n    const keycode = e.keyCode || e.which;\n\n    if (keycode === 13) {\n      // Enter\n      this._onclick();\n    }\n  }\n\n  render() {\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      <svg\n        @click=\"${this._onclick}\"\n        @keyup=\"${this._keyUp}\"\n        tabindex=\"0\"\n        id=\"star\"\n        height=\"32\"\n        viewBox=\"0 0 32 32\"\n        width=\"32\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M 31.916 12.092 C 31.706 11.417 31.131 10.937 30.451 10.873 L 21.215 9.996 L 17.564 1.077 C 17.295 0.423 16.681 0 16 0 C 15.318 0 14.706 0.423 14.435 1.079 L 10.784 9.996 L 1.546 10.873 C 0.868 10.937 0.295 11.417 0.084 12.092 C -0.126 12.769 0.068 13.51 0.581 13.978 L 7.563 20.367 L 5.503 29.83 C 5.354 30.524 5.613 31.245 6.165 31.662 C 6.462 31.886 6.811 32 7.161 32 C 7.463 32 7.764 31.915 8.032 31.747 L 16 26.778 L 23.963 31.747 C 24.546 32.113 25.281 32.08 25.834 31.662 C 26.386 31.243 26.645 30.524 26.494 29.83 L 24.436 20.367 L 31.417 13.978 C 31.931 13.51 32.127 12.769 31.916 12.092 Z M 31.916 12.092\"\n        />\n      </svg>\n    `;\n  }\n}\n\nwindow.customElements.define('dt-star', DtStar);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRpc2NpcGxlLnRvb2xzL3dlYi1jb21wb25lbnRzL3NyYy9jb21wb25lbnRzL2ljb25zL2R0LXN0YXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBNEM7O0FBRXJDLHFCQUFxQiwyQ0FBVTtBQUN0QztBQUNBLFdBQVcsd0NBQUc7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxnQkFBZ0IsY0FBYztBQUM5QixrQkFBa0IsOEJBQThCO0FBQ2hEO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLOztBQUVMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLHlDQUFJO0FBQ2Y7QUFDQSxrQkFBa0IsY0FBYztBQUNoQyxrQkFBa0IsWUFBWTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGlzY2lwbGUtdG9vbHMtY29udmVyc2F0aW9ucy8uL25vZGVfbW9kdWxlcy9AZGlzY2lwbGUudG9vbHMvd2ViLWNvbXBvbmVudHMvc3JjL2NvbXBvbmVudHMvaWNvbnMvZHQtc3Rhci5qcz8yZjdlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGh0bWwsIGNzcywgTGl0RWxlbWVudCB9IGZyb20gJ2xpdCc7XG5cbmV4cG9ydCBjbGFzcyBEdFN0YXIgZXh0ZW5kcyBMaXRFbGVtZW50IHtcbiAgc3RhdGljIGdldCBzdHlsZXMoKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIDpob3N0IHtcbiAgICAgICAgZmlsbDogdmFyKC0tc3Rhci11bnNlbGVjdGVkLWNvbG9yLCAjYzdjNmMxKTtcbiAgICAgIH1cbiAgICAgIDpob3N0KFtzZWxlY3RlZF0pIHtcbiAgICAgICAgZmlsbDogdmFyKC0tc3Rhci11bnNlbGVjdGVkLWNvbG9yLCBoc2woNDUsIDEwMCUsIDUxJSkpO1xuICAgICAgfVxuICAgIGA7XG4gIH1cblxuICBzdGF0aWMgZ2V0IHByb3BlcnRpZXMoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHBvc3RJRDogeyB0eXBlOiBOdW1iZXIgfSxcbiAgICAgIHNlbGVjdGVkOiB7IHR5cGU6IEJvb2xlYW4sIHJlZmxlY3Q6IHRydWUgfSxcbiAgICB9O1xuICB9XG5cbiAgX29uY2xpY2soKSB7XG4gICAgdGhpcy5zZWxlY3RlZCA9ICF0aGlzLnNlbGVjdGVkO1xuXG4gICAgY29uc3QgZXZlbnQgPSBuZXcgQ3VzdG9tRXZlbnQoJ2NoYW5nZScsIHtcbiAgICAgIGRldGFpbDoge1xuICAgICAgICBwb3N0SUQ6IHRoaXMucG9zdElELFxuICAgICAgICBmYXZvcml0ZWQ6IHRoaXMuc2VsZWN0ZWQsXG4gICAgICB9LFxuICAgIH0pO1xuXG4gICAgdGhpcy5kaXNwYXRjaEV2ZW50KGV2ZW50KTtcbiAgfVxuXG4gIF9rZXlVcChlKSB7XG4gICAgLy8gSWYga2V5IHByZXNzZWQgd2FzIGVudGVyLCBzaW11bGF0ZSBhIGNsaWNrXG4gICAgY29uc3Qga2V5Y29kZSA9IGUua2V5Q29kZSB8fCBlLndoaWNoO1xuXG4gICAgaWYgKGtleWNvZGUgPT09IDEzKSB7XG4gICAgICAvLyBFbnRlclxuICAgICAgdGhpcy5fb25jbGljaygpO1xuICAgIH1cbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gaHRtbGBcbiAgICAgIDxzdmdcbiAgICAgICAgQGNsaWNrPVwiJHt0aGlzLl9vbmNsaWNrfVwiXG4gICAgICAgIEBrZXl1cD1cIiR7dGhpcy5fa2V5VXB9XCJcbiAgICAgICAgdGFiaW5kZXg9XCIwXCJcbiAgICAgICAgaWQ9XCJzdGFyXCJcbiAgICAgICAgaGVpZ2h0PVwiMzJcIlxuICAgICAgICB2aWV3Qm94PVwiMCAwIDMyIDMyXCJcbiAgICAgICAgd2lkdGg9XCIzMlwiXG4gICAgICAgIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIlxuICAgICAgPlxuICAgICAgICA8cGF0aFxuICAgICAgICAgIGQ9XCJNIDMxLjkxNiAxMi4wOTIgQyAzMS43MDYgMTEuNDE3IDMxLjEzMSAxMC45MzcgMzAuNDUxIDEwLjg3MyBMIDIxLjIxNSA5Ljk5NiBMIDE3LjU2NCAxLjA3NyBDIDE3LjI5NSAwLjQyMyAxNi42ODEgMCAxNiAwIEMgMTUuMzE4IDAgMTQuNzA2IDAuNDIzIDE0LjQzNSAxLjA3OSBMIDEwLjc4NCA5Ljk5NiBMIDEuNTQ2IDEwLjg3MyBDIDAuODY4IDEwLjkzNyAwLjI5NSAxMS40MTcgMC4wODQgMTIuMDkyIEMgLTAuMTI2IDEyLjc2OSAwLjA2OCAxMy41MSAwLjU4MSAxMy45NzggTCA3LjU2MyAyMC4zNjcgTCA1LjUwMyAyOS44MyBDIDUuMzU0IDMwLjUyNCA1LjYxMyAzMS4yNDUgNi4xNjUgMzEuNjYyIEMgNi40NjIgMzEuODg2IDYuODExIDMyIDcuMTYxIDMyIEMgNy40NjMgMzIgNy43NjQgMzEuOTE1IDguMDMyIDMxLjc0NyBMIDE2IDI2Ljc3OCBMIDIzLjk2MyAzMS43NDcgQyAyNC41NDYgMzIuMTEzIDI1LjI4MSAzMi4wOCAyNS44MzQgMzEuNjYyIEMgMjYuMzg2IDMxLjI0MyAyNi42NDUgMzAuNTI0IDI2LjQ5NCAyOS44MyBMIDI0LjQzNiAyMC4zNjcgTCAzMS40MTcgMTMuOTc4IEMgMzEuOTMxIDEzLjUxIDMyLjEyNyAxMi43NjkgMzEuOTE2IDEyLjA5MiBaIE0gMzEuOTE2IDEyLjA5MlwiXG4gICAgICAgIC8+XG4gICAgICA8L3N2Zz5cbiAgICBgO1xuICB9XG59XG5cbndpbmRvdy5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ2R0LXN0YXInLCBEdFN0YXIpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/components/icons/dt-star.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/components/layout/dt-alert/dt-alert.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/components/layout/dt-alert/dt-alert.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DtAlert: () => (/* binding */ DtAlert)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit/directives/class-map.js */ \"./node_modules/lit/directives/class-map.js\");\n/* harmony import */ var _dt_base_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../dt-base.js */ \"./node_modules/@disciple.tools/web-components/src/components/dt-base.js\");\n\n// import { msg } from '@lit/localize';\n\n\n\nclass DtAlert extends _dt_base_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n  static get styles() {\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)`\n      :host {\n        display: block;\n      }\n\n      .dt-alert {\n        padding: var(--dt-alert-padding, 10px);\n        font-family: var(--dt-alert-font-family);\n        font-size: var(--dt-alert-font-size, 14px);\n        font-weight: var(--dt-alert-font-weight, 700);\n        background-color: var(\n          --dt-alert-context-background-color,\n          var(--dt-alert-background-color)\n        );\n        border: var(--dt-alert-border-width, 1px) solid\n          var(--dt-alert-context-border-color, var(--dt-alert-border-color));\n        border-radius: var(--dt-alert-border-radius, 10px);\n        box-shadow: var(--dt-alert-box-shadow, 0 2px 4px rgb(0 0 0 / 25%));\n        color: var(--dt-alert-context-text-color, var(--dt-alert-text-color));\n        text-rendering: optimizeLegibility;\n        display: flex;\n        gap: var(--dt-alert-gap, 10px);\n        justify-content: space-between;\n        align-content: center;\n        align-items: center;\n        white-space: initial;\n      }\n\n      .dt-alert.dt-alert--outline {\n        background-color: transparent;\n        color: var(--dt-alert-context-text-color, var(--text-color-inverse));\n      }\n\n      .dt-alert--primary:not(.dt-alert--outline) {\n        --dt-alert-context-border-color: var(--primary-color);\n        --dt-alert-context-background-color: var(--primary-color);\n        --dt-alert-context-text-color: var(--dt-alert-text-color-light);\n      }\n\n      .dt-alert--alert:not(.dt-alert--outline) {\n        --dt-alert-context-border-color: var(--alert-color);\n        --dt-alert-context-background-color: var(--alert-color);\n        --dt-alert-context-text-color: var(--dt-alert-text-color-light);\n      }\n\n      .dt-alert--caution:not(.dt-alert--outline) {\n        --dt-alert-context-border-color: var(--caution-color);\n        --dt-alert-context-background-color: var(--caution-color);\n        --dt-alert-context-text-color: var(--dt-alert-text-color-dark);\n      }\n\n      .dt-alert--success:not(.dt-alert--outline) {\n        --dt-alert-context-border-color: var(--success-color);\n        --dt-alert-context-background-color: var(--success-color);\n        --dt-alert-context-text-color: var(--dt-alert-text-color-light);\n      }\n\n      .dt-alert--inactive:not(.dt-alert--outline) {\n        --dt-alert-context-border-color: var(--inactive-color);\n        --dt-alert-context-background-color: var(--inactive-color);\n        --dt-alert-context-text-color: var(--dt-alert-text-color-light);\n      }\n\n      .dt-alert--disabled:not(.dt-alert--outline) {\n        --dt-alert-context-border-color: var(--disabled-color);\n        --dt-alert-context-background-color: var(--disabled-color);\n        --dt-alert-context-text-color: var(--dt-alert-text-color-dark);\n      }\n\n      .dt-alert--primary.dt-alert--outline {\n        --dt-alert-context-border-color: var(--primary-color);\n        --dt-alert-context-text-color: var(--primary-color);\n      }\n\n      .dt-alert--alert.dt-alert--outline {\n        --dt-alert-context-border-color: var(--alert-color);\n        --dt-alert-context-text-color: var(--alert-color);\n      }\n\n      .dt-alert--caution.dt-alert--outline {\n        --dt-alert-context-border-color: var(--caution-color);\n        --dt-alert-context-text-color: var(--caution-color);\n      }\n\n      .dt-alert--success.dt-alert--outline {\n        --dt-alert-context-border-color: var(--success-color);\n        --dt-alert-context-text-color: var(--success-color);\n      }\n\n      .dt-alert--inactive.dt-alert--outline {\n        --dt-alert-context-border-color: var(--inactive-color);\n      }\n\n      .dt-alert--disabled.dt-alert--outline {\n        --dt-alert-context-border-color: var(--disabled-color);\n      }\n\n      button.toggle {\n        margin-inline-end: 0;\n        margin-inline-start: auto;\n        background: none;\n        border: none;\n        color: inherit;\n        cursor: pointer;\n        display: flex;\n        align-items: center;\n      }\n    `;\n  }\n\n  static get properties() {\n    return {\n      context: { type: String },\n      dismissable: { type: Boolean },\n      timeout: { type: Number },\n      hide: { type: Boolean },\n      outline: { type: Boolean },\n    };\n  }\n\n  get classes() {\n    const classes = {\n      'dt-alert': true,\n      'dt-alert--outline': this.outline,\n    };\n    const contextClass = `dt-alert--${this.context}`;\n    classes[contextClass] = true;\n    return classes;\n  }\n\n  constructor() {\n    super();\n\n    this.context = 'default';\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    if (this.timeout) {\n      setTimeout(() => {\n        this._dismiss();\n      }, this.timeout);\n    }\n  }\n\n  _dismiss() {\n    this.hide = true;\n  }\n\n  render() {\n    if (this.hide) {\n      return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)``;\n    }\n\n    // prettier-ignore\n    const svg = (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      <svg viewPort=\"0 0 12 12\" version=\"1.1\" width='12' height='12'>\n           xmlns=\"http://www.w3.org/2000/svg\">\n        <line x1=\"1\" y1=\"11\"\n              x2=\"11\" y2=\"1\"\n              stroke=\"currentColor\"\n              stroke-width=\"2\"/>\n        <line x1=\"1\" y1=\"1\"\n              x2=\"11\" y2=\"11\"\n              stroke=\"currentColor\"\n              stroke-width=\"2\"/>\n      </svg>\n    `;\n\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      <div role=\"alert\" class=${(0,lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_1__.classMap)(this.classes)}>\n        <div>\n          <slot></slot>\n        </div>\n        ${this.dismissable\n          ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n              <button @click=\"${this._dismiss}\" class=\"toggle\">${svg}</button>\n            `\n          : null}\n      </div>\n    `;\n  }\n}\n\nwindow.customElements.define('dt-alert', DtAlert);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/components/layout/dt-alert/dt-alert.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/components/layout/dt-list/dt-list.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/components/layout/dt-list/dt-list.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DtList: () => (/* binding */ DtList)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var _lit_localize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @lit/localize */ \"./node_modules/@lit/localize/lit-localize.js\");\n/* harmony import */ var lit_directives_map_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lit/directives/map.js */ \"./node_modules/lit/directives/map.js\");\n/* harmony import */ var lit_directives_repeat_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lit/directives/repeat.js */ \"./node_modules/lit/directives/repeat.js\");\n/* harmony import */ var lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lit/directives/if-defined.js */ \"./node_modules/lit/directives/if-defined.js\");\n/* harmony import */ var lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lit/directives/class-map.js */ \"./node_modules/lit/directives/class-map.js\");\n/* harmony import */ var _dt_base_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../dt-base.js */ \"./node_modules/@disciple.tools/web-components/src/components/dt-base.js\");\n/* harmony import */ var _services_apiService_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../services/apiService.js */ \"./node_modules/@disciple.tools/web-components/src/services/apiService.js\");\n/* harmony import */ var _icons_dt_star_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../icons/dt-star.js */ \"./node_modules/@disciple.tools/web-components/src/components/icons/dt-star.js\");\n\n\n\n\n\n\n\n\n\n\nclass DtList extends _dt_base_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"] {\n  static get styles() {\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)`\n      :host {\n        --number-of-columns: 7;\n        font-family: var(--dt-list-font-family, var(--font-family));\n        font-size: var(--dt-list-font-size, 15px);\n        font-weight: var(--dt-list-font-weight, 300);\n        line-height: var(--dt-list-line-height, 1.5);\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      .section {\n        container-type: inline-size;\n        background-color: var(--dt-list-background-color, #fefefe);\n        border: 1px solid var(--dt-list-border-color, #f1f1f1);\n        border-radius: var(--dt-list-border-radius, 10px);\n        box-shadow: var(--dt-list-box-shadow, 0 2px 4px rgb(0 0 0 / 25%));\n        padding: var(--dt-list-section-padding, 1rem);\n      }\n\n      .header {\n        display: flex;\n        justify-content: flex-start;\n        align-items: baseline;\n        gap: var(--dt-list-header-gap, 1.5em);\n        flex-wrap: wrap;\n      }\n\n      .section-header {\n        color: var(--dt-list-header-color, var(--primary-color));\n        font-size: 1.5rem;\n        display: inline-block;\n        text-transform: capitalize;\n      }\n\n      .toggleButton {\n        color: var(--dt-list-header-color, var(--primary-color));\n        font-size: 1rem;\n        background: transparent;\n        border: var(--dt-list-toggleButton, 0.1em solid rgb(0 0 0 / 0.2));\n        border-radius: 0.25em;\n        padding: 0.25em 0.5em;\n        cursor: pointer;\n      }\n\n      .toggleButton svg {\n        height: 0.9rem;\n        transform: translateY(-2px);\n        vertical-align: bottom;\n        width: 1rem;\n        fill: var(--dt-list-header-color, var(--primary-color));\n        stroke: var(--dt-list-header-color, var(--primary-color));\n      }\n\n      .list_action_section {\n        background-color: var(\n          --dt-list-action-section-background-color,\n          #ecf5fc\n        );\n        border-radius: var(--dt-list-border-radius, 10px);\n        margin: var(--dt-list-action-section-margin, 30px 0);\n        padding: var(--dt-list-action-section-padding, 20px);\n      }\n      .list_action_section_header {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n      }\n      .close-button {\n        outline: none;\n        font-size: 2.5em;\n        line-height: 1;\n        color: var(--dt-list-action-close-button, var(--inactive-color));\n        background: transparent;\n        border: none;\n        cursor: pointer;\n      }\n      .fieldsList {\n        list-style-type: none;\n        column-count: 1;\n      }\n\n      .list-field-picker-item {\n        list-style-type: none;\n      }\n\n      .list-field-picker-item input {\n        margin: 1rem;\n      }\n\n      .list-field-picker-item .dt-icon {\n        height: var(--dt-list-field-picker-icon-size, 1rem);\n        width: var(--dt-list-field-picker-icon-size, 1rem);\n      }\n\n      table {\n        display: grid;\n        border: 1px solid var(--dt-list-border-color, #f1f1f1);\n        border-top: 0;\n        border-collapse: collapse;\n        min-width: 100%;\n        grid-template-columns: minmax(32px, 0.1fr) minmax(32px, 0.1fr) minmax(\n            50px,\n            0.8fr\n          );\n      }\n\n      table td:last-child {\n        border-bottom: 1px solid var(--dt-list-border-color, #f1f1f1);\n        padding-bottom: 2rem;\n      }\n\n      thead,\n      tbody,\n      tr {\n        display: contents;\n      }\n\n      tr {\n        cursor: pointer;\n      }\n\n      tr:nth-child(2n + 1) {\n        background: #f1f1f1;\n      }\n\n      tr:hover {\n        background-color: var(--dt-list-hover-background-color, #ecf5fc);\n      }\n\n      tr a {\n        color: var(--dt-list-link-color, var(--primary-color));\n      }\n\n      th {\n        display: none;\n      }\n\n      .column-name {\n        pointer-events: none;\n      }\n      #sort-arrows {\n        grid-template-columns: 4fr 1fr;\n        display: flex;\n        flex-direction: column;\n        height: 1.5em;\n        justify-content: space-evenly;\n      }\n      th.all span.sort-arrow-up {\n        border-color: transparent transparent\n          var(--dt-list-sort-arrow-color, #808080) transparent;\n        border-style: solid;\n        border-width: 0 0.5em 0.5em 0.5em;\n      }\n\n      th.all span.sort-arrow-down {\n        content: '';\n        border-color: var(--dt-list-sort-arrow-color, #808080) transparent\n          transparent;\n        border-style: solid;\n        border-width: 0.5em 0.5em 0;\n      }\n\n      th.all span.sort-arrow-up.sortedBy {\n        border-color: transparent transparent\n          var(--dt-list-sort-arrow-color-highlight, #999999) transparent;\n      }\n\n      th.all span.sort-arrow-down.sortedBy {\n        border-color: var(--dt-list-sort-arrow-color-highlight, #999999)\n          transparent transparent;\n      }\n\n      td {\n        border: 0;\n        grid-column: 1 / span 3;\n        padding-inline-start: 1em;\n      }\n\n      td::before {\n        content: attr(title) ': ';\n        padding-inline-end: 1em;\n      }\n\n      td.no-title {\n        grid-column: auto;\n      }\n\n      td.line-count {\n        padding-block-start: 0.8em;\n        padding-inline-start: 1em;\n      }\n\n      td.bulk_edit_checkbox {\n        grid-column: 1 / auto;\n      }\n\n      td.no-title::before {\n        content: '';\n        padding-inline-end: 0.25em;\n      }\n\n      th.bulk_edit_checkbox,\n      td.bulk_edit_checkbox {\n        grid-column: none;\n      }\n\n      .bulk_edit_checkbox input {\n        display: none;\n      }\n\n      .bulk_editing th.bulk_edit_checkbox,\n      .bulk_editing td.bulk_edit_checkbox {\n        grid-column: 1 / auto;\n      }\n\n      .bulk_editing .bulk_edit_checkbox input {\n        display: initial;\n      }\n\n      ul {\n        margin: 0;\n        padding: 0;\n      }\n\n      ul li {\n        list-style-type: none;\n      }\n\n      input[type='checkbox'] {\n        margin: 1rem;\n      }\n      @container (min-width: 650px) {\n        .fieldsList {\n          column-count: 2;\n        }\n        table {\n          grid-template-columns:\n            minmax(32px, 0.5fr)\n            minmax(32px, 0.5fr)\n            minmax(32px, 0.5fr)\n            repeat(var(--number-of-columns, 7), minmax(50px, 1fr));\n        }\n\n        th {\n          position: sticky;\n          top: 0;\n          background: var(\n            --dt-list-header-background-color,\n            var(--dt-tile-background-color, #fefefe)\n          );\n          text-align: start;\n          justify-self: start;\n          font-weight: normal;\n          font-size: 1.1rem;\n          color: var(--dt-list-header-color, #0a0a0a);\n          white-space: pre-wrap;\n          display: grid;\n          place-items: center;\n          grid-template-columns: 2fr 1fr;\n        }\n\n        th:last-child {\n          border: 0;\n        }\n        td {\n          display: flex;\n          align-items: center;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n          padding-top: 0.5rem;\n          padding-bottom: 0.5rem;\n          padding-inline-start: 0;\n          color: var(--text-color-mid);\n          border-bottom: 1px solid var(--dt-list-border-color, #f1f1f1);\n          grid-column: auto;\n        }\n        td::before {\n          content: '';\n          display: none;\n        }\n      }\n      @container (min-width: 950px) {\n        .fieldsList {\n          column-count: 3;\n        }\n      }\n      @container (min-width: 1500px) {\n        .fieldsList {\n          column-count: 4;\n        }\n      }\n    `;\n  }\n\n  static get properties() {\n    return {\n      postType: { type: String },\n      postTypeLabel: { type: String },\n      postTypeSettings: { type: Object, attribute: true },\n      posts: { type: Array },\n      total: { type: Number },\n      columns: { type: Array },\n      sortedBy: { type: String },\n      loading: { type: Boolean, default: true },\n      offset: { type: Number },\n      showArchived: { type: Boolean, default: false },\n      showFieldsSelector: { type: Boolean, default: false },\n      showBulkEditSelector: { type: Boolean, default: false },\n      nonce: { type: String },\n    };\n  }\n\n  constructor() {\n    super();\n    this.sortedBy = 'name';\n  }\n\n  firstUpdated() {\n    if (this.nonce && !this.api) {\n      this.api = new _services_apiService_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"](this.nonce);\n    }\n  }\n\n  async _getPosts(offset = 0, sortBy = 'name', sortOrder = 'desc') {\n    this.loading = true;\n    this.filteredOptions = [];\n    const sort = `${sortOrder === 'desc' ? '-' : ''}${sortBy}`;\n    const URLParams = encodeURI(\n      `?offset=${offset}&sortBy=${sort}&offset=${offset}${this.columns\n        .map(column => `&fields_to_return=${column}`)\n        .join('')}`\n    );\n    const response = await this.api.makeRequestOnPosts(\n      'GET',\n      `${this.postType}${URLParams}`\n    );\n\n    return response;\n  }\n\n  _headerClick(e) {\n    const column = e.target.dataset.id;\n    this._getPosts(this.offset ? this.offset : 0, column).then(response => {\n      this.posts = response;\n      this.sortedBy = column;\n    });\n  }\n\n  _bulkEdit() {\n    this.showBulkEditSelector = !this.showBulkEditSelector;\n  }\n\n  _fieldsEdit() {\n    this.showFieldsSelector = !this.showFieldsSelector;\n  }\n\n  _toggleShowArchived() {\n    this.showArchived = !this.showArchived;\n  }\n\n  _sortArrowsClass(column) {\n    return this.sortedBy === column ? 'sortedBy' : '';\n  }\n\n  _sortArrowsToggle(column) {\n    if (this.sortedBy !== `-${column}`) {\n      return `-${column}`;\n    }\n    return column;\n  }\n\n  _headerTemplate() {\n    // const classes = {\n    //   sortedBy: this.sortedBy,\n    // };\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      <thead>\n        <tr>\n          <th id=\"bulk_edit_master\" class=\"bulk_edit_checkbox\">\n            <input\n              type=\"checkbox\"\n              name=\"bulk_send_app_id\"\n              value=\"\"\n              id=\"bulk_edit_master_checkbox\"\n            />\n          </th>\n\n          <th></th>\n\n          ${(0,lit_directives_map_js__WEBPACK_IMPORTED_MODULE_2__.map)(\n            this.columns,\n            column =>\n              (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<th\n                class=\"all\"\n                data-id=\"${this._sortArrowsToggle(column)}\"\n                @click=${this._headerClick}\n              >\n                <span class=\"column-name\"\n                  >${this.postTypeSettings[column].name}</span\n                >\n                <span id=\"sort-arrows\">\n                  <span\n                    class=\"sort-arrow-up ${this._sortArrowsClass(`-${column}`)}\"\n                    data-id=\"-${column}\"\n                  ></span>\n                  <span\n                    class=\"sort-arrow-down ${this._sortArrowsClass(column)}\"\n                    data-id=\"${column}\"\n                  ></span>\n                </span>\n              </th>`\n          )}\n        </tr>\n      </thead>\n    `;\n  }\n\n  _rowTemplate() {\n    return (0,lit_directives_map_js__WEBPACK_IMPORTED_MODULE_2__.map)(this.posts, (post, i) => {\n      if (\n        this.showArchived ||\n        (!this.showArchived && post.overall_status.key !== 'closed')\n      ) {\n        return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n          <tr class=\"dnd-moved\" data-link=\"${this.posts.permalink}\">\n            <td class=\"bulk_edit_checkbox no-title\">\n              <input type=\"checkbox\" name=\"bulk_edit_id\" .value=\"${post.ID}\" />\n            </td>\n            <td class=\"no-title line-count\">${i + 1}.</td>\n\n            ${this._cellTemplate(post)}\n          </tr>\n        `;\n      }\n      return null;\n    });\n  }\n\n  _cellTemplate(post) {\n    return (0,lit_directives_map_js__WEBPACK_IMPORTED_MODULE_2__.map)(this.columns, column => {\n      if (\n        ['text', 'textarea', 'number'].includes(\n          this.postTypeSettings[column].type\n        )\n      ) {\n        return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)` <td\n          dir=\"auto\"\n          title=\"${this.postTypeSettings[column].name}\"\n        >\n          <a href=\"${post[column]}\" title=\"test\">${post[column]}</a>\n        </td>`;\n      }\n      if (this.postTypeSettings[column].type === 'date') {\n        // TODO: format date\n        return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)` <td\n          dir=\"auto\"\n          title=\"${this.postTypeSettings[column].name}\"\n        >\n          ${post[column].formatted}\n        </td>`;\n      }\n      if (\n        this.postTypeSettings[column].type === 'user_select' &&\n        post[column] &&\n        post[column].display\n      ) {\n        return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)` <td\n          dir=\"auto\"\n          title=\"${this.postTypeSettings[column].name}\"\n        >\n          ${(0,lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_4__.ifDefined)(post[column].display)}\n        </td>`;\n      }\n      if (\n        this.postTypeSettings[column].type === 'key_select' &&\n        post[column] &&\n        (post[column].label || post[column].name)\n      ) {\n        return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)` <td\n          dir=\"auto\"\n          title=\"${this.postTypeSettings[column].name}\"\n        >\n          ${post[column].label || post[column].name}\n        </td>`;\n      }\n      if (\n        this.postTypeSettings[column].type === 'multi_select' ||\n        (this.postTypeSettings[column].type === 'tags' &&\n          post[column] &&\n          post[column].length > 0)\n      ) {\n        return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)` <td\n          dir=\"auto\"\n          title=\"${this.postTypeSettings[column].name}\"\n        >\n          <ul>\n            ${(0,lit_directives_map_js__WEBPACK_IMPORTED_MODULE_2__.map)(\n              post[column],\n              value =>\n                (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<li>\n                  ${this.postTypeSettings[column].default[value].label}\n                </li>`\n            )}\n          </ul>\n        </td>`;\n      }\n      if (\n        this.postTypeSettings[column].type === 'location' ||\n        this.postTypeSettings[column].type === 'location_meta'\n      ) {\n        return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)` <td\n          dir=\"auto\"\n          title=\"${this.postTypeSettings[column].name}\"\n        >\n          ${(0,lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_4__.ifDefined)(post[column].label)}\n        </td>`;\n      }\n      if (this.postTypeSettings[column].type === 'communication_channel') {\n        return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)` <td\n          dir=\"auto\"\n          title=\"${this.postTypeSettings[column].name}\"\n        >\n          ${(0,lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_4__.ifDefined)(post[column].value)}\n        </td>`;\n      }\n      if (this.postTypeSettings[column].type === 'connection') {\n        return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)` <td\n          dir=\"auto\"\n          title=\"${this.postTypeSettings[column].name}\"\n        >\n          <!-- TODO: look at this, it doesn't match the current theme. -->\n          ${(0,lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_4__.ifDefined)(post[column].value)}\n        </td>`;\n      }\n      if (this.postTypeSettings[column].type === 'boolean') {\n        if (column === 'favorite') {\n          return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<td\n            dir=\"auto\"\n            title=\"${this.postTypeSettings[column].name}\"\n            class=\"\"\n          >\n            <dt-star postID=${post.ID} ?selected=${post.favorite}></dt-star>\n          </td>`;\n        }\n        if (this.postTypeSettings[column] === true) {\n          return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<td\n            dir=\"auto\"\n            title=\"${this.postTypeSettings[column].name}\"\n          >\n            ['&check;']\n          </td>`;\n        }\n      }\n      return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<td\n        dir=\"auto\"\n        title=\"${this.postTypeSettings[column].name}\"\n      ></td>`;\n    });\n  }\n\n  _fieldListIconTemplate(field) {\n    if (this.postTypeSettings[field].icon) {\n      return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<img\n        class=\"dt-icon\"\n        src=\"${this.postTypeSettings[field].icon}\"\n        alt=\"${this.postTypeSettings[field].name}\"\n      />`;\n    }\n    return null;\n  }\n\n  _fieldsListTemplate() {\n    return (0,lit_directives_repeat_js__WEBPACK_IMPORTED_MODULE_3__.repeat)(\n      Object.keys(this.postTypeSettings).sort((a, b) => {\n        const nameA = this.postTypeSettings[a].name.toUpperCase(); // ignore upper and lowercase\n        const nameB = this.postTypeSettings[b].name.toUpperCase(); // ignore upper and lowercase\n        if (nameA < nameB) {\n          return -1;\n        }\n        if (nameA > nameB) {\n          return 1;\n        }\n        // names must be equal\n        return 0;\n      }),\n      field => field,\n      field => {\n        if (!this.postTypeSettings[field].hidden) {\n          return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<li class=\"list-field-picker-item\">\n            <label>\n              <input\n                type=\"checkbox\"\n                id=\"${field}\"\n                name=\"${field}\"\n                .value=\"${field}\"\n                @change=${this._updateFields}\n                ?checked=${this.columns.includes(field)}\n              />\n              ${this._fieldListIconTemplate(field)}\n              ${this.postTypeSettings[field].name}</label\n            >\n          </li> `;\n        }\n        return null;\n      }\n    );\n  }\n\n  _fieldsSelectorTemplate() {\n    if (this.showFieldsSelector) {\n      return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<div\n        id=\"list_column_picker\"\n        class=\"list_field_picker list_action_section\"\n      >\n        <div class=\"list_action_section_header\">\n          <p style=\"font-weight:bold\">\n            ${(0,_lit_localize__WEBPACK_IMPORTED_MODULE_1__.msg)('Choose which fields to display as columns in the list')}\n          </p>\n          <button\n            class=\"close-button list-action-close-button\"\n            data-close=\"list_column_picker\"\n            aria-label=\"Close modal\"\n            type=\"button\"\n            @click=${this._fieldsEdit}\n          >\n            <span aria-hidden=\"true\">×</span>\n          </button>\n        </div>\n        <ul class=\"fieldsList\">\n          ${this._fieldsListTemplate()}\n        </ul>\n      </div>`;\n    }\n    return null;\n  }\n\n  _updateFields(e) {\n    const field = e.target.value;\n    const viewableColumns = this.columns;\n\n    if (!viewableColumns.includes(field)) {\n      viewableColumns.push(field);\n    } else {\n      viewableColumns.filter(column => column !== field);\n      viewableColumns.splice(viewableColumns.indexOf(field), 1);\n    }\n\n    this.columns = viewableColumns;\n    this.style.setProperty('--number-of-columns', this.columns.length - 1);\n\n    this.requestUpdate();\n  }\n\n  _bulkSelectorTemplate() {\n    if (this.showBulkEditSelector) {\n      return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<div id=\"bulk_edit_picker\" class=\"list_action_section\">\n        <div class=\"list_action_section_header\">\n          <p style=\"font-weight:bold\">\n            ${(0,_lit_localize__WEBPACK_IMPORTED_MODULE_1__.msg)(\n              (0,_lit_localize__WEBPACK_IMPORTED_MODULE_1__.str)`Select all the ${this.postType} you want to update from the list, and update them below`\n            )}\n          </p>\n          <button\n            class=\"close-button list-action-close-button\"\n            aria-label=\"Close modal\"\n            type=\"button\"\n            @click=${this._bulkEdit}\n          >\n            <span aria-hidden=\"true\">×</span>\n          </button>\n        </div>\n        <ul class=\"fieldsList\">\n          This is where the bulk edit form will go.\n        </ul>\n      </div>`;\n    }\n    return null;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    if (!this.posts) {\n      this._getPosts().then(posts => {\n        this.posts = posts;\n      });\n    }\n  }\n\n  render() {\n    const bulkEditClass = {\n      bulk_editing: this.showBulkEditSelector,\n      hidden: false,\n    };\n\n    // prettier-ignore\n    const bulkEditSvg = (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      <svg viewBox=\"0 0 100 100\" fill=\"#000000\" style=\"enable-background:new 0 0 100 100;\" xmlns=\"http://www.w3.org/2000/svg\">\n        <line style=\"stroke-linecap: round; paint-order: fill; fill: none; stroke-width: 15px;\" x1=\"7.97\" y1=\"50.199\" x2=\"76.069\" y2=\"50.128\" transform=\"matrix(0.999999, 0.001017, -0.001017, 0.999999, 0.051038, -0.042708)\"/>\n        <line style=\"stroke-linecap: round; stroke-width: 15px;\" x1=\"7.97\" y1=\"17.751\" x2=\"92.058\" y2=\"17.751\"/>\n        <line style=\"stroke-linecap: round; stroke-width: 15px;\" x1=\"7.97\" y1=\"82.853\" x2=\"42.343\" y2=\"82.853\"/>\n        <polygon style=\"stroke-linecap: round; stroke-miterlimit: 1; stroke-linejoin: round; fill: rgb(255, 255, 255); paint-order: stroke; stroke-width: 9px;\" points=\"22.982 64.982 33.592 53.186 50.916 70.608 82.902 21.308 95 30.85 52.256 95\"/>\n      </svg>\n    `;\n    // prettier-ignore\n    const fieldsSvg = (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<svg height='100px' width='100px'  fill=\"#000000\" xmlns:x=\"http://ns.adobe.com/Extensibility/1.0/\" xmlns:i=\"http://ns.adobe.com/AdobeIllustrator/10.0/\" xmlns:graph=\"http://ns.adobe.com/Graphs/1.0/\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" style=\"enable-background:new 0 0 100 100;\" xml:space=\"preserve\"><g><g i:extraneous=\"self\"><g><path d=\"M94.4,63c0-5.7-3.6-10.5-8.6-12.5V7.3c0-2.7-2.2-4.8-4.8-4.8c-2.7,0-4.8,2.2-4.8,4.8v43.2c-5,1.9-8.6,6.8-8.6,12.5     s3.6,10.5,8.6,12.5v17.2c0,2.7,2.2,4.8,4.8,4.8c2.7,0,4.8-2.2,4.8-4.8V75.5C90.9,73.6,94.4,68.7,94.4,63z M81,66.7     c-2,0-3.7-1.7-3.7-3.7c0-2,1.7-3.7,3.7-3.7s3.7,1.7,3.7,3.7C84.7,65.1,83.1,66.7,81,66.7z\"></path><path d=\"M54.8,24.5V7.3c0-2.7-2.2-4.8-4.8-4.8c-2.7,0-4.8,2.2-4.8,4.8v17.2c-5,1.9-8.6,6.8-8.6,12.5s3.6,10.5,8.6,12.5v43.2     c0,2.7,2.2,4.8,4.8,4.8c2.7,0,4.8-2.2,4.8-4.8V49.5c5-1.9,8.6-6.8,8.6-12.5S59.8,26.5,54.8,24.5z M50,40.7c-2,0-3.7-1.7-3.7-3.7     c0-2,1.7-3.7,3.7-3.7c2,0,3.7,1.7,3.7,3.7C53.7,39.1,52,40.7,50,40.7z\"></path><path d=\"M23.8,50.5V7.3c0-2.7-2.2-4.8-4.8-4.8c-2.7,0-4.8,2.2-4.8,4.8v43.2c-5,1.9-8.6,6.8-8.6,12.5s3.6,10.5,8.6,12.5v17.2     c0,2.7,2.2,4.8,4.8,4.8c2.7,0,4.8-2.2,4.8-4.8V75.5c5-1.9,8.6-6.8,8.6-12.5S28.8,52.5,23.8,50.5z M19,66.7c-2,0-3.7-1.7-3.7-3.7     c0-2,1.7-3.7,3.7-3.7c2,0,3.7,1.7,3.7,3.7C22.7,65.1,21,66.7,19,66.7z\"></path></g></g></g></svg>`;\n\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      <div class=\"section\">\n        <div class=\"header\">\n          <div class=\"section-header\">\n            <span\n              class=\"section-header posts-header\"\n              style=\"display: inline-block\"\n              >${(0,_lit_localize__WEBPACK_IMPORTED_MODULE_1__.msg)(\n                (0,_lit_localize__WEBPACK_IMPORTED_MODULE_1__.str)`${\n                  this.postTypeLabel ? this.postTypeLabel : this.postType\n                } List`\n              )}</span\n            >\n          </div>\n          <span class=\"filter-result-text\"\n            >${(0,_lit_localize__WEBPACK_IMPORTED_MODULE_1__.msg)((0,_lit_localize__WEBPACK_IMPORTED_MODULE_1__.str)`Showing 1 of ${this.total}`)}</span\n          >\n\n          <button\n            class=\"bulkToggle toggleButton\"\n            id=\"bulk_edit_button\"\n            @click=${this._bulkEdit}\n          >\n            ${bulkEditSvg} ${(0,_lit_localize__WEBPACK_IMPORTED_MODULE_1__.msg)('Bulk Edit')}\n          </button>\n          <button\n            class=\"fieldsToggle toggleButton\"\n            id=\"fields_edit_button\"\n            @click=${this._fieldsEdit}\n          >\n            ${fieldsSvg} ${(0,_lit_localize__WEBPACK_IMPORTED_MODULE_1__.msg)('Fields')}\n          </button>\n\n          <dt-toggle\n            name=\"showArchived\"\n            label=${(0,_lit_localize__WEBPACK_IMPORTED_MODULE_1__.msg)('Show Archived')}\n            ?checked=${this.showArchived}\n            hideIcons\n            onchange=${this._toggleShowArchived}\n            @click=${this._toggleShowArchived}\n          ></dt-toggle>\n        </div>\n        ${this._fieldsSelectorTemplate()} ${this._bulkSelectorTemplate()}\n        <table class=${(0,lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_5__.classMap)(bulkEditClass)}>\n          ${this._headerTemplate()}\n          ${this.posts ? this._rowTemplate() : (0,_lit_localize__WEBPACK_IMPORTED_MODULE_1__.msg)('Loading')}\n        </table>\n      </div>\n    `;\n  }\n}\n\nwindow.customElements.define('dt-list', DtList);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/components/layout/dt-list/dt-list.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/components/layout/dt-modal/dt-modal.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/components/layout/dt-modal/dt-modal.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DtModal: () => (/* binding */ DtModal)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var _lit_localize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @lit/localize */ \"./node_modules/@lit/localize/lit-localize.js\");\n/* harmony import */ var lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lit/directives/class-map.js */ \"./node_modules/lit/directives/class-map.js\");\n/* harmony import */ var lit_directives_style_map_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lit/directives/style-map.js */ \"./node_modules/lit/directives/style-map.js\");\n/* harmony import */ var _dt_base_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../dt-base.js */ \"./node_modules/@disciple.tools/web-components/src/components/dt-base.js\");\n\n\n\n\n\n\nclass DtModal extends _dt_base_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"] {\n  static get styles() {\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)`\n      :host {\n        display: block;\n        font-family: var(--font-family);\n      }\n      :host:has(dialog[open]) {\n        overflow: hidden;\n      }\n\n      .dt-modal {\n        display: block;\n        background: var(--dt-modal-background-color, #fff);\n        color: var(--dt-modal-color, #000);\n        max-inline-size: min(90vw, 100%);\n        max-block-size: min(80vh, 100%);\n        max-block-size: min(80dvb, 100%);\n        margin: auto;\n        height: fit-content;\n        padding: var(--dt-modal-padding, 1em);\n        position: fixed;\n        inset: 0;\n        border-radius: 1em;\n        border: none;\n        box-shadow: var(--shadow-6);\n        z-index: 1000;\n        transition: opacity 0.1s ease-in-out;\n      }\n\n      dialog:not([open]) {\n        pointer-events: none;\n        opacity: 0;\n      }\n\n      dialog::backdrop {\n        background: var(--dt-modal-backdrop-color, rgba(0, 0, 0, 0.25));\n        animation: var(--dt-modal-animation, fade-in 0.75s);\n      }\n\n      @keyframes fade-in {\n        from {\n          opacity: 0;\n        }\n        to {\n          opacity: 1;\n        }\n      }\n\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        line-height: 1.4;\n        text-rendering: optimizeLegibility;\n        color: inherit;\n        font-style: normal;\n        font-weight: 300;\n        margin: 0;\n      }\n\n      form {\n        display: grid;\n        height: fit-content;\n        grid-template-columns: 1fr;\n        grid-template-rows: 100px auto 100px;\n        grid-template-areas:\n          'header'\n          'main'\n          'footer';\n        position: relative;\n      }\n\n      form.no-header {\n        grid-template-rows: auto auto;\n        grid-template-areas:\n          'main'\n          'footer';\n      }\n\n      header {\n        grid-area: header;\n        display: flex;\n        justify-content: space-between;\n      }\n\n      .button {\n        color: var(--dt-modal-button-color, #fff);\n        background: var(--dt-modal-button-background, #000);\n        font-size: 1rem;\n        border: 0.1em solid var(--dt-modal-button-background, #000);\n        border-radius: 0.25em;\n        padding: 0.25rem 0.5rem;\n        cursor: pointer;\n        text-decoration: none;\n      }\n      .button.opener {\n        color: var(--dt-modal-button-opener-color,var(--dt-modal-button-color, #fff) );\n        background: var(--dt-modal-button-opener-background, var(--dt-modal-button-background, #000) );\n        border: 0.1em solid var(--dt-modal-button-opener-background, #000);\n      }\n      button.toggle {\n        margin-inline-end: 0;\n        margin-inline-start: auto;\n        background: none;\n        border: none;\n        color: inherit;\n        cursor: pointer;\n        display: flex;\n        align-items: flex-start;\n      }\n\n      article {\n        grid-area: main;\n        overflow: auto;\n      }\n\n      footer {\n        grid-area: footer;\n        display: flex;\n        justify-content: space-between;\n      }\n\n      .help-more h5 {\n        font-size: 0.75rem;\n        display: block;\n      }\n      .help-more .button {\n        font-size: 0.75rem;\n        display: block;\n      }\n    `;\n  }\n\n  static get properties() {\n    return {\n      title: { type: String },\n      context: { type: String },\n      isHelp: { type: Boolean },\n      isOpen: { type: Boolean },\n      hideHeader: { type: Boolean },\n      hideButton: { type: Boolean },\n      buttonClass: { type: Object },\n      buttonStyle: { type: Object },\n    };\n  }\n\n  constructor() {\n    super();\n    this.context = 'default';\n    this.addEventListener('open', (e) => this._openModal());\n    this.addEventListener('close', (e) => this._closeModal());\n  }\n\n  _openModal() {\n    this.isOpen = true;\n    this.shadowRoot.querySelector('dialog').showModal();\n\n    document.querySelector('body').style.overflow = \"hidden\"\n  }\n\n  _dialogHeader(svg) {\n    if (!this.hideHeader) {\n      return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      <header>\n            <h1 id=\"modal-field-title\">${this.title}</h1>\n            <button @click=\"${this._cancelModal}\" class=\"toggle\">${svg}</button>\n          </header>\n      `;\n    }\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)``;\n  }\n\n  _closeModal() {\n    this.isOpen = false;\n    this.shadowRoot.querySelector('dialog').close();\n    document.querySelector('body').style.overflow = \"initial\"\n  }\n  _cancelModal() {\n    this._triggerClose('cancel');\n  }\n  _triggerClose(action) {\n    this.dispatchEvent(new CustomEvent('close', {\n      detail: {\n        action,\n      },\n    }));\n  }\n\n  _dialogClick(e) {\n    if (e.target.tagName !== 'DIALOG') {\n      // This prevents issues with forms\n      return;\n    }\n\n    // Close the modal if the user clicks outside of the modal\n    const rect = e.target.getBoundingClientRect();\n\n    const clickedInDialog =\n      rect.top <= e.clientY &&\n      e.clientY <= rect.top + rect.height &&\n      rect.left <= e.clientX &&\n      e.clientX <= rect.left + rect.width;\n\n    if (clickedInDialog === false) {\n      this._cancelModal();\n    }\n  }\n\n  _dialogKeypress(e) {\n    if (e.key === 'Escape') {\n      this._cancelModal();\n    }\n  }\n\n  _helpMore() {\n    return this.isHelp\n      ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n          <div class=\"help-more\">\n            <h5>${(0,_lit_localize__WEBPACK_IMPORTED_MODULE_1__.msg)('Need more help?')}</h5>\n            <a\n              class=\"button small\"\n              id=\"docslink\"\n              href=\"https://disciple.tools/user-docs\"\n              target=\"_blank\"\n              >${(0,_lit_localize__WEBPACK_IMPORTED_MODULE_1__.msg)('Read the documentation')}</a\n            >\n          </div>\n        `\n      : null;\n  }\n\n  firstUpdated() {\n    if (this.isOpen) {\n      this._openModal();\n    }\n  }\n\n  _onButtonClick() {\n    this._triggerClose('button');\n  }\n\n  render() {\n    // prettier-ignore\n    const svg = (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      <svg viewPort=\"0 0 12 12\" version=\"1.1\" width='12' height='12'>\n          xmlns=\"http://www.w3.org/2000/svg\">\n        <line x1=\"1\" y1=\"11\"\n              x2=\"11\" y2=\"1\"\n              stroke=\"currentColor\"\n              stroke-width=\"2\"/>\n        <line x1=\"1\" y1=\"1\"\n              x2=\"11\" y2=\"11\"\n              stroke=\"currentColor\"\n              stroke-width=\"2\"/>\n      </svg>\n    `;\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      <dialog\n        id=\"\"\n        class=\"dt-modal\"\n        @click=${this._dialogClick}\n        @keypress=${this._dialogKeypress}\n      >\n        <form method=\"dialog\" class=${this.hideHeader ? \"no-header\" : \"\"}>\n      ${this._dialogHeader(svg)}\n          <article>\n            <slot name=\"content\"></slot>\n          </article>\n          <footer>\n            <button\n              class=\"button small\"\n              data-close=\"\"\n              aria-label=\"Close reveal\"\n              type=\"button\"\n              @click=${this._onButtonClick}\n            >\n              <slot name=\"close-button\">${(0,_lit_localize__WEBPACK_IMPORTED_MODULE_1__.msg)('Close')}</slot>\n            </button>\n            ${this._helpMore()}\n          </footer>\n        </form>\n      </dialog>\n\n      ${!this.hideButton\n      ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      <button\n        class=\"button small opener ${(0,lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_2__.classMap)(this.buttonClass || {})}\"\n        data-open=\"\"\n        aria-label=\"Open reveal\"\n        type=\"button\"\n        @click=\"${this._openModal}\"\n        style=${(0,lit_directives_style_map_js__WEBPACK_IMPORTED_MODULE_3__.styleMap)(this.buttonStyle || {})}\n      >\n        <slot name=\"openButton\">${(0,_lit_localize__WEBPACK_IMPORTED_MODULE_1__.msg)('Open Dialog')}</slot>\n      </button>\n      ` : null}\n    `;\n  }\n}\n\nwindow.customElements.define('dt-modal', DtModal);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/components/layout/dt-modal/dt-modal.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/components/layout/dt-tile/dt-tile.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/components/layout/dt-tile/dt-tile.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DtTile: () => (/* binding */ DtTile)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var _dt_base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../dt-base.js */ \"./node_modules/@disciple.tools/web-components/src/components/dt-base.js\");\n\n\n\nclass DtTile extends _dt_base_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n  static get styles() {\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)`\n      :host {\n        font-family: var(--dt-tile-font-family, var(--font-family));\n        font-size: var(--dt-tile-font-size, 14px);\n        font-weight: var(--dt-tile-font-weight, 700);\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n\n      section {\n        background-color: var(--dt-tile-background-color, #fefefe);\n        border-top: var(--dt-tile-border-top, 1px solid #cecece);\n        border-bottom: var(--dt-tile-border-bottom, 1px solid #cecece);\n        border-right: var(--dt-tile-border-right, 1px solid #cecece);\n        border-left: var(--dt-tile-border-left, 1px solid #cecece);\n        border-radius: var(--dt-tile-border-radius, 10px);\n        box-shadow: var(--dt-tile-box-shadow, 0 2px 4px rgb(0 0 0 / 25%));\n        padding: 1rem;\n        margin: var(--dt-tile-margin, 0); \n      }\n\n      h3 {\n        line-height: 1.4;\n        margin: var(--dt-tile-header-margin, 0 0 0.5rem 0);\n        text-rendering: optimizeLegibility;\n        font-family: var(--dt-tile-font-family, var(--font-family));\n        font-style: normal;\n        font-weight: var(--dt-tile-header-font-weight, 300);\n      }\n\n      .section-header {\n        color: var(--dt-tile-header-color, #3f729b);\n        font-size: 1.5rem;\n        display: flex;\n        text-transform: var(--dt-tile-header-text-transform, capitalize);\n        justify-content: var(--dt-tile-header-justify-content);\n      }\n\n      .section-body {\n        display: grid;\n        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n        column-gap: 1.4rem;\n        transition: height 1s ease 0s;\n        height: auto;\n      }\n      .section-body.collapsed {\n        height: 0 !important;\n        overflow: hidden;\n      }\n\n      button.toggle {\n        margin-inline-end: 0;\n        margin-inline-start: auto;\n        background: none;\n        border: none;\n      }\n\n      .chevron::before {\n        border-color: var(--dt-tile-header-color, var(--primary-color));\n        border-style: solid;\n        border-width: 2px 2px 0 0;\n        content: '';\n        display: inline-block;\n        height: 1em;\n        width: 1em;\n        left: 0.15em;\n        position: relative;\n        top: 0.15em;\n        transform: rotate(-45deg);\n        vertical-align: top;\n      }\n\n      .chevron.down:before {\n        top: 0;\n        transform: rotate(135deg);\n      }\n    `;\n  }\n\n  static get properties() {\n    return {\n      title: { type: String },\n      expands: { type: Boolean },\n      collapsed: { type: Boolean },\n    };\n  }\n\n  get hasHeading() {\n    return this.title || this.expands;\n  }\n\n  _toggle() {\n    // const body = this.renderRoot.querySelector('.section-body');\n    // if (!this.collapsed && body && body.clientHeight) {\n    //   body.style.height = body.clientHeight + 'px';\n    // }\n    this.collapsed = !this.collapsed;\n  }\n\n  renderHeading() {\n    if (!this.hasHeading) {\n      return lit__WEBPACK_IMPORTED_MODULE_0__.nothing\n    }\n\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n        <h3 class=\"section-header\">\n          ${this.title}\n          ${this.expands\n            ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n                <button\n                  @click=\"${this._toggle}\"\n                  class=\"toggle chevron ${this.collapsed ? 'down' : 'up'}\"\n                >\n                  &nbsp;\n                </button>\n              `\n            : null}\n        </h3>\n    `\n  }\n\n  render() {\n    return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`\n      <section>\n        ${this.renderHeading()}\n        <div class=\"section-body ${this.collapsed ? 'collapsed' : null}\">\n          <slot></slot>\n        </div>\n      </section>\n    `;\n  }\n}\n\nwindow.customElements.define('dt-tile', DtTile);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRpc2NpcGxlLnRvb2xzL3dlYi1jb21wb25lbnRzL3NyYy9jb21wb25lbnRzL2xheW91dC9kdC10aWxlL2R0LXRpbGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXlDO0FBQ0g7O0FBRS9CLHFCQUFxQixtREFBTTtBQUNsQztBQUNBLFdBQVcsd0NBQUc7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGVBQWUsY0FBYztBQUM3QixpQkFBaUIsZUFBZTtBQUNoQyxtQkFBbUIsZUFBZTtBQUNsQztBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsYUFBYSx3Q0FBTztBQUNwQjs7QUFFQSxXQUFXLHlDQUFJO0FBQ2Y7QUFDQSxZQUFZO0FBQ1osWUFBWTtBQUNaLGNBQWMseUNBQUk7QUFDbEI7QUFDQSw0QkFBNEIsYUFBYTtBQUN6QywwQ0FBMEMsK0JBQStCO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLHlDQUFJO0FBQ2Y7QUFDQSxVQUFVO0FBQ1YsbUNBQW1DLG9DQUFvQztBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kaXNjaXBsZS10b29scy1jb252ZXJzYXRpb25zLy4vbm9kZV9tb2R1bGVzL0BkaXNjaXBsZS50b29scy93ZWItY29tcG9uZW50cy9zcmMvY29tcG9uZW50cy9sYXlvdXQvZHQtdGlsZS9kdC10aWxlLmpzP2I2ZTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaHRtbCwgY3NzLCBub3RoaW5nIH0gZnJvbSAnbGl0JztcbmltcG9ydCBEdEJhc2UgZnJvbSAnLi4vLi4vZHQtYmFzZS5qcyc7XG5cbmV4cG9ydCBjbGFzcyBEdFRpbGUgZXh0ZW5kcyBEdEJhc2Uge1xuICBzdGF0aWMgZ2V0IHN0eWxlcygpIHtcbiAgICByZXR1cm4gY3NzYFxuICAgICAgOmhvc3Qge1xuICAgICAgICBmb250LWZhbWlseTogdmFyKC0tZHQtdGlsZS1mb250LWZhbWlseSwgdmFyKC0tZm9udC1mYW1pbHkpKTtcbiAgICAgICAgZm9udC1zaXplOiB2YXIoLS1kdC10aWxlLWZvbnQtc2l6ZSwgMTRweCk7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiB2YXIoLS1kdC10aWxlLWZvbnQtd2VpZ2h0LCA3MDApO1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICAgIH1cblxuICAgICAgc2VjdGlvbiB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWR0LXRpbGUtYmFja2dyb3VuZC1jb2xvciwgI2ZlZmVmZSk7XG4gICAgICAgIGJvcmRlci10b3A6IHZhcigtLWR0LXRpbGUtYm9yZGVyLXRvcCwgMXB4IHNvbGlkICNjZWNlY2UpO1xuICAgICAgICBib3JkZXItYm90dG9tOiB2YXIoLS1kdC10aWxlLWJvcmRlci1ib3R0b20sIDFweCBzb2xpZCAjY2VjZWNlKTtcbiAgICAgICAgYm9yZGVyLXJpZ2h0OiB2YXIoLS1kdC10aWxlLWJvcmRlci1yaWdodCwgMXB4IHNvbGlkICNjZWNlY2UpO1xuICAgICAgICBib3JkZXItbGVmdDogdmFyKC0tZHQtdGlsZS1ib3JkZXItbGVmdCwgMXB4IHNvbGlkICNjZWNlY2UpO1xuICAgICAgICBib3JkZXItcmFkaXVzOiB2YXIoLS1kdC10aWxlLWJvcmRlci1yYWRpdXMsIDEwcHgpO1xuICAgICAgICBib3gtc2hhZG93OiB2YXIoLS1kdC10aWxlLWJveC1zaGFkb3csIDAgMnB4IDRweCByZ2IoMCAwIDAgLyAyNSUpKTtcbiAgICAgICAgcGFkZGluZzogMXJlbTtcbiAgICAgICAgbWFyZ2luOiB2YXIoLS1kdC10aWxlLW1hcmdpbiwgMCk7IFxuICAgICAgfVxuXG4gICAgICBoMyB7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gICAgICAgIG1hcmdpbjogdmFyKC0tZHQtdGlsZS1oZWFkZXItbWFyZ2luLCAwIDAgMC41cmVtIDApO1xuICAgICAgICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5O1xuICAgICAgICBmb250LWZhbWlseTogdmFyKC0tZHQtdGlsZS1mb250LWZhbWlseSwgdmFyKC0tZm9udC1mYW1pbHkpKTtcbiAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgICAgICBmb250LXdlaWdodDogdmFyKC0tZHQtdGlsZS1oZWFkZXItZm9udC13ZWlnaHQsIDMwMCk7XG4gICAgICB9XG5cbiAgICAgIC5zZWN0aW9uLWhlYWRlciB7XG4gICAgICAgIGNvbG9yOiB2YXIoLS1kdC10aWxlLWhlYWRlci1jb2xvciwgIzNmNzI5Yik7XG4gICAgICAgIGZvbnQtc2l6ZTogMS41cmVtO1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdmFyKC0tZHQtdGlsZS1oZWFkZXItdGV4dC10cmFuc2Zvcm0sIGNhcGl0YWxpemUpO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHZhcigtLWR0LXRpbGUtaGVhZGVyLWp1c3RpZnktY29udGVudCk7XG4gICAgICB9XG5cbiAgICAgIC5zZWN0aW9uLWJvZHkge1xuICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpbGwsIG1pbm1heCgyMDBweCwgMWZyKSk7XG4gICAgICAgIGNvbHVtbi1nYXA6IDEuNHJlbTtcbiAgICAgICAgdHJhbnNpdGlvbjogaGVpZ2h0IDFzIGVhc2UgMHM7XG4gICAgICAgIGhlaWdodDogYXV0bztcbiAgICAgIH1cbiAgICAgIC5zZWN0aW9uLWJvZHkuY29sbGFwc2VkIHtcbiAgICAgICAgaGVpZ2h0OiAwICFpbXBvcnRhbnQ7XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICB9XG5cbiAgICAgIGJ1dHRvbi50b2dnbGUge1xuICAgICAgICBtYXJnaW4taW5saW5lLWVuZDogMDtcbiAgICAgICAgbWFyZ2luLWlubGluZS1zdGFydDogYXV0bztcbiAgICAgICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgfVxuXG4gICAgICAuY2hldnJvbjo6YmVmb3JlIHtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiB2YXIoLS1kdC10aWxlLWhlYWRlci1jb2xvciwgdmFyKC0tcHJpbWFyeS1jb2xvcikpO1xuICAgICAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgICAgICBib3JkZXItd2lkdGg6IDJweCAycHggMCAwO1xuICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBoZWlnaHQ6IDFlbTtcbiAgICAgICAgd2lkdGg6IDFlbTtcbiAgICAgICAgbGVmdDogMC4xNWVtO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIHRvcDogMC4xNWVtO1xuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICAgICAgfVxuXG4gICAgICAuY2hldnJvbi5kb3duOmJlZm9yZSB7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMTM1ZGVnKTtcbiAgICAgIH1cbiAgICBgO1xuICB9XG5cbiAgc3RhdGljIGdldCBwcm9wZXJ0aWVzKCkge1xuICAgIHJldHVybiB7XG4gICAgICB0aXRsZTogeyB0eXBlOiBTdHJpbmcgfSxcbiAgICAgIGV4cGFuZHM6IHsgdHlwZTogQm9vbGVhbiB9LFxuICAgICAgY29sbGFwc2VkOiB7IHR5cGU6IEJvb2xlYW4gfSxcbiAgICB9O1xuICB9XG5cbiAgZ2V0IGhhc0hlYWRpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMudGl0bGUgfHwgdGhpcy5leHBhbmRzO1xuICB9XG5cbiAgX3RvZ2dsZSgpIHtcbiAgICAvLyBjb25zdCBib2R5ID0gdGhpcy5yZW5kZXJSb290LnF1ZXJ5U2VsZWN0b3IoJy5zZWN0aW9uLWJvZHknKTtcbiAgICAvLyBpZiAoIXRoaXMuY29sbGFwc2VkICYmIGJvZHkgJiYgYm9keS5jbGllbnRIZWlnaHQpIHtcbiAgICAvLyAgIGJvZHkuc3R5bGUuaGVpZ2h0ID0gYm9keS5jbGllbnRIZWlnaHQgKyAncHgnO1xuICAgIC8vIH1cbiAgICB0aGlzLmNvbGxhcHNlZCA9ICF0aGlzLmNvbGxhcHNlZDtcbiAgfVxuXG4gIHJlbmRlckhlYWRpbmcoKSB7XG4gICAgaWYgKCF0aGlzLmhhc0hlYWRpbmcpIHtcbiAgICAgIHJldHVybiBub3RoaW5nXG4gICAgfVxuXG4gICAgcmV0dXJuIGh0bWxgXG4gICAgICAgIDxoMyBjbGFzcz1cInNlY3Rpb24taGVhZGVyXCI+XG4gICAgICAgICAgJHt0aGlzLnRpdGxlfVxuICAgICAgICAgICR7dGhpcy5leHBhbmRzXG4gICAgICAgICAgICA/IGh0bWxgXG4gICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgQGNsaWNrPVwiJHt0aGlzLl90b2dnbGV9XCJcbiAgICAgICAgICAgICAgICAgIGNsYXNzPVwidG9nZ2xlIGNoZXZyb24gJHt0aGlzLmNvbGxhcHNlZCA/ICdkb3duJyA6ICd1cCd9XCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAmbmJzcDtcbiAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgOiBudWxsfVxuICAgICAgICA8L2gzPlxuICAgIGBcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gaHRtbGBcbiAgICAgIDxzZWN0aW9uPlxuICAgICAgICAke3RoaXMucmVuZGVySGVhZGluZygpfVxuICAgICAgICA8ZGl2IGNsYXNzPVwic2VjdGlvbi1ib2R5ICR7dGhpcy5jb2xsYXBzZWQgPyAnY29sbGFwc2VkJyA6IG51bGx9XCI+XG4gICAgICAgICAgPHNsb3Q+PC9zbG90PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvc2VjdGlvbj5cbiAgICBgO1xuICB9XG59XG5cbndpbmRvdy5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ2R0LXRpbGUnLCBEdFRpbGUpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/components/layout/dt-tile/dt-tile.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/i18n/generated lazy recursive ^\\.\\/.*\\.js$":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/i18n/generated/ lazy ^\.\/.*\.js$ namespace object ***!
  \************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./am_ET.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/am_ET.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_am_ET_js"
	],
	"./ar.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/ar.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_ar_js"
	],
	"./ar_MA.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/ar_MA.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_ar_MA_js"
	],
	"./bg_BG.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/bg_BG.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_bg_BG_js"
	],
	"./bn_BD.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/bn_BD.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_bn_BD_js"
	],
	"./bs_BA.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/bs_BA.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_bs_BA_js"
	],
	"./cs.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/cs.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_cs_js"
	],
	"./de_DE.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/de_DE.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_de_DE_js"
	],
	"./el.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/el.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_el_js"
	],
	"./en_US.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/en_US.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_en_US_js"
	],
	"./es-419.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/es-419.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_es-419_js"
	],
	"./es_419.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/es_419.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_es_419_js"
	],
	"./es_ES.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/es_ES.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_es_ES_js"
	],
	"./fa_IR.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/fa_IR.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_fa_IR_js"
	],
	"./fr_FR.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/fr_FR.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_fr_FR_js"
	],
	"./hi_IN.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/hi_IN.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_hi_IN_js"
	],
	"./hr.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/hr.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_hr_js"
	],
	"./hu_HU.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/hu_HU.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_hu_HU_js"
	],
	"./id_ID.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/id_ID.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_id_ID_js"
	],
	"./it_IT.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/it_IT.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_it_IT_js"
	],
	"./ja.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/ja.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_ja_js"
	],
	"./ko_KR.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/ko_KR.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_ko_KR_js"
	],
	"./mk_MK.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/mk_MK.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_mk_MK_js"
	],
	"./mr.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/mr.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_mr_js"
	],
	"./my_MM.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/my_MM.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_my_MM_js"
	],
	"./ne_NP.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/ne_NP.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_ne_NP_js"
	],
	"./nl_NL.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/nl_NL.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_nl_NL_js"
	],
	"./pa_IN.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/pa_IN.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_pa_IN_js"
	],
	"./pl.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/pl.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_pl_js"
	],
	"./pt_BR.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/pt_BR.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_pt_BR_js"
	],
	"./ro_RO.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/ro_RO.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_ro_RO_js"
	],
	"./ru_RU.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/ru_RU.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_ru_RU_js"
	],
	"./sl_SI.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/sl_SI.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_sl_SI_js"
	],
	"./sr_BA.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/sr_BA.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_sr_BA_js"
	],
	"./sw.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/sw.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_sw_js"
	],
	"./th.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/th.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_th_js"
	],
	"./tl.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/tl.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_tl_js"
	],
	"./tr_TR.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/tr_TR.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_tr_TR_js"
	],
	"./uk.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/uk.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_uk_js"
	],
	"./vi.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/vi.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_vi_js"
	],
	"./zh_CN.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/zh_CN.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_zh_CN_js"
	],
	"./zh_TW.js": [
		"./node_modules/@disciple.tools/web-components/src/i18n/generated/zh_TW.js",
		"node_modules_disciple_tools_web-components_src_i18n_generated_zh_TW_js"
	]
};
function webpackAsyncContext(req) {
	if(!__webpack_require__.o(map, req)) {
		return Promise.resolve().then(() => {
			var e = new Error("Cannot find module '" + req + "'");
			e.code = 'MODULE_NOT_FOUND';
			throw e;
		});
	}

	var ids = map[req], id = ids[0];
	return __webpack_require__.e(ids[1]).then(() => {
		return __webpack_require__(id);
	});
}
webpackAsyncContext.keys = () => (Object.keys(map));
webpackAsyncContext.id = "./node_modules/@disciple.tools/web-components/src/i18n/generated lazy recursive ^\\.\\/.*\\.js$";
module.exports = webpackAsyncContext;

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/i18n/locale-codes.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/i18n/locale-codes.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   allLocales: () => (/* binding */ allLocales),\n/* harmony export */   sourceLocale: () => (/* binding */ sourceLocale),\n/* harmony export */   targetLocales: () => (/* binding */ targetLocales)\n/* harmony export */ });\n// Do not modify this file by hand!\n// Re-generate this file by running lit-localize.\n\n/**\n * The locale code that templates in this source code are written in.\n */\nconst sourceLocale = `en`;\n\n/**\n * The other locale codes that this application is localized into. Sorted\n * lexicographically.\n */\nconst targetLocales = [\n  `am_ET`,\n  `ar`,\n  `ar_MA`,\n  `bg_BG`,\n  `bn_BD`,\n  `bs_BA`,\n  `cs`,\n  `de_DE`,\n  `el`,\n  `en_US`,\n  `es_419`,\n  `es_ES`,\n  `fa_IR`,\n  `fr_FR`,\n  `hi_IN`,\n  `hr`,\n  `hu_HU`,\n  `id_ID`,\n  `it_IT`,\n  `ja`,\n  `ko_KR`,\n  `mk_MK`,\n  `mr`,\n  `my_MM`,\n  `ne_NP`,\n  `nl_NL`,\n  `pa_IN`,\n  `pl`,\n  `pt_BR`,\n  `ro_RO`,\n  `ru_RU`,\n  `sl_SI`,\n  `sr_BA`,\n  `sw`,\n  `th`,\n  `tl`,\n  `tr_TR`,\n  `uk`,\n  `vi`,\n  `zh_CN`,\n  `zh_TW`,\n];\n\n/**\n * All valid project locale codes. Sorted lexicographically.\n */\nconst allLocales = [\n  `am_ET`,\n  `ar`,\n  `ar_MA`,\n  `bg_BG`,\n  `bn_BD`,\n  `bs_BA`,\n  `cs`,\n  `de_DE`,\n  `el`,\n  `en`,\n  `en_US`,\n  `es_419`,\n  `es_ES`,\n  `fa_IR`,\n  `fr_FR`,\n  `hi_IN`,\n  `hr`,\n  `hu_HU`,\n  `id_ID`,\n  `it_IT`,\n  `ja`,\n  `ko_KR`,\n  `mk_MK`,\n  `mr`,\n  `my_MM`,\n  `ne_NP`,\n  `nl_NL`,\n  `pa_IN`,\n  `pl`,\n  `pt_BR`,\n  `ro_RO`,\n  `ru_RU`,\n  `sl_SI`,\n  `sr_BA`,\n  `sw`,\n  `th`,\n  `tl`,\n  `tr_TR`,\n  `uk`,\n  `vi`,\n  `zh_CN`,\n  `zh_TW`,\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRpc2NpcGxlLnRvb2xzL3dlYi1jb21wb25lbnRzL3NyYy9pMThuL2xvY2FsZS1jb2Rlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNPOztBQUVQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Rpc2NpcGxlLXRvb2xzLWNvbnZlcnNhdGlvbnMvLi9ub2RlX21vZHVsZXMvQGRpc2NpcGxlLnRvb2xzL3dlYi1jb21wb25lbnRzL3NyYy9pMThuL2xvY2FsZS1jb2Rlcy5qcz8yZTk1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIERvIG5vdCBtb2RpZnkgdGhpcyBmaWxlIGJ5IGhhbmQhXG4vLyBSZS1nZW5lcmF0ZSB0aGlzIGZpbGUgYnkgcnVubmluZyBsaXQtbG9jYWxpemUuXG5cbi8qKlxuICogVGhlIGxvY2FsZSBjb2RlIHRoYXQgdGVtcGxhdGVzIGluIHRoaXMgc291cmNlIGNvZGUgYXJlIHdyaXR0ZW4gaW4uXG4gKi9cbmV4cG9ydCBjb25zdCBzb3VyY2VMb2NhbGUgPSBgZW5gO1xuXG4vKipcbiAqIFRoZSBvdGhlciBsb2NhbGUgY29kZXMgdGhhdCB0aGlzIGFwcGxpY2F0aW9uIGlzIGxvY2FsaXplZCBpbnRvLiBTb3J0ZWRcbiAqIGxleGljb2dyYXBoaWNhbGx5LlxuICovXG5leHBvcnQgY29uc3QgdGFyZ2V0TG9jYWxlcyA9IFtcbiAgYGFtX0VUYCxcbiAgYGFyYCxcbiAgYGFyX01BYCxcbiAgYGJnX0JHYCxcbiAgYGJuX0JEYCxcbiAgYGJzX0JBYCxcbiAgYGNzYCxcbiAgYGRlX0RFYCxcbiAgYGVsYCxcbiAgYGVuX1VTYCxcbiAgYGVzXzQxOWAsXG4gIGBlc19FU2AsXG4gIGBmYV9JUmAsXG4gIGBmcl9GUmAsXG4gIGBoaV9JTmAsXG4gIGBocmAsXG4gIGBodV9IVWAsXG4gIGBpZF9JRGAsXG4gIGBpdF9JVGAsXG4gIGBqYWAsXG4gIGBrb19LUmAsXG4gIGBta19NS2AsXG4gIGBtcmAsXG4gIGBteV9NTWAsXG4gIGBuZV9OUGAsXG4gIGBubF9OTGAsXG4gIGBwYV9JTmAsXG4gIGBwbGAsXG4gIGBwdF9CUmAsXG4gIGByb19ST2AsXG4gIGBydV9SVWAsXG4gIGBzbF9TSWAsXG4gIGBzcl9CQWAsXG4gIGBzd2AsXG4gIGB0aGAsXG4gIGB0bGAsXG4gIGB0cl9UUmAsXG4gIGB1a2AsXG4gIGB2aWAsXG4gIGB6aF9DTmAsXG4gIGB6aF9UV2AsXG5dO1xuXG4vKipcbiAqIEFsbCB2YWxpZCBwcm9qZWN0IGxvY2FsZSBjb2Rlcy4gU29ydGVkIGxleGljb2dyYXBoaWNhbGx5LlxuICovXG5leHBvcnQgY29uc3QgYWxsTG9jYWxlcyA9IFtcbiAgYGFtX0VUYCxcbiAgYGFyYCxcbiAgYGFyX01BYCxcbiAgYGJnX0JHYCxcbiAgYGJuX0JEYCxcbiAgYGJzX0JBYCxcbiAgYGNzYCxcbiAgYGRlX0RFYCxcbiAgYGVsYCxcbiAgYGVuYCxcbiAgYGVuX1VTYCxcbiAgYGVzXzQxOWAsXG4gIGBlc19FU2AsXG4gIGBmYV9JUmAsXG4gIGBmcl9GUmAsXG4gIGBoaV9JTmAsXG4gIGBocmAsXG4gIGBodV9IVWAsXG4gIGBpZF9JRGAsXG4gIGBpdF9JVGAsXG4gIGBqYWAsXG4gIGBrb19LUmAsXG4gIGBta19NS2AsXG4gIGBtcmAsXG4gIGBteV9NTWAsXG4gIGBuZV9OUGAsXG4gIGBubF9OTGAsXG4gIGBwYV9JTmAsXG4gIGBwbGAsXG4gIGBwdF9CUmAsXG4gIGByb19ST2AsXG4gIGBydV9SVWAsXG4gIGBzbF9TSWAsXG4gIGBzcl9CQWAsXG4gIGBzd2AsXG4gIGB0aGAsXG4gIGB0bGAsXG4gIGB0cl9UUmAsXG4gIGB1a2AsXG4gIGB2aWAsXG4gIGB6aF9DTmAsXG4gIGB6aF9UV2AsXG5dO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/i18n/locale-codes.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/i18n/localization.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/i18n/localization.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getLocale: () => (/* binding */ getLocale),\n/* harmony export */   setLocale: () => (/* binding */ setLocale)\n/* harmony export */ });\n/* harmony import */ var _lit_localize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lit/localize */ \"./node_modules/@lit/localize/lit-localize.js\");\n/* harmony import */ var _locale_codes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./locale-codes.js */ \"./node_modules/@disciple.tools/web-components/src/i18n/locale-codes.js\");\n\n\n\nconst {getLocale, setLocale} = (0,_lit_localize__WEBPACK_IMPORTED_MODULE_0__.configureLocalization)({\n  sourceLocale: _locale_codes_js__WEBPACK_IMPORTED_MODULE_1__.sourceLocale,\n  targetLocales: _locale_codes_js__WEBPACK_IMPORTED_MODULE_1__.targetLocales,\n  loadLocale: (locale) => __webpack_require__(\"./node_modules/@disciple.tools/web-components/src/i18n/generated lazy recursive ^\\\\.\\\\/.*\\\\.js$\")(`./${locale}.js`),\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRpc2NpcGxlLnRvb2xzL3dlYi1jb21wb25lbnRzL3NyYy9pMThuL2xvY2FsaXphdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQW9EO0FBQ1U7O0FBRXZELE9BQU8sc0JBQXNCLEVBQUUsb0VBQXFCO0FBQzNELGNBQWM7QUFDZCxlQUFlO0FBQ2YsMEJBQTBCLHVIQUFPLEdBQWEsRUFBRSxPQUFPLElBQUksQ0FBQztBQUM1RCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGlzY2lwbGUtdG9vbHMtY29udmVyc2F0aW9ucy8uL25vZGVfbW9kdWxlcy9AZGlzY2lwbGUudG9vbHMvd2ViLWNvbXBvbmVudHMvc3JjL2kxOG4vbG9jYWxpemF0aW9uLmpzPzY1NWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtjb25maWd1cmVMb2NhbGl6YXRpb259IGZyb20gJ0BsaXQvbG9jYWxpemUnO1xuaW1wb3J0IHtzb3VyY2VMb2NhbGUsIHRhcmdldExvY2FsZXN9IGZyb20gJy4vbG9jYWxlLWNvZGVzLmpzJztcblxuZXhwb3J0IGNvbnN0IHtnZXRMb2NhbGUsIHNldExvY2FsZX0gPSBjb25maWd1cmVMb2NhbGl6YXRpb24oe1xuICBzb3VyY2VMb2NhbGUsXG4gIHRhcmdldExvY2FsZXMsXG4gIGxvYWRMb2NhbGU6IChsb2NhbGUpID0+IGltcG9ydChgLi9nZW5lcmF0ZWQvJHtsb2NhbGV9LmpzYCksXG59KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/i18n/localization.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/services/apiService.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/services/apiService.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ApiService)\n/* harmony export */ });\nclass ApiService {\n  /**\n   * @param nonce - WordPress nonce for authentication\n   * @param apiRoot - Root of API (default: wp-json) (i.e. the part before dt/v1/ or dt-posts/v2/)\n   */\n  constructor(nonce, apiRoot = 'wp-json') {\n    this.nonce = nonce;\n    this.apiRoot = apiRoot.endsWith(\"/\")? `${apiRoot}`: `${apiRoot} + \"/\"`;// ensure it ends with /\n    this.apiRoot = `/${apiRoot}/`.replace(/\\/\\//g, '/'); // ensure it starts/ends with /\n  }\n\n  /**\n   * Send request to server\n   * @param {string} type HTTP Method\n   * @param {string} url Either full URL to API endpoint or just the URL segment after base\n   * @param {Object} data Post data to send in body of request\n   * @param {string} base Base of URL endpoint. Defaults to \"dt/v1/\"\n   * @returns {Promise<any>}\n   */\n  async makeRequest(type, url, data, base = 'dt/v1/') {\n    // make sure base has a trailing slash if url does not start with one\n    let urlBase = base;\n    if (!urlBase.endsWith('/') && !url.startsWith('/')) {\n      urlBase += '/';\n    }\n    const fullURL = url.startsWith('http')\n      ? url\n      : `${this.apiRoot}${urlBase}${url}`;\n\n    const options = {\n      method: type,\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-WP-Nonce': this.nonce,\n      },\n    };\n\n    if (type !== 'GET') {\n      options.body = JSON.stringify(data);\n    }\n\n    const response = await fetch(fullURL, options);\n\n    const content = await response.json();\n    if (!response.ok) {\n      const error = new Error(content?.message || content.toString());\n      error.args = {\n        status: response.status,\n        statusText: response.statusText,\n        body: content,\n      }\n      throw error;\n    }\n\n    return content;\n  }\n\n  /**\n   * Send request to server for /dt-posts/v2/\n   * @param {string} type HTTP Method\n   * @param {string} url Either full URL to API endpoint or just the URL segment after base\n   * @param {Object} data Post data to send in body of request\n   * @returns {Promise<any>}\n   */\n  async makeRequestOnPosts(type, url, data = {}) {\n    return this.makeRequest(type, url, data, 'dt-posts/v2/');\n  }\n\n  // region Posts\n  /**\n   * Get Post from API\n   * @param {string} postType\n   * @param {number} postId\n   * @returns {Promise<any>}\n   */\n  async getPost(postType, postId) {\n    return this.makeRequestOnPosts('GET', `${postType}/${postId}`);\n  }\n\n  /**\n   * Create Post via API\n   * @param {string} postType\n   * @param {Object} fields\n   * @returns {Promise<any>}\n   */\n  async createPost(postType, fields) {\n    return this.makeRequestOnPosts('POST', postType, fields);\n  }\n\n  /**\n   * Update Post via API\n   * @param {string} postType\n   * @param {number} postId\n   * @param {Object} data Post data to be updated\n   * @returns {Promise<any>}\n   */\n  async updatePost(postType, postId, data) {\n    return this.makeRequestOnPosts('POST', `${postType}/${postId}`, data);\n  }\n\n  /**\n   * Delete Post via API\n   * @param {string} postType\n   * @param {number} postId\n   * @returns {Promise<any>}\n   */\n  async deletePost(postType, postId) {\n    return this.makeRequestOnPosts('DELETE', `${postType}/${postId}`);\n  }\n\n  /**\n   * Get compact list of posts for autocomplete fields\n   * @param {string} postType\n   * @param {string} query - the string to filter the list to. Or the id of the target record\n   * @returns {Promise<any>}\n   * @see https://developers.disciple.tools/theme-core/api-posts/list-posts-compact\n   */\n  async listPostsCompact(postType, query = '') {\n    const params = new URLSearchParams({\n      s: query\n    });\n    return this.makeRequestOnPosts(\n      'GET',\n      `${postType}/compact?${params}`\n    );\n  }\n\n  /**\n   * Get duplicates for a post\n   * @param {string} postType\n   * @param {number} postId\n   * @param {Object} args\n   * @returns {Promise<any>}\n   */\n  async getPostDuplicates(postType, postId, args) {\n    return this.makeRequestOnPosts(\n      'GET',\n      `${postType}/${postId}/all_duplicates`,\n      args\n    );\n  }\n\n  /**\n   * Get values for a multi_select field\n   * @param {string} postType\n   * @param {string} field\n   * @param {string} query - Search Query\n   * @returns {Promise<any>}\n   */\n  async getMultiSelectValues(postType, field, query = '') {\n    const params = new URLSearchParams({\n      s: query,\n      field,\n    });\n    return this.makeRequestOnPosts(\n      'GET',\n      `${postType}/multi-select-values?${params}`\n    );\n  }\n\n  /**\n   * Transfer contact to another site\n   * @param {number} contactId\n   * @param {string} siteId\n   * @returns {Promise<any>}\n   */\n  async transferContact(contactId, siteId) {\n    return this.makeRequestOnPosts('POST', 'contacts/transfer', {\n      contact_id: contactId,\n      site_post_id: siteId,\n    });\n  }\n\n  /**\n   * Transfer contact summary update\n   * @param {number} contactId\n   * @param {Object} update\n   * @returns {Promise<any>}\n   */\n  async transferContactSummaryUpdate(contactId, update) {\n    return this.makeRequestOnPosts(\n      'POST',\n      'contacts/transfer/summary/send-update',\n      {\n        contact_id: contactId,\n        update,\n      }\n    );\n  }\n\n  /**\n   * Request access to post\n   * @param {string} postType\n   * @param {number} postId\n   * @param {number} userId\n   * @returns {Promise<any>}\n   */\n  async requestRecordAccess(postType, postId, userId) {\n    return this.makeRequestOnPosts(\n      'POST',\n      `${postType}/${postId}/request_record_access`,\n      {\n        user_id: userId,\n      }\n    );\n  }\n  // endregion\n\n  // region Comments\n  /**\n   * Create comment on post via API\n   * @param {string} postType\n   * @param {number} postId\n   * @param {string} comment Text of comment\n   * @param {string} commentType Type of comment\n   * @returns {Promise<any>}\n   */\n  async createComment(postType, postId, comment, commentType = 'comment') {\n    return this.makeRequestOnPosts('POST', `${postType}/${postId}/comments`, {\n      comment,\n      comment_type: commentType,\n    });\n  }\n\n  /**\n   * Update post comment via API\n   * @param {string} postType\n   * @param {number} postId\n   * @param {number} commentId\n   * @param {string} commentContent\n   * @param {string} commentType\n   * @returns {Promise<any>}\n   */\n  async updateComment(\n    postType,\n    postId,\n    commentId,\n    commentContent,\n    commentType = 'comment'\n  ) {\n    return this.makeRequestOnPosts(\n      'POST',\n      `${postType}/${postId}/comments/${commentId}`,\n      {\n        comment: commentContent,\n        comment_type: commentType,\n      }\n    );\n  }\n\n  /**\n   * Delete post comment via API\n   * @param {string} postType\n   * @param {number} postId\n   * @param {number} commentId\n   * @returns {Promise<any>}\n   */\n  async deleteComment(postType, postId, commentId) {\n    return this.makeRequestOnPosts(\n      'DELETE',\n      `${postType}/${postId}/comments/${commentId}`\n    );\n  }\n\n  /**\n   * Get post comments via API\n   * @param {string} postType\n   * @param {number} postId\n   * @returns {Promise<any>}\n   */\n  async getComments(postType, postId) {\n    return this.makeRequestOnPosts('GET', `${postType}/${postId}/comments`);\n  }\n\n  /**\n   * Toggle post comment reaction\n   * @param {string} postType\n   * @param {number} postId\n   * @param {number} commentId\n   * @param {number} userId\n   * @param {string} reaction\n   * @returns {Promise<any>}\n   */\n  async toggle_comment_reaction(postType, postId, commentId, userId, reaction) {\n    return this.makeRequestOnPosts(\n      'POST',\n      `${postType}/${postId}/comments/${commentId}/react`,\n      {\n        user_id: userId,\n        reaction,\n      }\n    );\n  }\n  // endregion\n\n  // region Activity\n  /**\n   * Get all activity for a post\n   * @param {string} postType\n   * @param {number} postId\n   * @returns {Promise<any>}\n   */\n  async getPostActivity(postType, postId) {\n    return this.makeRequestOnPosts('GET', `${postType}/${postId}/activity`);\n  }\n\n  /**\n   * Get single activity for a post\n   * @param {string} postType\n   * @param {number} postId\n   * @param {number} activityId\n   * @returns {Promise<any>}\n   */\n  async getSingleActivity(postType, postId, activityId) {\n    return this.makeRequestOnPosts(\n      'GET',\n      `${postType}/${postId}/activity/${activityId}`\n    );\n  }\n\n  /**\n   * Revert post activity\n   * @param {string} postType\n   * @param {number} postId\n   * @param {number} activityId\n   * @returns {Promise<any>}\n   */\n  async revertActivity(postType, postId, activityId) {\n    return this.makeRequestOnPosts(\n      'GET',\n      `${postType}/${postId}/revert/${activityId}`\n    );\n  }\n\n  // endregion\n\n  // region Shares\n  /**\n   * Get all share for a post\n   * @param {string} postType\n   * @param {number} postId\n   * @returns {Promise<any>}\n   */\n  async getPostShares(postType, postId) {\n    return this.makeRequestOnPosts('GET', `${postType}/${postId}/shares`);\n  }\n\n  /**\n   * Share a post with a user\n   * @param {string} postType\n   * @param {number} postId\n   * @param {number} userId\n   * @returns {Promise<any>}\n   */\n  async addPostShare(postType, postId, userId) {\n    return this.makeRequestOnPosts('POST', `${postType}/${postId}/shares`, {\n      user_id: userId,\n    });\n  }\n\n  /**\n   * Un-share a post with a user\n   * @param {string} postType\n   * @param {number} postId\n   * @param {number} userId\n   * @returns {Promise<any>}\n   */\n  async removePostShare(postType, postId, userId) {\n    return this.makeRequestOnPosts('DELETE', `${postType}/${postId}/shares`, {\n      user_id: userId,\n    });\n  }\n  // endregion\n\n  // region Filters\n  /**\n   * Get Filters\n   * @returns {Promise<any>}\n   */\n  async getFilters() {\n    return this.makeRequest('GET', 'users/get_filters');\n  }\n\n  /**\n   * Save filters\n   * @param {string} postType\n   * @param {Object} filter\n   * @returns {Promise<any>}\n   */\n  async saveFilters(postType, filter) {\n    return this.makeRequest('POST', 'users/save_filters', { filter, postType });\n  }\n\n  /**\n   * Delete filter\n   * @param {string} postType\n   * @param {number} id\n   * @returns {Promise<void>}\n   */\n  async deleteFilter(postType, id) {\n    return this.makeRequest('DELETE', 'users/save_filters', { id, postType });\n  }\n  // endregion\n\n  // region Users\n  /**\n   * Search users\n   * @param {string} query\n   * @returns {Promise<any>}\n   */\n  async searchUsers(query) {\n    return this.makeRequest('GET', `users/get_users?s=${query}`);\n  }\n\n  /**\n   * Create user\n   * @param {Object} user\n   * @returns {Promise<any>}\n   */\n  async createUser(user) {\n    return this.makeRequest('POST', 'users/create', user);\n  }\n  // endregion\n\n  /**\n   * Advanced search\n   * @param {string} query\n   * @param {string} postType\n   * @param {number} offset\n   * @param {Object} filters\n   * @param {Object} filters.post\n   * @param {Object} filters.comment\n   * @param {Object} filters.meta\n   * @param {Object} filters.status\n   * @returns {Promise<any>}\n   */\n  async advanced_search(query, postType, offset, filters) {\n    return this.makeRequest(\n      'GET',\n      'advanced_search',\n      {\n        query,\n        postType,\n        offset,\n        post: filters.post,\n        comment: filters.comment,\n        meta: filters.meta,\n        status: filters.status,\n      },\n      'dt-posts/v2/posts/search/'\n    );\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/services/apiService.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/services/googleGeocodeService.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/services/googleGeocodeService.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ GoogleGeocodeService)\n/* harmony export */ });\nclass GoogleGeocodeService {\n  constructor(token, window, document) {\n    this.token = token;\n    this.window = window;\n\n    if (!window.google?.maps?.places?.AutocompleteService) {\n      let script = document.createElement('script');\n      script.src = `https://maps.googleapis.com/maps/api/js?libraries=places&key=${token}`;\n      document.body.appendChild(script);\n    }\n  }\n\n  /**\n   * Search places via Mapbox API\n   * @param query\n   * @returns {Promise<any>}\n   */\n  async getPlacePredictions(query, language = 'en') {\n    if (this.window.google) {\n      const service = new this.window.google.maps.places.AutocompleteService();\n      const { predictions } = await service.getPlacePredictions({\n        input: query,\n        language,\n      });\n\n      return predictions;\n    }\n    return null;\n  }\n\n  /**\n   * Get details for a given address\n   * @param address\n   * @param language\n   * @returns {Promise<null>}\n   */\n  async getPlaceDetails(address, language = 'en') {\n    const params = new URLSearchParams({\n      key: this.token,\n      address,\n      language,\n    });\n    const apiUrl = `https://maps.googleapis.com/maps/api/geocode/json?${params}`;\n    const response = await fetch(apiUrl, { method: 'GET' });\n\n    const data = await response.json();\n    let results = [];\n\n    // https://developers.google.com/maps/documentation/geocoding/requests-geocoding#StatusCodes\n    switch (data.status) {\n      case 'OK':\n        results = data.results;\n        break;\n      case 'ZERO_RESULTS':\n      default:\n        // general error catch\n        break;\n    }\n\n    return results && results.length ? results[0] : null;\n  }\n\n  /**\n   * Reverse geocode a lng/lat pair to get place details\n   * @param longitude\n   * @param latitude\n   * @param language\n   * @returns {Promise<Array>}\n   */\n  async reverseGeocode(longitude, latitude, language = 'en') {\n    const params = new URLSearchParams({\n      key: this.token,\n      latlng: `${latitude},${longitude}`,\n      language,\n      result_type: [\n        'point_of_interest',\n        'establishment',\n        'premise',\n        'street_address',\n        'neighborhood',\n        'sublocality',\n        'locality',\n        'colloquial_area',\n        'political',\n        'country',\n      ].join('|')\n    });\n    const apiUrl = `https://maps.googleapis.com/maps/api/geocode/json?${params}`;\n    const response = await fetch(apiUrl, { method: 'GET' });\n\n    const result = await response.json();\n    return result?.results;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRpc2NpcGxlLnRvb2xzL3dlYi1jb21wb25lbnRzL3NyYy9zZXJ2aWNlcy9nb29nbGVHZW9jb2RlU2VydmljZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWU7QUFDZjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG1GQUFtRixNQUFNO0FBQ3pGO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGNBQWM7QUFDNUI7QUFDQTtBQUNBLE9BQU87O0FBRVA7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLHdFQUF3RSxPQUFPO0FBQy9FLDJDQUEyQyxlQUFlOztBQUUxRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixTQUFTLEdBQUcsVUFBVTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCx3RUFBd0UsT0FBTztBQUMvRSwyQ0FBMkMsZUFBZTs7QUFFMUQ7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kaXNjaXBsZS10b29scy1jb252ZXJzYXRpb25zLy4vbm9kZV9tb2R1bGVzL0BkaXNjaXBsZS50b29scy93ZWItY29tcG9uZW50cy9zcmMvc2VydmljZXMvZ29vZ2xlR2VvY29kZVNlcnZpY2UuanM/MThkZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBHb29nbGVHZW9jb2RlU2VydmljZSB7XG4gIGNvbnN0cnVjdG9yKHRva2VuLCB3aW5kb3csIGRvY3VtZW50KSB7XG4gICAgdGhpcy50b2tlbiA9IHRva2VuO1xuICAgIHRoaXMud2luZG93ID0gd2luZG93O1xuXG4gICAgaWYgKCF3aW5kb3cuZ29vZ2xlPy5tYXBzPy5wbGFjZXM/LkF1dG9jb21wbGV0ZVNlcnZpY2UpIHtcbiAgICAgIGxldCBzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtcbiAgICAgIHNjcmlwdC5zcmMgPSBgaHR0cHM6Ly9tYXBzLmdvb2dsZWFwaXMuY29tL21hcHMvYXBpL2pzP2xpYnJhcmllcz1wbGFjZXMma2V5PSR7dG9rZW59YDtcbiAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoc2NyaXB0KTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogU2VhcmNoIHBsYWNlcyB2aWEgTWFwYm94IEFQSVxuICAgKiBAcGFyYW0gcXVlcnlcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIGFzeW5jIGdldFBsYWNlUHJlZGljdGlvbnMocXVlcnksIGxhbmd1YWdlID0gJ2VuJykge1xuICAgIGlmICh0aGlzLndpbmRvdy5nb29nbGUpIHtcbiAgICAgIGNvbnN0IHNlcnZpY2UgPSBuZXcgdGhpcy53aW5kb3cuZ29vZ2xlLm1hcHMucGxhY2VzLkF1dG9jb21wbGV0ZVNlcnZpY2UoKTtcbiAgICAgIGNvbnN0IHsgcHJlZGljdGlvbnMgfSA9IGF3YWl0IHNlcnZpY2UuZ2V0UGxhY2VQcmVkaWN0aW9ucyh7XG4gICAgICAgIGlucHV0OiBxdWVyeSxcbiAgICAgICAgbGFuZ3VhZ2UsXG4gICAgICB9KTtcblxuICAgICAgcmV0dXJuIHByZWRpY3Rpb25zO1xuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgZGV0YWlscyBmb3IgYSBnaXZlbiBhZGRyZXNzXG4gICAqIEBwYXJhbSBhZGRyZXNzXG4gICAqIEBwYXJhbSBsYW5ndWFnZVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxudWxsPn1cbiAgICovXG4gIGFzeW5jIGdldFBsYWNlRGV0YWlscyhhZGRyZXNzLCBsYW5ndWFnZSA9ICdlbicpIHtcbiAgICBjb25zdCBwYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKHtcbiAgICAgIGtleTogdGhpcy50b2tlbixcbiAgICAgIGFkZHJlc3MsXG4gICAgICBsYW5ndWFnZSxcbiAgICB9KTtcbiAgICBjb25zdCBhcGlVcmwgPSBgaHR0cHM6Ly9tYXBzLmdvb2dsZWFwaXMuY29tL21hcHMvYXBpL2dlb2NvZGUvanNvbj8ke3BhcmFtc31gO1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYXBpVXJsLCB7IG1ldGhvZDogJ0dFVCcgfSk7XG5cbiAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgIGxldCByZXN1bHRzID0gW107XG5cbiAgICAvLyBodHRwczovL2RldmVsb3BlcnMuZ29vZ2xlLmNvbS9tYXBzL2RvY3VtZW50YXRpb24vZ2VvY29kaW5nL3JlcXVlc3RzLWdlb2NvZGluZyNTdGF0dXNDb2Rlc1xuICAgIHN3aXRjaCAoZGF0YS5zdGF0dXMpIHtcbiAgICAgIGNhc2UgJ09LJzpcbiAgICAgICAgcmVzdWx0cyA9IGRhdGEucmVzdWx0cztcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdaRVJPX1JFU1VMVFMnOlxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgLy8gZ2VuZXJhbCBlcnJvciBjYXRjaFxuICAgICAgICBicmVhaztcbiAgICB9XG5cbiAgICByZXR1cm4gcmVzdWx0cyAmJiByZXN1bHRzLmxlbmd0aCA/IHJlc3VsdHNbMF0gOiBudWxsO1xuICB9XG5cbiAgLyoqXG4gICAqIFJldmVyc2UgZ2VvY29kZSBhIGxuZy9sYXQgcGFpciB0byBnZXQgcGxhY2UgZGV0YWlsc1xuICAgKiBAcGFyYW0gbG9uZ2l0dWRlXG4gICAqIEBwYXJhbSBsYXRpdHVkZVxuICAgKiBAcGFyYW0gbGFuZ3VhZ2VcbiAgICogQHJldHVybnMge1Byb21pc2U8QXJyYXk+fVxuICAgKi9cbiAgYXN5bmMgcmV2ZXJzZUdlb2NvZGUobG9uZ2l0dWRlLCBsYXRpdHVkZSwgbGFuZ3VhZ2UgPSAnZW4nKSB7XG4gICAgY29uc3QgcGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcyh7XG4gICAgICBrZXk6IHRoaXMudG9rZW4sXG4gICAgICBsYXRsbmc6IGAke2xhdGl0dWRlfSwke2xvbmdpdHVkZX1gLFxuICAgICAgbGFuZ3VhZ2UsXG4gICAgICByZXN1bHRfdHlwZTogW1xuICAgICAgICAncG9pbnRfb2ZfaW50ZXJlc3QnLFxuICAgICAgICAnZXN0YWJsaXNobWVudCcsXG4gICAgICAgICdwcmVtaXNlJyxcbiAgICAgICAgJ3N0cmVldF9hZGRyZXNzJyxcbiAgICAgICAgJ25laWdoYm9yaG9vZCcsXG4gICAgICAgICdzdWJsb2NhbGl0eScsXG4gICAgICAgICdsb2NhbGl0eScsXG4gICAgICAgICdjb2xsb3F1aWFsX2FyZWEnLFxuICAgICAgICAncG9saXRpY2FsJyxcbiAgICAgICAgJ2NvdW50cnknLFxuICAgICAgXS5qb2luKCd8JylcbiAgICB9KTtcbiAgICBjb25zdCBhcGlVcmwgPSBgaHR0cHM6Ly9tYXBzLmdvb2dsZWFwaXMuY29tL21hcHMvYXBpL2dlb2NvZGUvanNvbj8ke3BhcmFtc31gO1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYXBpVXJsLCB7IG1ldGhvZDogJ0dFVCcgfSk7XG5cbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgcmV0dXJuIHJlc3VsdD8ucmVzdWx0cztcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/services/googleGeocodeService.js\n");

/***/ }),

/***/ "./node_modules/@disciple.tools/web-components/src/services/mapboxService.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@disciple.tools/web-components/src/services/mapboxService.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ MapboxService)\n/* harmony export */ });\nclass MapboxService {\n  constructor(token) {\n    this.token = token;\n  }\n\n  /**\n   * Search places via Mapbox API\n   * @param query\n   * @param language\n   * @returns {Promise<Array>}\n   */\n  async searchPlaces(query, language = 'en') {\n    const params = new URLSearchParams({\n      types: ['country', 'region', 'postcode', 'district', 'place', 'locality', 'neighborhood', 'address'],\n      limit: 6,\n      access_token: this.token,\n      language,\n    });\n\n    const options = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const apiUrl = `https://api.mapbox.com/geocoding/v5/mapbox.places/${encodeURI(query)}.json?${params}`;\n    const response = await fetch(apiUrl, options);\n\n    const result = await response.json();\n    return result?.features;\n  }\n\n  /**\n   * Reverse geocode a long/lat pair to get place details\n   * @param longitude\n   * @param latitude\n   * @param language\n   * @returns {Promise<Array>}\n   */\n  async reverseGeocode(longitude, latitude, language = 'en') {\n    const params = new URLSearchParams({\n      types: ['country', 'region', 'postcode', 'district', 'place', 'locality', 'neighborhood', 'address'],\n      access_token: this.token,\n      language,\n    });\n\n    const options = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const apiUrl = `https://api.mapbox.com/geocoding/v5/mapbox.places/${encodeURI(longitude)},${encodeURI(latitude)}.json?${params}`;\n    const response = await fetch(apiUrl, options);\n\n    const result = await response.json();\n    return result?.features;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRpc2NpcGxlLnRvb2xzL3dlYi1jb21wb25lbnRzL3NyYy9zZXJ2aWNlcy9tYXBib3hTZXJ2aWNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBZTtBQUNmO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUEsd0VBQXdFLGlCQUFpQixRQUFRLE9BQU87QUFDeEc7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDs7QUFFQSx3RUFBd0UscUJBQXFCLEdBQUcsb0JBQW9CLFFBQVEsT0FBTztBQUNuSTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Rpc2NpcGxlLXRvb2xzLWNvbnZlcnNhdGlvbnMvLi9ub2RlX21vZHVsZXMvQGRpc2NpcGxlLnRvb2xzL3dlYi1jb21wb25lbnRzL3NyYy9zZXJ2aWNlcy9tYXBib3hTZXJ2aWNlLmpzPzk0MTciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWFwYm94U2VydmljZSB7XG4gIGNvbnN0cnVjdG9yKHRva2VuKSB7XG4gICAgdGhpcy50b2tlbiA9IHRva2VuO1xuICB9XG5cbiAgLyoqXG4gICAqIFNlYXJjaCBwbGFjZXMgdmlhIE1hcGJveCBBUElcbiAgICogQHBhcmFtIHF1ZXJ5XG4gICAqIEBwYXJhbSBsYW5ndWFnZVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxBcnJheT59XG4gICAqL1xuICBhc3luYyBzZWFyY2hQbGFjZXMocXVlcnksIGxhbmd1YWdlID0gJ2VuJykge1xuICAgIGNvbnN0IHBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoe1xuICAgICAgdHlwZXM6IFsnY291bnRyeScsICdyZWdpb24nLCAncG9zdGNvZGUnLCAnZGlzdHJpY3QnLCAncGxhY2UnLCAnbG9jYWxpdHknLCAnbmVpZ2hib3Job29kJywgJ2FkZHJlc3MnXSxcbiAgICAgIGxpbWl0OiA2LFxuICAgICAgYWNjZXNzX3Rva2VuOiB0aGlzLnRva2VuLFxuICAgICAgbGFuZ3VhZ2UsXG4gICAgfSk7XG5cbiAgICBjb25zdCBvcHRpb25zID0ge1xuICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgIH0sXG4gICAgfTtcblxuICAgIGNvbnN0IGFwaVVybCA9IGBodHRwczovL2FwaS5tYXBib3guY29tL2dlb2NvZGluZy92NS9tYXBib3gucGxhY2VzLyR7ZW5jb2RlVVJJKHF1ZXJ5KX0uanNvbj8ke3BhcmFtc31gO1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYXBpVXJsLCBvcHRpb25zKTtcblxuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICByZXR1cm4gcmVzdWx0Py5mZWF0dXJlcztcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXZlcnNlIGdlb2NvZGUgYSBsb25nL2xhdCBwYWlyIHRvIGdldCBwbGFjZSBkZXRhaWxzXG4gICAqIEBwYXJhbSBsb25naXR1ZGVcbiAgICogQHBhcmFtIGxhdGl0dWRlXG4gICAqIEBwYXJhbSBsYW5ndWFnZVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxBcnJheT59XG4gICAqL1xuICBhc3luYyByZXZlcnNlR2VvY29kZShsb25naXR1ZGUsIGxhdGl0dWRlLCBsYW5ndWFnZSA9ICdlbicpIHtcbiAgICBjb25zdCBwYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKHtcbiAgICAgIHR5cGVzOiBbJ2NvdW50cnknLCAncmVnaW9uJywgJ3Bvc3Rjb2RlJywgJ2Rpc3RyaWN0JywgJ3BsYWNlJywgJ2xvY2FsaXR5JywgJ25laWdoYm9yaG9vZCcsICdhZGRyZXNzJ10sXG4gICAgICBhY2Nlc3NfdG9rZW46IHRoaXMudG9rZW4sXG4gICAgICBsYW5ndWFnZSxcbiAgICB9KTtcblxuICAgIGNvbnN0IG9wdGlvbnMgPSB7XG4gICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgfSxcbiAgICB9O1xuXG4gICAgY29uc3QgYXBpVXJsID0gYGh0dHBzOi8vYXBpLm1hcGJveC5jb20vZ2VvY29kaW5nL3Y1L21hcGJveC5wbGFjZXMvJHtlbmNvZGVVUkkobG9uZ2l0dWRlKX0sJHtlbmNvZGVVUkkobGF0aXR1ZGUpfS5qc29uPyR7cGFyYW1zfWA7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChhcGlVcmwsIG9wdGlvbnMpO1xuXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgIHJldHVybiByZXN1bHQ/LmZlYXR1cmVzO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@disciple.tools/web-components/src/services/mapboxService.js\n");

/***/ }),

/***/ "./assets/js/chat/chat_message.js":
/*!****************************************!*\
  !*** ./assets/js/chat/chat_message.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   smmChatMessage: () => (/* binding */ smmChatMessage)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var _lit_localize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @lit/localize */ \"./node_modules/@lit/localize/lit-localize.js\");\n/* harmony import */ var lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lit/directives/class-map.js */ \"./node_modules/lit/directives/class-map.js\");\n/* harmony import */ var _disciple_tools_web_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @disciple.tools/web-components */ \"./node_modules/@disciple.tools/web-components/index.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n\nvar smmChatMessage = /*#__PURE__*/function (_DtBase) {\n  function smmChatMessage() {\n    _classCallCheck(this, smmChatMessage);\n    return _callSuper(this, smmChatMessage, arguments);\n  }\n  _inherits(smmChatMessage, _DtBase);\n  return _createClass(smmChatMessage, [{\n    key: \"_formatDate\",\n    value: function _formatDate(date) {\n      var dateObj = new Date(date);\n      var dateString = new Intl.DateTimeFormat('default', {\n        month: 'short',\n        day: 'numeric'\n      }).format(dateObj);\n      return dateString;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = {\n        incoming: this.incomingMessage,\n        outgoing: false,\n        'chat-message': true\n      };\n      return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <div class=\\\"\", \"\\\">\\n          <div class=\\\"chat-message__avatar\\\">\\n            \", \"\\n          </div>\\n        <div class=\\\"chat-message__body\\\">\\n          <div class=\\\"chat-message__header\\\">\\n            <div class=\\\"chat-message__name\\\">\", \"</div>\\n            <div class=\\\"chat-message__date\\\">\", \"</div>\\n          </div>\\n          <div class=\\\"chat-message__text\\\">\", \"</div>\\n        </div>\\n      </div>\\n    \"])), (0,lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_2__.classMap)(classes), this.message.avatar ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"<img src=\\\"\", \"\\\" alt=\\\"\", \"\\\" />\"])), this.message.avatar, this.message.comment_author) : (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"<dt-icon icon=\\\"user\\\" size=\\\"2em\\\"></dt-icon>\"]))), this.message.comment_author, this._formatDate(this.message.comment_date), this.message.comment_content);\n    }\n  }], [{\n    key: \"styles\",\n    get: function get() {\n      return (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n      :host {\\n        --smm-incoming-message-background: var(--gray-1, #919191);\\n        --smm-outgoing-message-background: var(--success-color, #4caf50);\\n      }\\n      .chat-message {\\n        display: flex;\\n        align-items: flex-end;\\n        margin-bottom: 1em;\\n        flex-direction: row-reverse;\\n      }\\n\\n      .chat-message__avatar {\\n        width: clamp(3em, 5vw, 5em);\\n      }\\n\\n      .chat-message__avatar img {\\n        width: 100%;\\n        border-radius: 50%;\\n      }\\n\\n      .chat-message__body {\\n        max-width: clamp(10em, 52vw, 60%);\\n        padding: 1em;\\n        border-radius: 1em;\\n        /* @todo make this right to left compatible */\\n        border-bottom-right-radius: 0;\\n        background: var(--smm-outgoing-message-background);\\n      }\\n\\n      .chat-message__header {\\n        display: flex;\\n        flex-direction: row;\\n        justify-content: space-between;\\n      }\\n\\n      .chat-message__name {\\n        font-weight: bold;\\n        font-size: 1.1em;\\n      }\\n      .chat-message.incoming {\\n        flex-direction: row;\\n      }\\n\\n      .chat-message.incoming .chat-message__body {\\n        background: var(--smm-incoming-message-background);\\n        /* @todo make this right to left compatible */\\n        border-bottom-right-radius: 1em;\\n        border-bottom-left-radius: 0;\\n      }\\n      \"])));\n    }\n  }, {\n    key: \"properties\",\n    get: function get() {\n      return {\n        message: {\n          type: Object\n        },\n        incomingMessage: {\n          type: Boolean\n        }\n      };\n    }\n  }]);\n}(_disciple_tools_web_components__WEBPACK_IMPORTED_MODULE_3__.DtBase);\nwindow.customElements.define(\"smm-chat-message\", smmChatMessage);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hc3NldHMvanMvY2hhdC9jaGF0X21lc3NhZ2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBZ0M7QUFDSTtBQUNtQjtBQUNDO0FBR2pELElBQU1LLGNBQWMsMEJBQUFDLE9BQUE7RUFBQSxTQUFBRCxlQUFBO0lBQUFFLGVBQUEsT0FBQUYsY0FBQTtJQUFBLE9BQUFHLFVBQUEsT0FBQUgsY0FBQSxFQUFBSSxTQUFBO0VBQUE7RUFBQUMsU0FBQSxDQUFBTCxjQUFBLEVBQUFDLE9BQUE7RUFBQSxPQUFBSyxZQUFBLENBQUFOLGNBQUE7SUFBQU8sR0FBQTtJQUFBQyxLQUFBLEVBOER6QixTQUFBQyxZQUFZQyxJQUFJLEVBQUU7TUFDaEIsSUFBSUMsT0FBTyxHQUFHLElBQUlDLElBQUksQ0FBRUYsSUFBSyxDQUFDO01BQzlCLElBQUlHLFVBQVUsR0FBRyxJQUFJQyxJQUFJLENBQUNDLGNBQWMsQ0FBQyxTQUFTLEVBQUU7UUFBRUMsS0FBSyxFQUFFLE9BQU87UUFBRUMsR0FBRyxFQUFFO01BQVUsQ0FBQyxDQUFDLENBQUNDLE1BQU0sQ0FBQ1AsT0FBTyxDQUFDO01BRXZHLE9BQU9FLFVBQVU7SUFDbkI7RUFBQztJQUFBTixHQUFBO0lBQUFDLEtBQUEsRUFFRCxTQUFBVyxPQUFBLEVBQVM7TUFDUCxJQUFNQyxPQUFPLEdBQUc7UUFBQ0MsUUFBUSxFQUFFLElBQUksQ0FBQ0MsZUFBZTtRQUFFQyxRQUFRLEVBQUUsS0FBSztRQUFFLGNBQWMsRUFBRTtNQUFJLENBQUM7TUFDdkYsT0FBTzVCLHlDQUFJLENBQUE2QixlQUFBLEtBQUFBLGVBQUEsR0FBQUMsc0JBQUEsdWJBQ0szQixxRUFBUSxDQUFDc0IsT0FBTyxDQUFDLEVBRXZCLElBQUksQ0FBQ00sT0FBTyxDQUFDQyxNQUFNLEdBQUdoQyx5Q0FBSSxDQUFBaUMsZ0JBQUEsS0FBQUEsZ0JBQUEsR0FBQUgsc0JBQUEsMENBQWEsSUFBSSxDQUFDQyxPQUFPLENBQUNDLE1BQU0sRUFBVSxJQUFJLENBQUNELE9BQU8sQ0FBQ0csY0FBYyxJQUFTbEMseUNBQUksQ0FBQW1DLGdCQUFBLEtBQUFBLGdCQUFBLEdBQUFMLHNCQUFBLHNEQUE0QyxFQUl4SCxJQUFJLENBQUNDLE9BQU8sQ0FBQ0csY0FBYyxFQUMzQixJQUFJLENBQUNwQixXQUFXLENBQUUsSUFBSSxDQUFDaUIsT0FBTyxDQUFDSyxZQUFhLENBQUMsRUFFL0MsSUFBSSxDQUFDTCxPQUFPLENBQUNNLGVBQWU7SUFJdEU7RUFBQztJQUFBekIsR0FBQTtJQUFBMEIsR0FBQSxFQXBGRCxTQUFBQSxJQUFBLEVBQW9CO01BQ2xCLE9BQU9yQyx3Q0FBRyxDQUFBc0MsZ0JBQUEsS0FBQUEsZ0JBQUEsR0FBQVQsc0JBQUE7SUFtRFo7RUFBQztJQUFBbEIsR0FBQTtJQUFBMEIsR0FBQSxFQUVELFNBQUFBLElBQUEsRUFBd0I7TUFDdEIsT0FBTztRQUNMUCxPQUFPLEVBQUU7VUFBRVMsSUFBSSxFQUFFQztRQUFPLENBQUM7UUFDekJkLGVBQWUsRUFBRTtVQUFFYSxJQUFJLEVBQUVFO1FBQVE7TUFDbkMsQ0FBQztJQUNIO0VBQUM7QUFBQSxFQTVEaUN0QyxrRUFBTTtBQXdGMUN1QyxNQUFNLENBQUNDLGNBQWMsQ0FBQ0MsTUFBTSxDQUFDLGtCQUFrQixFQUFFeEMsY0FBYyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGlzY2lwbGUtdG9vbHMtY29udmVyc2F0aW9ucy8uL2Fzc2V0cy9qcy9jaGF0L2NoYXRfbWVzc2FnZS5qcz82YWI2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGh0bWwsIGNzcyB9IGZyb20gJ2xpdCc7XG5pbXBvcnQgeyBtc2cgfSBmcm9tICdAbGl0L2xvY2FsaXplJztcbmltcG9ydCB7IGNsYXNzTWFwIH0gZnJvbSAnbGl0L2RpcmVjdGl2ZXMvY2xhc3MtbWFwLmpzJztcbmltcG9ydCB7IER0QmFzZSB9IGZyb20gXCJAZGlzY2lwbGUudG9vbHMvd2ViLWNvbXBvbmVudHNcIjtcblxuXG5leHBvcnQgY2xhc3Mgc21tQ2hhdE1lc3NhZ2UgZXh0ZW5kcyBEdEJhc2Uge1xuICBzdGF0aWMgZ2V0IHN0eWxlcygpIHtcbiAgICByZXR1cm4gY3NzYFxuICAgICAgOmhvc3Qge1xuICAgICAgICAtLXNtbS1pbmNvbWluZy1tZXNzYWdlLWJhY2tncm91bmQ6IHZhcigtLWdyYXktMSwgIzkxOTE5MSk7XG4gICAgICAgIC0tc21tLW91dGdvaW5nLW1lc3NhZ2UtYmFja2dyb3VuZDogdmFyKC0tc3VjY2Vzcy1jb2xvciwgIzRjYWY1MCk7XG4gICAgICB9XG4gICAgICAuY2hhdC1tZXNzYWdlIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAxZW07XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3ctcmV2ZXJzZTtcbiAgICAgIH1cblxuICAgICAgLmNoYXQtbWVzc2FnZV9fYXZhdGFyIHtcbiAgICAgICAgd2lkdGg6IGNsYW1wKDNlbSwgNXZ3LCA1ZW0pO1xuICAgICAgfVxuXG4gICAgICAuY2hhdC1tZXNzYWdlX19hdmF0YXIgaW1nIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgIH1cblxuICAgICAgLmNoYXQtbWVzc2FnZV9fYm9keSB7XG4gICAgICAgIG1heC13aWR0aDogY2xhbXAoMTBlbSwgNTJ2dywgNjAlKTtcbiAgICAgICAgcGFkZGluZzogMWVtO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAxZW07XG4gICAgICAgIC8qIEB0b2RvIG1ha2UgdGhpcyByaWdodCB0byBsZWZ0IGNvbXBhdGlibGUgKi9cbiAgICAgICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDA7XG4gICAgICAgIGJhY2tncm91bmQ6IHZhcigtLXNtbS1vdXRnb2luZy1tZXNzYWdlLWJhY2tncm91bmQpO1xuICAgICAgfVxuXG4gICAgICAuY2hhdC1tZXNzYWdlX19oZWFkZXIge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICB9XG5cbiAgICAgIC5jaGF0LW1lc3NhZ2VfX25hbWUge1xuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgZm9udC1zaXplOiAxLjFlbTtcbiAgICAgIH1cbiAgICAgIC5jaGF0LW1lc3NhZ2UuaW5jb21pbmcge1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgfVxuXG4gICAgICAuY2hhdC1tZXNzYWdlLmluY29taW5nIC5jaGF0LW1lc3NhZ2VfX2JvZHkge1xuICAgICAgICBiYWNrZ3JvdW5kOiB2YXIoLS1zbW0taW5jb21pbmctbWVzc2FnZS1iYWNrZ3JvdW5kKTtcbiAgICAgICAgLyogQHRvZG8gbWFrZSB0aGlzIHJpZ2h0IHRvIGxlZnQgY29tcGF0aWJsZSAqL1xuICAgICAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMWVtO1xuICAgICAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAwO1xuICAgICAgfVxuICAgICAgYFxuICB9XG5cbiAgc3RhdGljIGdldCBwcm9wZXJ0aWVzKCkge1xuICAgIHJldHVybiB7XG4gICAgICBtZXNzYWdlOiB7IHR5cGU6IE9iamVjdCB9LFxuICAgICAgaW5jb21pbmdNZXNzYWdlOiB7IHR5cGU6IEJvb2xlYW4gfSxcbiAgICB9O1xuICB9XG5cbiAgX2Zvcm1hdERhdGUoZGF0ZSkge1xuICAgIGxldCBkYXRlT2JqID0gbmV3IERhdGUoIGRhdGUgKTtcbiAgICBsZXQgZGF0ZVN0cmluZyA9IG5ldyBJbnRsLkRhdGVUaW1lRm9ybWF0KCdkZWZhdWx0JywgeyBtb250aDogJ3Nob3J0JywgZGF5OiAnbnVtZXJpYycgfSkuZm9ybWF0KGRhdGVPYmopO1xuXG4gICAgcmV0dXJuIGRhdGVTdHJpbmc7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgY2xhc3NlcyA9IHtpbmNvbWluZzogdGhpcy5pbmNvbWluZ01lc3NhZ2UsIG91dGdvaW5nOiBmYWxzZSwgJ2NoYXQtbWVzc2FnZSc6IHRydWV9O1xuICAgIHJldHVybiBodG1sYFxuICAgICAgPGRpdiBjbGFzcz1cIiR7Y2xhc3NNYXAoY2xhc3Nlcyl9XCI+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImNoYXQtbWVzc2FnZV9fYXZhdGFyXCI+XG4gICAgICAgICAgICAke3RoaXMubWVzc2FnZS5hdmF0YXIgPyBodG1sYDxpbWcgc3JjPVwiJHt0aGlzLm1lc3NhZ2UuYXZhdGFyfVwiIGFsdD1cIiR7dGhpcy5tZXNzYWdlLmNvbW1lbnRfYXV0aG9yfVwiIC8+YCA6IGh0bWxgPGR0LWljb24gaWNvbj1cInVzZXJcIiBzaXplPVwiMmVtXCI+PC9kdC1pY29uPmB9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjaGF0LW1lc3NhZ2VfX2JvZHlcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2hhdC1tZXNzYWdlX19oZWFkZXJcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjaGF0LW1lc3NhZ2VfX25hbWVcIj4ke3RoaXMubWVzc2FnZS5jb21tZW50X2F1dGhvcn08L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjaGF0LW1lc3NhZ2VfX2RhdGVcIj4ke3RoaXMuX2Zvcm1hdERhdGUoIHRoaXMubWVzc2FnZS5jb21tZW50X2RhdGUgKX08L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2hhdC1tZXNzYWdlX190ZXh0XCI+JHt0aGlzLm1lc3NhZ2UuY29tbWVudF9jb250ZW50fTwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIGA7XG4gIH1cbn1cblxud2luZG93LmN1c3RvbUVsZW1lbnRzLmRlZmluZShcInNtbS1jaGF0LW1lc3NhZ2VcIiwgc21tQ2hhdE1lc3NhZ2UpO1xuIl0sIm5hbWVzIjpbImh0bWwiLCJjc3MiLCJtc2ciLCJjbGFzc01hcCIsIkR0QmFzZSIsInNtbUNoYXRNZXNzYWdlIiwiX0R0QmFzZSIsIl9jbGFzc0NhbGxDaGVjayIsIl9jYWxsU3VwZXIiLCJhcmd1bWVudHMiLCJfaW5oZXJpdHMiLCJfY3JlYXRlQ2xhc3MiLCJrZXkiLCJ2YWx1ZSIsIl9mb3JtYXREYXRlIiwiZGF0ZSIsImRhdGVPYmoiLCJEYXRlIiwiZGF0ZVN0cmluZyIsIkludGwiLCJEYXRlVGltZUZvcm1hdCIsIm1vbnRoIiwiZGF5IiwiZm9ybWF0IiwicmVuZGVyIiwiY2xhc3NlcyIsImluY29taW5nIiwiaW5jb21pbmdNZXNzYWdlIiwib3V0Z29pbmciLCJfdGVtcGxhdGVPYmplY3QiLCJfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsIiwibWVzc2FnZSIsImF2YXRhciIsIl90ZW1wbGF0ZU9iamVjdDIiLCJjb21tZW50X2F1dGhvciIsIl90ZW1wbGF0ZU9iamVjdDMiLCJjb21tZW50X2RhdGUiLCJjb21tZW50X2NvbnRlbnQiLCJnZXQiLCJfdGVtcGxhdGVPYmplY3Q0IiwidHlwZSIsIk9iamVjdCIsIkJvb2xlYW4iLCJ3aW5kb3ciLCJjdXN0b21FbGVtZW50cyIsImRlZmluZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./assets/js/chat/chat_message.js\n");

/***/ }),

/***/ "./assets/js/chat/chat_window.js":
/*!***************************************!*\
  !*** ./assets/js/chat/chat_window.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   smmChatWindow: () => (/* binding */ smmChatWindow)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var _lit_localize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @lit/localize */ \"./node_modules/@lit/localize/lit-localize.js\");\n/* harmony import */ var lit_directives_style_map_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lit/directives/style-map.js */ \"./node_modules/lit/directives/style-map.js\");\n/* harmony import */ var _disciple_tools_web_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @disciple.tools/web-components */ \"./node_modules/@disciple.tools/web-components/index.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\nvar smmChatWindow = /*#__PURE__*/function (_DtBase) {\n  function smmChatWindow() {\n    _classCallCheck(this, smmChatWindow);\n    return _callSuper(this, smmChatWindow); // this.conversation_messages = window.commentsSettings.comments.comments;\n  }\n  _inherits(smmChatWindow, _DtBase);\n  return _createClass(smmChatWindow, [{\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      var _this = this;\n      _get(_getPrototypeOf(smmChatWindow.prototype), \"connectedCallback\", this).call(this);\n      document.addEventListener('commentsRetrieved', function (e) {\n        _this.getPostComments();\n      });\n    }\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {\n      _get(_getPrototypeOf(smmChatWindow.prototype), \"disconnectedCallback\", this).call(this);\n      document.removeEventListener('commentsRetrieved', this.getPostComments());\n    }\n  }, {\n    key: \"ChatButtonClick\",\n    value: function ChatButtonClick(e) {\n      var _this2 = this;\n      var messageText = this.shadowRoot.querySelector('textarea').value;\n      var payload = {\n        comment: messageText,\n        comment_type: \"whatsapp\"\n      };\n      API.post_comment('conversations', this.convoid, messageText, \"whatsapp\").then(function (response) {\n        _this2.getPostComments();\n        _this2.shadowRoot.querySelector('textarea').value = '';\n      });\n    }\n  }, {\n    key: \"getPostComments\",\n    value: function getPostComments() {\n      var _this3 = this;\n      API.get_comments('conversations', this.convoid).then(function (response) {\n        _this3.conversation_messages = response;\n        console.log(_this3.conversation_messages);\n      });\n    }\n  }, {\n    key: \"claimConvo\",\n    value: function claimConvo() {\n      var _this4 = this;\n      var payload = {\n        assigned_to: this.userid\n      };\n      API.update_post('conversations', this.convoid, payload).then(function (response) {\n        _this4.conversation = response;\n        _this4.claimed = true;\n      });\n    }\n  }, {\n    key: \"unclaimConvo\",\n    value: function unclaimConvo() {\n      var _this5 = this;\n      var payload = {\n        claimed: false,\n        assigned_to: 0\n      };\n      API.update_post('conversations', this.convoid, payload).then(function (response) {\n        _this5.conversation = response;\n        _this5.claimed = false;\n      });\n    }\n  }, {\n    key: \"_moreActions\",\n    value: function _moreActions() {\n      if (this.moreActionOpen) {\n        this.moreActionOpen = false;\n      } else {\n        this.moreActionOpen = true;\n      }\n    }\n  }, {\n    key: \"_chatWindowFooterRender\",\n    value: function _chatWindowFooterRender() {\n      if (this.conversation.assigned_to) {\n        if (this.userid != this.conversation.assigned_to.id) {\n          return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n            <span>This Conversation is claimed by another user</span>\\n            <button @click=\", \">Claim this Conversation</button>\"])), this.claimConvo);\n        } else {\n          return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"<textarea\\n            id=\\\"smm-chat-input\\\"\\n            name=\\\"smm-chat-input\\\"\\n            aria-label=\\\"Chat Response Input\\\"\\n            type=\\\"text\\\"\\n            ?disabled=\", \"\\n            class=\\\"text-input\\\"\\n            @change=\", \"\\n            .value=\\\"\", \"\\\"\\n          ></textarea>\\n          <button class=\\\"send-button\\\" @click=\", \">Send</button>\"])), this.disabled, this.onChange, this.value || '', this.ChatButtonClick);\n        }\n      } else {\n        return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"<button @click=\", \">Claim this Conversation</button>\"])), this.claimConvo);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var messagesTemplates = [];\n      var _iterator = _createForOfIteratorHelper(this.conversation_messages.comments),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var i = _step.value;\n          messagesTemplates.push((0,lit__WEBPACK_IMPORTED_MODULE_0__.html)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"<smm-chat-message .message=\", \" \", \"></smm-chat-message>\"])), i, i.comment_author === this.conversation.name ? 'incomingMessage' : ''));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      messagesTemplates.reverse();\n      var moreActionsStyles = {\n        display: this.moreActionOpen ? 'grid' : 'none'\n      };\n      var name = this.conversation.first_name || this.conversation.last_name ? \"\".concat(this.conversation.first_name, \" \").concat(this.conversation.last_name) : this.conversation.name;\n      return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n      <div class=\\\"chat-window\\\">\\n        <div class=\\\"chat-window__header\\\">\\n          <img src=\\\"https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50\\\" height=\\\"250px\\\" width=\\\"250px\\\" alt=\\\"John Smith\\\" class=\\\"avatar\\\"/>\\n          <h1 class=\\\"name\\\">\", \"</h1>\\n          <span class=\\\"channel\\\">\", \"</span>\\n          <!-- <span class=\\\"age\\\">25 years old</span> -->\\n\\n          <div class=\\\"action-buttons container\\\">\\n              <button>\\n                <dt-icon class=\\\"delete_icon\\\" icon=\\\"material-symbols:delete-outline\\\"></dt-icon>\\n              </button>\\n              <button>\\n                <dt-icon class=\\\"check_icon\\\" icon=\\\"material-symbols:check-small\\\"></dt-icon>\\n              </button>\\n              <button>\\n                <dt-icon class=\\\"more_icon\\\" icon=\\\"material-symbols:more-vert\\\" @click=\", \"></dt-icon>\\n              </button>\\n              <ul id=\\\"moreActions\\\"  style=\", \">\\n                <li><button @click=\", \">Release This Conversation</button></li>\\n                <li><button @click=\", \">Claim This Conversation for yourself</button></li>\\n              </ul>\\n          </div>\\n\\n        </div>\\n        <div class=\\\"conversation\\\">\\n          \", \"\\n          <div id=\\\"anchor\\\"></div>\\n        </div>\\n        <div class=\\\"chat-window__footer\\\">\\n          \", \"\\n        </div>\\n      </div>\\n    \"])), name, this.conversation.type.label, this._moreActions, (0,lit_directives_style_map_js__WEBPACK_IMPORTED_MODULE_2__.styleMap)(moreActionsStyles), this.unclaimConvo, this.claimConvo, messagesTemplates, this._chatWindowFooterRender());\n    }\n  }], [{\n    key: \"styles\",\n    get: function get() {\n      return (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n      :host {\\n      }\\n      .chat-window {\\n        display: flex;\\n        flex-direction: column;\\n        height: 75dvh;\\n        width: 100%;\\n      }\\n      .chat-window__header {\\n        flex: 1;\\n        display: grid;\\n        grid-template-columns: 1fr 2fr 1fr;\\n        gap: 0em 1em;\\n        border-bottom: 1px solid var(--border-color);\\n        line-height: 1em;\\n        padding: 1em 0.25em;\\n      }\\n      .chat-window__header .avatar {\\n        width: clamp(3em, 100%, 5em);\\n        height: clamp(3em, 100%, 5em);\\n        aspect-ratio: 1 / 1;\\n        border-radius: 50%;\\n        grid-area: 1 / 1 / span 3 / auto;\\n        justify-self: flex-start;\\n        place-self: center;\\n      }\\n      .chat-window__header h1 {\\n        margin: 0;\\n        line-height: 1;\\n        font-size: clamp(1.5em, 2vw, 2em);\\n        color: var(--primary-color);\\n        grid-row: 1;\\n        grid-column: 2;\\n      }\\n\\n      .chat-window__header .channel {\\n        grid-column: 2;\\n        grid-row: 2;\\n      }\\n\\n      .chat-window__header .age {\\n        grid-column: 2;\\n        grid-row: 3;\\n      }\\n\\n      .chat-window__header .action-buttons.container {\\n        grid-column: 3;\\n        grid-row: span 3;\\n        display: flex;\\n        gap: 5px;\\n        padding: 0.25em;\\n        place-self: center;\\n      }\\n\\n      #moreActions {\\n        display: none;\\n        margin: 0;\\n        padding: 0;\\n        list-style: none;\\n        transform: translate(0, 2.5em);\\n        width: 7.5em;\\n        position: absolute;\\n        background: var(--gray-1);\\n      }\\n\\n      #moreAction.open {\\n        display: grid;\\n      }\\n\\n      #moreActions li {\\n        display: block;\\n        width: 100%;\\n        height: 3em;\\n      }\\n\\n      #moreActions li button {\\n        width: 100%;\\n        height: 100%;\\n        display: block;\\n      }\\n\\n      .chat-window__header .action-buttons.container button {\\n        width: 2.5em;\\n        height: 2.5em;\\n        padding: 0;\\n      }\\n\\n      .chat-window__header .action-buttons.container button dt-icon {\\n        font-size: clamp(1.5em, 2vw, 2em);\\n      }\\n\\n      .conversation {\\n        flex: 10;\\n        padding: 1em 0;\\n        height: 50dvh;\\n        overflow-y: scroll;\\n        overscroll-behavior-y: contain;\\n        scroll-snap-type: y proximity;\\n      }\\n\\n      .conversation * {\\n        overflow-anchor: none;\\n      }\\n\\n      #anchor {\\n        scroll-snap-align: end;\\n        height: 1px;\\n      }\\n\\n      .chat-window__footer {\\n        flex: 1 2 0px;\\n        border-top: 1px solid var(--border-color);\\n        display: grid;\\n        grid-template-columns: 10fr 1fr;\\n        gap: 10px;\\n        padding: 1em 0.5em 1em 1em;\\n        place-content: center space-between;\\n        place-items: stretch;\\n        align-items: center;\\n      }\\n\\n      .chat-window__footer textarea {\\n        grid-row-start: 1;\\n        grid-column-start: 1;\\n        border-radius: 0.25em;\\n        border: 1px solid var(--border-color);\\n        resize: none;\\n        padding: 1em;\\n      }\\n\\n      .chat-window__footer .send-button {\\n        background: var(--primary-color);\\n        border: none;\\n        color: var(--text-color-inverse);\\n        height: 3.5em;\\n        width: 3.5em;\\n        border-radius: 50%;\\n        grid-row-start: 1;\\n        grid-column-start: 2;\\n        justify-self: center;\\n      }\\n      \"])));\n    }\n  }, {\n    key: \"properties\",\n    get: function get() {\n      return _objectSpread(_objectSpread({}, _get(_getPrototypeOf(smmChatWindow), \"properties\", this)), {}, {\n        message: {\n          type: Object\n        },\n        open: {\n          type: Boolean\n        },\n        claimed: {\n          type: Boolean\n        },\n        convoid: {\n          type: Number\n        },\n        userid: {\n          type: Number\n        },\n        conversation: {\n          type: Object\n        },\n        conversation_messages: {\n          type: Array\n        },\n        moreActionOpen: {\n          type: Boolean\n        }\n      });\n    }\n  }]);\n}(_disciple_tools_web_components__WEBPACK_IMPORTED_MODULE_3__.DtBase);\nwindow.customElements.define(\"smm-chat-window\", smmChatWindow);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./assets/js/chat/chat_window.js\n");

/***/ }),

/***/ "./assets/js/conversation_scripts.js":
/*!*******************************************!*\
  !*** ./assets/js/conversation_scripts.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _disciple_tools_web_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @disciple.tools/web-components */ \"./node_modules/@disciple.tools/web-components/index.js\");\n/* harmony import */ var _convo_list_convo_list_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./convo_list/convo_list.js */ \"./assets/js/convo_list/convo_list.js\");\n/* harmony import */ var _convo_list_convo_list_item_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./convo_list/convo_list_item.js */ \"./assets/js/convo_list/convo_list_item.js\");\n/* harmony import */ var _convo_list_convo_modal_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./convo_list/convo_modal.js */ \"./assets/js/convo_list/convo_modal.js\");\n/* harmony import */ var _convo_list_convo_list_search_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./convo_list/convo_list_search.js */ \"./assets/js/convo_list/convo_list_search.js\");\n/* harmony import */ var _chat_chat_window_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./chat/chat_window.js */ \"./assets/js/chat/chat_window.js\");\n/* harmony import */ var _chat_chat_message_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./chat/chat_message.js */ \"./assets/js/chat/chat_message.js\");\n\n// import \"./dt-button/dt-button.js\";\n\n\n\n\n\n\n// import \"./dt-icon.js\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hc3NldHMvanMvY29udmVyc2F0aW9uX3NjcmlwdHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBd0M7QUFDeEM7QUFDb0M7QUFDSztBQUNKO0FBQ007QUFDWjtBQUNDO0FBQ2hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGlzY2lwbGUtdG9vbHMtY29udmVyc2F0aW9ucy8uL2Fzc2V0cy9qcy9jb252ZXJzYXRpb25fc2NyaXB0cy5qcz80M2VjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBcIkBkaXNjaXBsZS50b29scy93ZWItY29tcG9uZW50c1wiO1xuLy8gaW1wb3J0IFwiLi9kdC1idXR0b24vZHQtYnV0dG9uLmpzXCI7XG5pbXBvcnQgXCIuL2NvbnZvX2xpc3QvY29udm9fbGlzdC5qc1wiO1xuaW1wb3J0IFwiLi9jb252b19saXN0L2NvbnZvX2xpc3RfaXRlbS5qc1wiO1xuaW1wb3J0IFwiLi9jb252b19saXN0L2NvbnZvX21vZGFsLmpzXCI7XG5pbXBvcnQgXCIuL2NvbnZvX2xpc3QvY29udm9fbGlzdF9zZWFyY2guanNcIjtcbmltcG9ydCBcIi4vY2hhdC9jaGF0X3dpbmRvdy5qc1wiO1xuaW1wb3J0IFwiLi9jaGF0L2NoYXRfbWVzc2FnZS5qc1wiO1xuLy8gaW1wb3J0IFwiLi9kdC1pY29uLmpzXCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./assets/js/conversation_scripts.js\n");

/***/ }),

/***/ "./assets/js/convo_list/convo_list.js":
/*!********************************************!*\
  !*** ./assets/js/convo_list/convo_list.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   conversationList: () => (/* binding */ conversationList)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var lit_directives_repeat_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit/directives/repeat.js */ \"./node_modules/lit/directives/repeat.js\");\n/* harmony import */ var lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lit/directives/class-map.js */ \"./node_modules/lit/directives/class-map.js\");\n/* harmony import */ var lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lit/directives/if-defined.js */ \"./node_modules/lit/directives/if-defined.js\");\n/* harmony import */ var _lit_localize__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @lit/localize */ \"./node_modules/@lit/localize/lit-localize.js\");\n/* harmony import */ var _disciple_tools_web_components__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @disciple.tools/web-components */ \"./node_modules/@disciple.tools/web-components/index.js\");\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12;\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n\n\n\n\n\n\n\nvar conversationList = /*#__PURE__*/function (_DtBase) {\n  function conversationList() {\n    var _this;\n    _classCallCheck(this, conversationList);\n    _this = _callSuper(this, conversationList);\n    //this has to be an arrow function so that the this keyword is bound to the component class\n    _defineProperty(_this, \"_handleSearch\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(e) {\n        var query, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(e.target !== _this)) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 2:\n              query = {\n                \"sort\": \"last_modified\"\n              };\n              if (e.detail.value !== \"\") {\n                query[\"text\"] = e.detail.value;\n              }\n              if (_this.showOnlyUnclaimed && !_this.showOnlyClaimed) {\n                query[\"claimed\"] = [false];\n              }\n              if (_this.showOnlyClaimed && !_this.showOnlyUnclaimed) {\n                query[\"claimed\"] = [true];\n              }\n              if (_this.showOnlyUnclaimed && _this.showOnlyClaimed) {\n                console.log('You can\\'t show only unclaimed and only claimed at the same time. Remove one of the attributes to the <smm-conversation-list> element.');\n              }\n              if (_this.showOnlyMyConversations) {\n                query[\"claimed_by\"] = [_this.userid];\n              }\n              if (_this.showOnlyContactConversations) {\n                query[\"contacts\"] = [_this.showOnlyContactConversations];\n              }\n              _context.next = 11;\n              return window.makeRequestOnPosts('GET', \"disciple-tools-conversations\", query);\n            case 11:\n              response = _context.sent;\n              console.log(response);\n              _this.conversations = response.posts;\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n    _this.offset = 0;\n    _this.perPage = 6;\n    return _this;\n  }\n  _inherits(conversationList, _DtBase);\n  return _createClass(conversationList, [{\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      _get(_getPrototypeOf(conversationList.prototype), \"connectedCallback\", this).call(this);\n      window.addEventListener('search', this._handleSearch);\n    }\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {\n      window.removeEventListener('search', this._handleSearch);\n      _get(_getPrototypeOf(conversationList.prototype), \"disconnectedCallback\", this).call(this);\n    }\n  }, {\n    key: \"_leftarrowSVG\",\n    value: function _leftarrowSVG() {\n      return (0,lit__WEBPACK_IMPORTED_MODULE_0__.svg)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"<svg width=\\\"5\\\" height=\\\"8\\\" viewBox=\\\"0 0 5 8\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M1.6333 0.46666L4.69997 3.53333C4.76663 3.59999 4.81375 3.67221 4.8413 3.74999C4.8693 3.82777 4.8833 3.9111 4.8833 3.99999C4.8833 4.08888 4.8693 4.17222 4.8413 4.24999C4.81375 4.32777 4.76663 4.39999 4.69997 4.46666L1.6333 7.53333C1.51108 7.65555 1.35552 7.71666 1.16663 7.71666C0.977745 7.71666 0.82219 7.65555 0.699967 7.53333C0.577745 7.4111 0.516634 7.25555 0.516634 7.06666C0.516634 6.87777 0.577746 6.72221 0.699967 6.59999L3.29997 3.99999L0.699968 1.39999C0.577746 1.27777 0.516635 1.12221 0.516635 0.933325C0.516635 0.744437 0.577746 0.588882 0.699968 0.46666C0.82219 0.344437 0.977746 0.283325 1.16663 0.283325C1.35552 0.283325 1.51108 0.344437 1.6333 0.46666Z\\\" fill=\\\"var(--gray-1, #B7B7B7)\\\"/></svg>\"])));\n    }\n  }, {\n    key: \"_rightarrowSVG\",\n    value: function _rightarrowSVG() {\n      return (0,lit__WEBPACK_IMPORTED_MODULE_0__.svg)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"<svg width=\\\"5\\\" height=\\\"8\\\" viewBox=\\\"0 0 5 8\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M3.3667 7.53334L0.300032 4.46667C0.233366 4.40001 0.186255 4.32779 0.158699 4.25001C0.130699 4.17223 0.116699 4.0889 0.116699 4.00001C0.116699 3.91112 0.130699 3.82778 0.158699 3.75001C0.186255 3.67223 0.233366 3.60001 0.300032 3.53334L3.3667 0.466674C3.48892 0.344451 3.64448 0.28334 3.83337 0.28334C4.02225 0.28334 4.17781 0.344451 4.30003 0.466674C4.42225 0.588896 4.48337 0.744452 4.48337 0.93334C4.48337 1.12223 4.42225 1.27779 4.30003 1.40001L1.70003 4.00001L4.30003 6.60001C4.42225 6.72223 4.48337 6.87779 4.48337 7.06667C4.48337 7.25556 4.42225 7.41112 4.30003 7.53334C4.17781 7.65556 4.02225 7.71667 3.83337 7.71667C3.64448 7.71667 3.48892 7.65556 3.3667 7.53334Z\\\" fill=\\\"var(--gray-1, #B7B7B7)\\\"/></svg>\"])));\n    }\n  }, {\n    key: \"_prevArrowSVG\",\n    value: function _prevArrowSVG() {\n      if (this.RTL) {\n        return this._leftarrowSVG();\n      }\n      return this._rightarrowSVG();\n    }\n  }, {\n    key: \"_nextArrowSVG\",\n    value: function _nextArrowSVG() {\n      if (this.RTL) {\n        return this._rightarrowSVG();\n      }\n      return this._leftarrowSVG();\n    }\n  }, {\n    key: \"_paginationRender\",\n    value: function _paginationRender() {\n      var _this2 = this;\n      var pages = Math.ceil(this.conversations.length / this.perPage);\n      if (pages > 1) {\n        if (this.offset === 0) {\n          return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n          \", \"\\n          <button class=\\\"button small\\\" @click=\", \">\", \"</button>\"])), this._paginationButtonsRender(pages), function () {\n            return _this2.offset = _this2.offset + _this2.perPage;\n          }, this._nextArrowSVG());\n        }\n        if (this.offset === (pages - 1) * this.perPage) {\n          return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n        <button class=\\\"button small\\\" @click=\", \">\", \"</button>\\n        \", \"\"])), function () {\n            return _this2.offset = _this2.offset - _this2.perPage;\n          }, this._prevArrowSVG(), this._paginationButtonsRender(pages));\n        }\n        return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n      <button class=\\\"button small\\\" @click=\", \">\", \"</button>\\n      \", \"\\n      <button class=\\\"button small\\\" @click=\", \">\", \"</button>\"])), function () {\n          return _this2.offset = _this2.offset - _this2.perPage;\n        }, this._prevArrowSVG(), this._paginationButtonsRender(pages), function () {\n          return _this2.offset = _this2.offset + _this2.perPage;\n        }, this._nextArrowSVG());\n      } else {\n        return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\"])));\n      }\n    }\n  }, {\n    key: \"_paginationButtonsRender\",\n    value: function _paginationButtonsRender(pages) {\n      var _this3 = this;\n      var buttons = [];\n      var _loop = function _loop(i) {\n        var classes = {\n          button: true,\n          small: true,\n          active: _this3.offset === i * _this3.perPage ? true : false\n        };\n        buttons.push((0,lit__WEBPACK_IMPORTED_MODULE_0__.html)(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"<button class=\\\"\", \"\\\" @click=\", \">\", \"</button>\"])), (0,lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_2__.classMap)(classes), function () {\n          return _this3.offset = i * _this3.perPage;\n        }, i + 1));\n      };\n      for (var i = 0; i < pages; i++) {\n        _loop(i);\n      }\n      return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\", \"\"])), buttons);\n    }\n  }, {\n    key: \"_headerRender\",\n    value: function _headerRender() {\n      return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\"\\n      <span class=\\\"smm-list-header-text\\\">\\n      <smm-search id=\\\"convoListSearch\\\" name=\\\"convoListSearch\\\" value=\\\"\\\" type=\\\"text\\\" requiredmessage=\\\"\\\" privatelabel=\\\"\\\" onchange=\\\"\\\" internals-valid=\\\"\\\" aria-invalid=\\\"false\\\"></smm-search>\\n      </span>\\n      \"])));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n      console.log(this.conversations);\n      return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral([\"\\n      <div class=\\\"smm-list-header\\\">\\n        \", \"\\n      </div>\\n      <ul class=\\\"smm-conversation-list\\\">\\n      \", \"\\n      </ul>\\n      <span class=\\\"smm-list-pagination\\\">\\n        \", \"\\n      </span>\\n    \"])), !this.showOnlyCurrentConversation ? this._headerRender() : \"\", (0,lit_directives_repeat_js__WEBPACK_IMPORTED_MODULE_1__.repeat)(this.conversations, function (conversation) {\n        return conversation.ID;\n      }, function (conversation, index) {\n        return _this4.offset <= index && index < _this4.offset + _this4.perPage ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral([\"\\n        <li><smm-list-item .conversation=\", \" userid=\", \"></smm-list-item></li>\\n        \"])), conversation, _this4.userid) : \"\";\n      }), this._paginationRender());\n    }\n  }], [{\n    key: \"properties\",\n    get: function get() {\n      return _objectSpread(_objectSpread({}, _get(_getPrototypeOf(conversationList), \"properties\", this)), {}, {\n        conversations: {\n          type: Array\n        },\n        offset: {\n          type: Number\n        },\n        perPage: {\n          type: Number\n        },\n        userid: {\n          type: Number\n        },\n        showOnlyUnclaimed: {\n          type: Boolean\n        },\n        showOnlyClaimed: {\n          type: Boolean\n        },\n        showOnlyMyConversations: {\n          type: Boolean\n        },\n        showOnlyContactConversations: {\n          type: Number\n        },\n        showOnlyCurrentConversation: {\n          type: Boolean\n        }\n      });\n    }\n  }, {\n    key: \"styles\",\n    get: function get() {\n      return (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral([\"\\n      .smm-conversation-list {\\n          list-style: none;\\n          margin: 0;\\n          padding: 0;\\n          border: 1px solid #E6E6E6;\\n      }\\n      button {\\n        border: none;\\n        background: none;\\n        cursor: pointer;\\n        color: var(--gray-1, #B7B7B7);\\n        font-size: 1em;\\n        padding: .25em 0.5em;\\n      }\\n\\n      button svg {\\n        display: block;\\n        height: 1em;\\n        width: 0.4em;\\n      }\\n\\n      button.active {\\n        background: var(--surface-0, e2e2e2);\\n        color: var(--text-color, #0a0a0a);\\n        border-radius: 5px;\\n      }\\n      .smm-list-pagination {\\n        display: flex;\\n        justify-content: center;\\n        font-size: 1.5rem;\\n      }\\n    \"])));\n    }\n  }]);\n}(_disciple_tools_web_components__WEBPACK_IMPORTED_MODULE_5__.DtBase);\ncustomElements.define(\"smm-conversation-list\", conversationList);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./assets/js/convo_list/convo_list.js\n");

/***/ }),

/***/ "./assets/js/convo_list/convo_list_item.js":
/*!*************************************************!*\
  !*** ./assets/js/convo_list/convo_list_item.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   conversationListItem: () => (/* binding */ conversationListItem)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit/directives/class-map.js */ \"./node_modules/lit/directives/class-map.js\");\n/* harmony import */ var lit_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lit/directives/if-defined.js */ \"./node_modules/lit/directives/if-defined.js\");\n/* harmony import */ var _disciple_tools_web_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @disciple.tools/web-components */ \"./node_modules/@disciple.tools/web-components/index.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _templateObject, _templateObject2;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\nvar conversationListItem = /*#__PURE__*/function (_DtBase) {\n  function conversationListItem() {\n    _classCallCheck(this, conversationListItem);\n    return _callSuper(this, conversationListItem);\n  }\n  _inherits(conversationListItem, _DtBase);\n  return _createClass(conversationListItem, [{\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      _get(_getPrototypeOf(conversationListItem.prototype), \"connectedCallback\", this).call(this);\n      this.claimed = this.conversation.claimed;\n    }\n  }, {\n    key: \"_formatDate\",\n    value: function _formatDate() {\n      var dateObj = new Date(this.conversation.post_date.formatted);\n      var dateString = new Intl.DateTimeFormat('default', {\n        month: 'short',\n        day: 'numeric'\n      }).format(dateObj);\n      return dateString;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"<div class=\\\"line-container\\\">\\n      <div class=\\\"name\\\">\", \"</div>\\n      <div class=\\\"mid-line-container\\\">\\n        <div class=\\\"date\\\"><span>\", \"</span></div>\\n        <div class=\\\"platform\\\">\", \"</div>\\n      </div>\\n\\n      <smm-conversation-modal title=\\\"\\\" context=\\\"default\\\" ?claimed=\", \" convoid=\\\"\", \"\\\" userid=\", \" conversation=\\\"\", \"\\\" buttonclass=\\\"{&quot;alert&quot;:true}\\\" buttonstyle=\\\"{&quot;padding&quot;:&quot;40px&quot;}\\\">\\n        <span slot=\\\"content\\\">Test</span>\\n        <span slot=\\\"openButton\\\">\\n          View Conversation\\n        </span>\\n    </smm-conversation-modal>\\n    </div>\"])), this.conversation.name, this._formatDate(), this.conversation.platform, this.claimed, this.conversation.ID, this.userid, JSON.stringify(this.conversation));\n    }\n  }], [{\n    key: \"properties\",\n    get: function get() {\n      return _objectSpread(_objectSpread({}, _get(_getPrototypeOf(conversationListItem), \"properties\", this)), {}, {\n        conversation: {\n          type: Array\n        },\n        claimed: {\n          type: Boolean\n        },\n        userid: {\n          type: Number\n        }\n      });\n    }\n  }, {\n    key: \"styles\",\n    get: function get() {\n      return (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n      :host {\\n        --dt-modal-button-background: var(--primary-color);\\n        --dt-modal-button-opener-background: var(--primary-color);\\n        --dt-modal-button-color: #FFFFFF;\\n        --dt-button-font-weight: 100;\\n        --dt-button-padding-y: 0em;\\n        --dt-button-padding-y: 0.15em;\\n        --dt-button-padding-x: 1em;\\n        --dt-button-border-radius: 0.25em;\\n        --dt-button-font-size: 1em;\\n        color: currentcolor;\\n        display: block;\\n        container-type: inline-size;\\n        container-name: line-container;\\n      }\\n\\n      .line-container {\\n        display: grid;\\n        grid-template-columns: 1.5fr .75fr .75fr;\\n        gap: 1em 0.35em;\\n        place-items: center;\\n        border-bottom: 1px solid rgb(230, 230, 230);\\n        padding: 1em 0;\\n        margin: 0 0.5em;\\n      }\\n\\n      .mid-line-container {\\n        display: flex;\\n        flex-flow: column wrap;\\n        align-items: center;\\n        height: 100%;\\n        justify-content: space-around;\\n      }\\n\\n      .name {\\n        font-weight: bold;\\n      }\\n\\n      .date {\\n        font-size: .75em;\\n        align-content: center;\\n      }\\n\\n      .date span {\\n        background: var(--smm-list-date-background, #F0F0F0);\\n        border-radius: .25em;\\n        padding: .5em;\\n      }\\n\\n      .platform {\\n        font-size: .75em;\\n      }\\n      /* dt-button {\\n        flex: 1;\\n      } */\\n\\n      @container line-container (min-width: 500px) {\\n        .line-container {\\n          grid-template-columns: 1fr 1fr 1fr;\\n        }\\n\\n        .mid-line-container {\\n          flex-flow: row;\\n          width: 100%;\\n          justify-content: space-evenly;\\n        }\\n      }\\n    \"])));\n    }\n  }]);\n}(_disciple_tools_web_components__WEBPACK_IMPORTED_MODULE_3__.DtBase);\ncustomElements.define(\"smm-list-item\", conversationListItem);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hc3NldHMvanMvY29udm9fbGlzdC9jb252b19saXN0X2l0ZW0uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUE0QztBQUNXO0FBQ0U7QUFDRDtBQUVqRCxJQUFNTSxvQkFBb0IsMEJBQUFDLE9BQUE7RUFTL0IsU0FBQUQscUJBQUEsRUFBYztJQUFBRSxlQUFBLE9BQUFGLG9CQUFBO0lBQUEsT0FBQUcsVUFBQSxPQUFBSCxvQkFBQTtFQUVkO0VBQUNJLFNBQUEsQ0FBQUosb0JBQUEsRUFBQUMsT0FBQTtFQUFBLE9BQUFJLFlBQUEsQ0FBQUwsb0JBQUE7SUFBQU0sR0FBQTtJQUFBQyxLQUFBLEVBeUVELFNBQUFDLGtCQUFBLEVBQW9CO01BQ2xCQyxJQUFBLENBQUFDLGVBQUEsQ0FBQVYsb0JBQUEsQ0FBQVcsU0FBQSw4QkFBQUMsSUFBQTtNQUNBLElBQUksQ0FBQ0MsT0FBTyxHQUFHLElBQUksQ0FBQ0MsWUFBWSxDQUFDRCxPQUFPO0lBQzFDO0VBQUM7SUFBQVAsR0FBQTtJQUFBQyxLQUFBLEVBSUQsU0FBQVEsWUFBQSxFQUFjO01BQ1osSUFBSUMsT0FBTyxHQUFHLElBQUlDLElBQUksQ0FBRSxJQUFJLENBQUNILFlBQVksQ0FBQ0ksU0FBUyxDQUFDQyxTQUFVLENBQUM7TUFDL0QsSUFBSUMsVUFBVSxHQUFHLElBQUlDLElBQUksQ0FBQ0MsY0FBYyxDQUFDLFNBQVMsRUFBRTtRQUFFQyxLQUFLLEVBQUUsT0FBTztRQUFFQyxHQUFHLEVBQUU7TUFBVSxDQUFDLENBQUMsQ0FBQ0MsTUFBTSxDQUFDVCxPQUFPLENBQUM7TUFFdkcsT0FBT0ksVUFBVTtJQUNuQjtFQUFDO0lBQUFkLEdBQUE7SUFBQUMsS0FBQSxFQUVELFNBQUFtQixPQUFBLEVBQVM7TUFDUCxPQUFPL0IseUNBQUksQ0FBQWdDLGVBQUEsS0FBQUEsZUFBQSxHQUFBQyxzQkFBQSxpbkJBQ1csSUFBSSxDQUFDZCxZQUFZLENBQUNlLElBQUksRUFFZCxJQUFJLENBQUNkLFdBQVcsQ0FBQyxDQUFDLEVBQ3BCLElBQUksQ0FBQ0QsWUFBWSxDQUFDZ0IsUUFBUSxFQUdVLElBQUksQ0FBQ2pCLE9BQU8sRUFBYSxJQUFJLENBQUNDLFlBQVksQ0FBQ2lCLEVBQUUsRUFBWSxJQUFJLENBQUNDLE1BQU0sRUFBa0JDLElBQUksQ0FBQ0MsU0FBUyxDQUFFLElBQUksQ0FBQ3BCLFlBQWEsQ0FBQztJQU8zTDtFQUFDO0lBQUFSLEdBQUE7SUFBQTZCLEdBQUEsRUFoSEQsU0FBQUEsSUFBQSxFQUF3QjtNQUN0QixPQUFBQyxhQUFBLENBQUFBLGFBQUEsS0FBQTNCLElBQUEsQ0FBQUMsZUFBQSxDQUFBVixvQkFBQTtRQUVFYyxZQUFZLEVBQUU7VUFBRXVCLElBQUksRUFBRUM7UUFBTSxDQUFDO1FBQzdCekIsT0FBTyxFQUFFO1VBQUV3QixJQUFJLEVBQUVFO1FBQVEsQ0FBQztRQUMxQlAsTUFBTSxFQUFFO1VBQUVLLElBQUksRUFBRUc7UUFBTztNQUFDO0lBRTVCO0VBQUM7SUFBQWxDLEdBQUE7SUFBQTZCLEdBQUEsRUFJSCxTQUFBQSxJQUFBLEVBQW9CO01BQ2hCLE9BQU96Qyx3Q0FBRyxDQUFBK0MsZ0JBQUEsS0FBQUEsZ0JBQUEsR0FBQWIsc0JBQUE7SUFxRWQ7RUFBQztBQUFBLEVBbEZ5QzdCLGtFQUFNO0FBcUhoRDJDLGNBQWMsQ0FBQ0MsTUFBTSxDQUFDLGVBQWUsRUFBRTNDLG9CQUFvQixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGlzY2lwbGUtdG9vbHMtY29udmVyc2F0aW9ucy8uL2Fzc2V0cy9qcy9jb252b19saXN0L2NvbnZvX2xpc3RfaXRlbS5qcz80OTc3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNzcywgaHRtbCwgTGl0RWxlbWVudCB9IGZyb20gXCJsaXRcIjtcbmltcG9ydCB7IGNsYXNzTWFwIH0gZnJvbSBcImxpdC9kaXJlY3RpdmVzL2NsYXNzLW1hcC5qc1wiO1xuaW1wb3J0IHsgaWZEZWZpbmVkIH0gZnJvbSAnbGl0L2RpcmVjdGl2ZXMvaWYtZGVmaW5lZC5qcyc7XG5pbXBvcnQgeyBEdEJhc2UgfSBmcm9tIFwiQGRpc2NpcGxlLnRvb2xzL3dlYi1jb21wb25lbnRzXCI7XG5cbmV4cG9ydCBjbGFzcyBjb252ZXJzYXRpb25MaXN0SXRlbSBleHRlbmRzIER0QmFzZSB7XG4gIHN0YXRpYyBnZXQgcHJvcGVydGllcygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uc3VwZXIucHJvcGVydGllcyxcbiAgICAgIGNvbnZlcnNhdGlvbjogeyB0eXBlOiBBcnJheSB9LFxuICAgICAgY2xhaW1lZDogeyB0eXBlOiBCb29sZWFuIH0sXG4gICAgICB1c2VyaWQ6IHsgdHlwZTogTnVtYmVyIH0sXG4gICAgfTtcbiAgfVxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICB9XG5zdGF0aWMgZ2V0IHN0eWxlcygpIHtcbiAgICByZXR1cm4gY3NzYFxuICAgICAgOmhvc3Qge1xuICAgICAgICAtLWR0LW1vZGFsLWJ1dHRvbi1iYWNrZ3JvdW5kOiB2YXIoLS1wcmltYXJ5LWNvbG9yKTtcbiAgICAgICAgLS1kdC1tb2RhbC1idXR0b24tb3BlbmVyLWJhY2tncm91bmQ6IHZhcigtLXByaW1hcnktY29sb3IpO1xuICAgICAgICAtLWR0LW1vZGFsLWJ1dHRvbi1jb2xvcjogI0ZGRkZGRjtcbiAgICAgICAgLS1kdC1idXR0b24tZm9udC13ZWlnaHQ6IDEwMDtcbiAgICAgICAgLS1kdC1idXR0b24tcGFkZGluZy15OiAwZW07XG4gICAgICAgIC0tZHQtYnV0dG9uLXBhZGRpbmcteTogMC4xNWVtO1xuICAgICAgICAtLWR0LWJ1dHRvbi1wYWRkaW5nLXg6IDFlbTtcbiAgICAgICAgLS1kdC1idXR0b24tYm9yZGVyLXJhZGl1czogMC4yNWVtO1xuICAgICAgICAtLWR0LWJ1dHRvbi1mb250LXNpemU6IDFlbTtcbiAgICAgICAgY29sb3I6IGN1cnJlbnRjb2xvcjtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIGNvbnRhaW5lci10eXBlOiBpbmxpbmUtc2l6ZTtcbiAgICAgICAgY29udGFpbmVyLW5hbWU6IGxpbmUtY29udGFpbmVyO1xuICAgICAgfVxuXG4gICAgICAubGluZS1jb250YWluZXIge1xuICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDEuNWZyIC43NWZyIC43NWZyO1xuICAgICAgICBnYXA6IDFlbSAwLjM1ZW07XG4gICAgICAgIHBsYWNlLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2IoMjMwLCAyMzAsIDIzMCk7XG4gICAgICAgIHBhZGRpbmc6IDFlbSAwO1xuICAgICAgICBtYXJnaW46IDAgMC41ZW07XG4gICAgICB9XG5cbiAgICAgIC5taWQtbGluZS1jb250YWluZXIge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWZsb3c6IGNvbHVtbiB3cmFwO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICAgICAgfVxuXG4gICAgICAubmFtZSB7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgfVxuXG4gICAgICAuZGF0ZSB7XG4gICAgICAgIGZvbnQtc2l6ZTogLjc1ZW07XG4gICAgICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgIH1cblxuICAgICAgLmRhdGUgc3BhbiB7XG4gICAgICAgIGJhY2tncm91bmQ6IHZhcigtLXNtbS1saXN0LWRhdGUtYmFja2dyb3VuZCwgI0YwRjBGMCk7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IC4yNWVtO1xuICAgICAgICBwYWRkaW5nOiAuNWVtO1xuICAgICAgfVxuXG4gICAgICAucGxhdGZvcm0ge1xuICAgICAgICBmb250LXNpemU6IC43NWVtO1xuICAgICAgfVxuICAgICAgLyogZHQtYnV0dG9uIHtcbiAgICAgICAgZmxleDogMTtcbiAgICAgIH0gKi9cblxuICAgICAgQGNvbnRhaW5lciBsaW5lLWNvbnRhaW5lciAobWluLXdpZHRoOiA1MDBweCkge1xuICAgICAgICAubGluZS1jb250YWluZXIge1xuICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmciAxZnI7XG4gICAgICAgIH1cblxuICAgICAgICAubWlkLWxpbmUtY29udGFpbmVyIHtcbiAgICAgICAgICBmbGV4LWZsb3c6IHJvdztcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIGA7XG59XG5cbiAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgc3VwZXIuY29ubmVjdGVkQ2FsbGJhY2soKTtcbiAgICB0aGlzLmNsYWltZWQgPSB0aGlzLmNvbnZlcnNhdGlvbi5jbGFpbWVkO1xuICB9XG5cblxuXG4gIF9mb3JtYXREYXRlKCkge1xuICAgIGxldCBkYXRlT2JqID0gbmV3IERhdGUoIHRoaXMuY29udmVyc2F0aW9uLnBvc3RfZGF0ZS5mb3JtYXR0ZWQgKTtcbiAgICBsZXQgZGF0ZVN0cmluZyA9IG5ldyBJbnRsLkRhdGVUaW1lRm9ybWF0KCdkZWZhdWx0JywgeyBtb250aDogJ3Nob3J0JywgZGF5OiAnbnVtZXJpYycgfSkuZm9ybWF0KGRhdGVPYmopO1xuXG4gICAgcmV0dXJuIGRhdGVTdHJpbmc7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIGh0bWxgPGRpdiBjbGFzcz1cImxpbmUtY29udGFpbmVyXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwibmFtZVwiPiR7dGhpcy5jb252ZXJzYXRpb24ubmFtZX08L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJtaWQtbGluZS1jb250YWluZXJcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImRhdGVcIj48c3Bhbj4ke3RoaXMuX2Zvcm1hdERhdGUoKX08L3NwYW4+PC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJwbGF0Zm9ybVwiPiR7dGhpcy5jb252ZXJzYXRpb24ucGxhdGZvcm19PC9kaXY+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPHNtbS1jb252ZXJzYXRpb24tbW9kYWwgdGl0bGU9XCJcIiBjb250ZXh0PVwiZGVmYXVsdFwiID9jbGFpbWVkPSR7dGhpcy5jbGFpbWVkfSBjb252b2lkPVwiJHt0aGlzLmNvbnZlcnNhdGlvbi5JRH1cIiB1c2VyaWQ9JHt0aGlzLnVzZXJpZH0gY29udmVyc2F0aW9uPVwiJHtKU09OLnN0cmluZ2lmeSggdGhpcy5jb252ZXJzYXRpb24gKX1cIiBidXR0b25jbGFzcz1cInsmcXVvdDthbGVydCZxdW90Ozp0cnVlfVwiIGJ1dHRvbnN0eWxlPVwieyZxdW90O3BhZGRpbmcmcXVvdDs6JnF1b3Q7NDBweCZxdW90O31cIj5cbiAgICAgICAgPHNwYW4gc2xvdD1cImNvbnRlbnRcIj5UZXN0PC9zcGFuPlxuICAgICAgICA8c3BhbiBzbG90PVwib3BlbkJ1dHRvblwiPlxuICAgICAgICAgIFZpZXcgQ29udmVyc2F0aW9uXG4gICAgICAgIDwvc3Bhbj5cbiAgICA8L3NtbS1jb252ZXJzYXRpb24tbW9kYWw+XG4gICAgPC9kaXY+YDtcbiAgfVxuXG59XG5cbmN1c3RvbUVsZW1lbnRzLmRlZmluZShcInNtbS1saXN0LWl0ZW1cIiwgY29udmVyc2F0aW9uTGlzdEl0ZW0pO1xuIl0sIm5hbWVzIjpbImNzcyIsImh0bWwiLCJMaXRFbGVtZW50IiwiY2xhc3NNYXAiLCJpZkRlZmluZWQiLCJEdEJhc2UiLCJjb252ZXJzYXRpb25MaXN0SXRlbSIsIl9EdEJhc2UiLCJfY2xhc3NDYWxsQ2hlY2siLCJfY2FsbFN1cGVyIiwiX2luaGVyaXRzIiwiX2NyZWF0ZUNsYXNzIiwia2V5IiwidmFsdWUiLCJjb25uZWN0ZWRDYWxsYmFjayIsIl9nZXQiLCJfZ2V0UHJvdG90eXBlT2YiLCJwcm90b3R5cGUiLCJjYWxsIiwiY2xhaW1lZCIsImNvbnZlcnNhdGlvbiIsIl9mb3JtYXREYXRlIiwiZGF0ZU9iaiIsIkRhdGUiLCJwb3N0X2RhdGUiLCJmb3JtYXR0ZWQiLCJkYXRlU3RyaW5nIiwiSW50bCIsIkRhdGVUaW1lRm9ybWF0IiwibW9udGgiLCJkYXkiLCJmb3JtYXQiLCJyZW5kZXIiLCJfdGVtcGxhdGVPYmplY3QiLCJfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsIiwibmFtZSIsInBsYXRmb3JtIiwiSUQiLCJ1c2VyaWQiLCJKU09OIiwic3RyaW5naWZ5IiwiZ2V0IiwiX29iamVjdFNwcmVhZCIsInR5cGUiLCJBcnJheSIsIkJvb2xlYW4iLCJOdW1iZXIiLCJfdGVtcGxhdGVPYmplY3QyIiwiY3VzdG9tRWxlbWVudHMiLCJkZWZpbmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./assets/js/convo_list/convo_list_item.js\n");

/***/ }),

/***/ "./assets/js/convo_list/convo_list_search.js":
/*!***************************************************!*\
  !*** ./assets/js/convo_list/convo_list_search.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   smmSearch: () => (/* binding */ smmSearch)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var _disciple_tools_web_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @disciple.tools/web-components */ \"./node_modules/@disciple.tools/web-components/index.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _templateObject, _templateObject2;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\nvar smmSearch = /*#__PURE__*/function (_DtText) {\n  function smmSearch() {\n    var _this;\n    _classCallCheck(this, smmSearch);\n    _this = _callSuper(this, smmSearch);\n    _this.placeholder = \"Search\";\n    return _this;\n  }\n  _inherits(smmSearch, _DtText);\n  return _createClass(smmSearch, [{\n    key: \"search\",\n    value: function search(e) {\n      var input = e.target;\n      if (input.value === this.value) {\n        return;\n      } else {\n        this.value = input.value;\n      }\n      var event = new CustomEvent('search', {\n        detail: {\n          value: this.value\n        },\n        bubbles: true,\n        composed: true\n      });\n      this.dispatchEvent(event);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    <div class=\\\"search\\\">\\n        <input\\n          class=\\\"search_input\\\"\\n          value=\\\"\", \"\\\"\\n          placeholder=\\\"\", \"\\\"\\n          @change=\\\"\", \"\\\"\\n        />\\n        <dt-icon\\n          class=\\\"search_icon\\\"\\n          icon=\\\"ic:outline-search\\\"\\n          @click=\\\"\", \"\\\"\\n        ></dt-icon>\\n      </div>\"])), this.value, this.placeholder, function (e) {\n        return _this2.search(e);\n      }, this.search);\n    }\n  }], [{\n    key: \"properties\",\n    get: function get() {\n      return _objectSpread(_objectSpread({}, _get(_getPrototypeOf(smmSearch), \"properties\", this)), {}, {\n        value: {\n          type: String\n        },\n        placeholder: {\n          type: String\n        }\n      });\n    }\n  }, {\n    key: \"styles\",\n    get: function get() {\n      return [_get(_getPrototypeOf(smmSearch), \"styles\", this), (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n      :host {\\n        --dt-text-background-color: var(--surface-1);\\n        --dt-text-border-color: none;\\n        --dt-form-padding: 0 1em;\\n      }\\n      .search {\\n        display: flex;\\n        align-items: center;\\n        height: 3rem;\\n      }\\n\\n      .search_input {\\n        flex: 1;\\n        height: 100%;\\n      }\\n\\n      .search_icon {\\n        width: 2.5rem;\\n        height: 100%;\\n        text-align: center;\\n        font-size: 2rem;\\n      }\\n    \"])))];\n    }\n  }]);\n}(_disciple_tools_web_components__WEBPACK_IMPORTED_MODULE_1__.DtText);\nwindow.customElements.define(\"smm-search\", smmSearch);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hc3NldHMvanMvY29udm9fbGlzdC9jb252b19saXN0X3NlYXJjaC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFnQztBQUN3QjtBQUVqRCxJQUFNRyxTQUFTLDBCQUFBQyxPQUFBO0VBc0NwQixTQUFBRCxVQUFBLEVBQWM7SUFBQSxJQUFBRSxLQUFBO0lBQUFDLGVBQUEsT0FBQUgsU0FBQTtJQUNaRSxLQUFBLEdBQUFFLFVBQUEsT0FBQUosU0FBQTtJQUNBRSxLQUFBLENBQUtHLFdBQVcsR0FBRyxRQUFRO0lBQUMsT0FBQUgsS0FBQTtFQUM5QjtFQUFDSSxTQUFBLENBQUFOLFNBQUEsRUFBQUMsT0FBQTtFQUFBLE9BQUFNLFlBQUEsQ0FBQVAsU0FBQTtJQUFBUSxHQUFBO0lBQUFDLEtBQUEsRUFFRCxTQUFBQyxPQUFPQyxDQUFDLEVBQUU7TUFDUixJQUFNQyxLQUFLLEdBQUdELENBQUMsQ0FBQ0UsTUFBTTtNQUN0QixJQUFJRCxLQUFLLENBQUNILEtBQUssS0FBSyxJQUFJLENBQUNBLEtBQUssRUFBRTtRQUM5QjtNQUNGLENBQUMsTUFBTTtRQUNMLElBQUksQ0FBQ0EsS0FBSyxHQUFHRyxLQUFLLENBQUNILEtBQUs7TUFDMUI7TUFFQSxJQUFNSyxLQUFLLEdBQUcsSUFBSUMsV0FBVyxDQUFDLFFBQVEsRUFBRTtRQUN0Q0MsTUFBTSxFQUFFO1VBQ05QLEtBQUssRUFBRSxJQUFJLENBQUNBO1FBQ2QsQ0FBQztRQUNEUSxPQUFPLEVBQUUsSUFBSTtRQUNiQyxRQUFRLEVBQUU7TUFDWixDQUFDLENBQUM7TUFDRixJQUFJLENBQUNDLGFBQWEsQ0FBQ0wsS0FBSyxDQUFDO0lBQzNCO0VBQUM7SUFBQU4sR0FBQTtJQUFBQyxLQUFBLEVBSUQsU0FBQVcsT0FBQSxFQUFTO01BQUEsSUFBQUMsTUFBQTtNQUNQLE9BQU94Qix5Q0FBSSxDQUFBeUIsZUFBQSxLQUFBQSxlQUFBLEdBQUFDLHNCQUFBLGdWQUlJLElBQUksQ0FBQ2QsS0FBSyxFQUNKLElBQUksQ0FBQ0osV0FBVyxFQUNwQixVQUFDTSxDQUFDO1FBQUEsT0FBS1UsTUFBSSxDQUFDWCxNQUFNLENBQUNDLENBQUMsQ0FBQztNQUFBLEdBS3RCLElBQUksQ0FBQ0QsTUFBTTtJQUc3QjtFQUFDO0lBQUFGLEdBQUE7SUFBQWdCLEdBQUEsRUE3RUQsU0FBQUEsSUFBQSxFQUF3QjtNQUN0QixPQUFBQyxhQUFBLENBQUFBLGFBQUEsS0FBQUMsSUFBQSxDQUFBQyxlQUFBLENBQUEzQixTQUFBO1FBRUVTLEtBQUssRUFBRTtVQUFDbUIsSUFBSSxFQUFFQztRQUFNLENBQUM7UUFDckJ4QixXQUFXLEVBQUU7VUFBRXVCLElBQUksRUFBRUM7UUFBTztNQUFDO0lBRWpDO0VBQUM7SUFBQXJCLEdBQUE7SUFBQWdCLEdBQUEsRUFFRCxTQUFBQSxJQUFBLEVBQW9CO01BQ2xCLE9BQU8sQ0FBQUUsSUFBQSxDQUFBQyxlQUFBLENBQUEzQixTQUFBLG9CQUNQRix3Q0FBRyxDQUFBZ0MsZ0JBQUEsS0FBQUEsZ0JBQUEsR0FBQVAsc0JBQUEsaWVBd0JGO0lBQ0g7RUFBQztBQUFBLEVBcEM0QnhCLGtFQUFNO0FBaUZyQ2dDLE1BQU0sQ0FBQ0MsY0FBYyxDQUFDQyxNQUFNLENBQUMsWUFBWSxFQUFFakMsU0FBUyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGlzY2lwbGUtdG9vbHMtY29udmVyc2F0aW9ucy8uL2Fzc2V0cy9qcy9jb252b19saXN0L2NvbnZvX2xpc3Rfc2VhcmNoLmpzPzI3Y2IiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaHRtbCwgY3NzIH0gZnJvbSAnbGl0JztcbmltcG9ydCB7IER0VGV4dCB9IGZyb20gXCJAZGlzY2lwbGUudG9vbHMvd2ViLWNvbXBvbmVudHNcIjtcblxuZXhwb3J0IGNsYXNzIHNtbVNlYXJjaCBleHRlbmRzIER0VGV4dCB7XG4gIHN0YXRpYyBnZXQgcHJvcGVydGllcygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uc3VwZXIucHJvcGVydGllcyxcbiAgICAgIHZhbHVlOiB7dHlwZTogU3RyaW5nfSxcbiAgICAgIHBsYWNlaG9sZGVyOiB7IHR5cGU6IFN0cmluZyB9LFxuICAgIH07XG4gIH1cblxuICBzdGF0aWMgZ2V0IHN0eWxlcygpIHtcbiAgICByZXR1cm4gWyBzdXBlci5zdHlsZXMsXG4gICAgY3NzYFxuICAgICAgOmhvc3Qge1xuICAgICAgICAtLWR0LXRleHQtYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tc3VyZmFjZS0xKTtcbiAgICAgICAgLS1kdC10ZXh0LWJvcmRlci1jb2xvcjogbm9uZTtcbiAgICAgICAgLS1kdC1mb3JtLXBhZGRpbmc6IDAgMWVtO1xuICAgICAgfVxuICAgICAgLnNlYXJjaCB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGhlaWdodDogM3JlbTtcbiAgICAgIH1cblxuICAgICAgLnNlYXJjaF9pbnB1dCB7XG4gICAgICAgIGZsZXg6IDE7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIH1cblxuICAgICAgLnNlYXJjaF9pY29uIHtcbiAgICAgICAgd2lkdGg6IDIuNXJlbTtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgICAgIH1cbiAgICBgLFxuICAgIF07XG4gIH1cblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMucGxhY2Vob2xkZXIgPSBcIlNlYXJjaFwiO1xuICB9XG5cbiAgc2VhcmNoKGUpIHtcbiAgICBjb25zdCBpbnB1dCA9IGUudGFyZ2V0O1xuICAgIGlmIChpbnB1dC52YWx1ZSA9PT0gdGhpcy52YWx1ZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnZhbHVlID0gaW5wdXQudmFsdWU7XG4gICAgfVxuXG4gICAgY29uc3QgZXZlbnQgPSBuZXcgQ3VzdG9tRXZlbnQoJ3NlYXJjaCcsIHtcbiAgICAgIGRldGFpbDoge1xuICAgICAgICB2YWx1ZTogdGhpcy52YWx1ZSxcbiAgICAgIH0sXG4gICAgICBidWJibGVzOiB0cnVlLFxuICAgICAgY29tcG9zZWQ6IHRydWVcbiAgICB9KTtcbiAgICB0aGlzLmRpc3BhdGNoRXZlbnQoZXZlbnQpO1xuICB9XG5cblxuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gaHRtbGBcbiAgICA8ZGl2IGNsYXNzPVwic2VhcmNoXCI+XG4gICAgICAgIDxpbnB1dFxuICAgICAgICAgIGNsYXNzPVwic2VhcmNoX2lucHV0XCJcbiAgICAgICAgICB2YWx1ZT1cIiR7dGhpcy52YWx1ZX1cIlxuICAgICAgICAgIHBsYWNlaG9sZGVyPVwiJHt0aGlzLnBsYWNlaG9sZGVyfVwiXG4gICAgICAgICAgQGNoYW5nZT1cIiR7KGUpID0+IHRoaXMuc2VhcmNoKGUpfVwiXG4gICAgICAgIC8+XG4gICAgICAgIDxkdC1pY29uXG4gICAgICAgICAgY2xhc3M9XCJzZWFyY2hfaWNvblwiXG4gICAgICAgICAgaWNvbj1cImljOm91dGxpbmUtc2VhcmNoXCJcbiAgICAgICAgICBAY2xpY2s9XCIke3RoaXMuc2VhcmNofVwiXG4gICAgICAgID48L2R0LWljb24+XG4gICAgICA8L2Rpdj5gO1xuICB9XG59XG5cbndpbmRvdy5jdXN0b21FbGVtZW50cy5kZWZpbmUoXCJzbW0tc2VhcmNoXCIsIHNtbVNlYXJjaCk7XG4iXSwibmFtZXMiOlsiaHRtbCIsImNzcyIsIkR0VGV4dCIsInNtbVNlYXJjaCIsIl9EdFRleHQiLCJfdGhpcyIsIl9jbGFzc0NhbGxDaGVjayIsIl9jYWxsU3VwZXIiLCJwbGFjZWhvbGRlciIsIl9pbmhlcml0cyIsIl9jcmVhdGVDbGFzcyIsImtleSIsInZhbHVlIiwic2VhcmNoIiwiZSIsImlucHV0IiwidGFyZ2V0IiwiZXZlbnQiLCJDdXN0b21FdmVudCIsImRldGFpbCIsImJ1YmJsZXMiLCJjb21wb3NlZCIsImRpc3BhdGNoRXZlbnQiLCJyZW5kZXIiLCJfdGhpczIiLCJfdGVtcGxhdGVPYmplY3QiLCJfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsIiwiZ2V0IiwiX29iamVjdFNwcmVhZCIsIl9nZXQiLCJfZ2V0UHJvdG90eXBlT2YiLCJ0eXBlIiwiU3RyaW5nIiwiX3RlbXBsYXRlT2JqZWN0MiIsIndpbmRvdyIsImN1c3RvbUVsZW1lbnRzIiwiZGVmaW5lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./assets/js/convo_list/convo_list_search.js\n");

/***/ }),

/***/ "./assets/js/convo_list/convo_modal.js":
/*!*********************************************!*\
  !*** ./assets/js/convo_list/convo_modal.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   conversationModal: () => (/* binding */ conversationModal)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit/directives/class-map.js */ \"./node_modules/lit/directives/class-map.js\");\n/* harmony import */ var _disciple_tools_web_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @disciple.tools/web-components */ \"./node_modules/@disciple.tools/web-components/index.js\");\n/* harmony import */ var _lit_localize__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @lit/localize */ \"./node_modules/@lit/localize/lit-localize.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _templateObject, _templateObject2;\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n\nvar conversationModal = /*#__PURE__*/function (_DtModal) {\n  function conversationModal() {\n    _classCallCheck(this, conversationModal);\n    return _callSuper(this, conversationModal, arguments);\n  }\n  _inherits(conversationModal, _DtModal);\n  return _createClass(conversationModal, [{\n    key: \"render\",\n    value: function render() {\n      return (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    <dialog\\n        id=\\\"\\\"\\n        class=\\\"dt-modal\\\"\\n        @click=\", \"\\n        @keypress=\", \"\\n      >\\n        <smm-chat-window ?claimed=\", \" convoid=\", \" userid=\", \" conversation=\", \"></smm-chat-window>\\n    </dialog>\\n    <button\\n      class=\\\"button small opener\\\"\\n      data-open=\\\"\\\"\\n      aria-label=\\\"Open reveal\\\"\\n      type=\\\"button\\\"\\n      @click=\\\"\", \"\\\"\\n    >\\n      <slot name=\\\"openButton\\\">\", \"</slot>\\n    </button>\\n    \"])), this._dialogClick, this._dialogKeypress, this.claimed, this.convoid, this.userid, JSON.stringify(this.conversation), this._openModal, (0,_lit_localize__WEBPACK_IMPORTED_MODULE_3__.msg)('Open Dialog'));\n    }\n  }], [{\n    key: \"properties\",\n    get: function get() {\n      return {\n        conversation: {\n          type: Object\n        },\n        open: {\n          type: Boolean\n        },\n        claimed: {\n          type: Boolean\n        },\n        convoid: {\n          type: Number\n        },\n        userid: {\n          type: Number\n        }\n      };\n    }\n  }, {\n    key: \"styles\",\n    get: function get() {\n      return (0,lit__WEBPACK_IMPORTED_MODULE_0__.css)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n      :host {\\n      }\\n      dialog {\\n        width: 90vw;\\n        height: 90vh;\\n        padding: 0;\\n      }\\n      dialog::backdrop {\\n        background: rgba(0, 0, 0, 0.7);\\n      }\\n      \"])));\n    }\n  }]);\n}(_disciple_tools_web_components__WEBPACK_IMPORTED_MODULE_2__.DtModal);\nwindow.customElements.define(\"smm-conversation-modal\", conversationModal);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hc3NldHMvanMvY29udm9fbGlzdC9jb252b19tb2RhbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUE0QztBQUNXO0FBQ0U7QUFDckI7QUFHN0IsSUFBTU0saUJBQWlCLDBCQUFBQyxRQUFBO0VBQUEsU0FBQUQsa0JBQUE7SUFBQUUsZUFBQSxPQUFBRixpQkFBQTtJQUFBLE9BQUFHLFVBQUEsT0FBQUgsaUJBQUEsRUFBQUksU0FBQTtFQUFBO0VBQUFDLFNBQUEsQ0FBQUwsaUJBQUEsRUFBQUMsUUFBQTtFQUFBLE9BQUFLLFlBQUEsQ0FBQU4saUJBQUE7SUFBQU8sR0FBQTtJQUFBQyxLQUFBLEVBMEI1QixTQUFBQyxPQUFBLEVBQVM7TUFDUCxPQUFPZCx5Q0FBSSxDQUFBZSxlQUFBLEtBQUFBLGVBQUEsR0FBQUMsc0JBQUEsK2NBSUUsSUFBSSxDQUFDQyxZQUFZLEVBQ2QsSUFBSSxDQUFDQyxlQUFlLEVBRUosSUFBSSxDQUFDQyxPQUFPLEVBQVksSUFBSSxDQUFDQyxPQUFPLEVBQVcsSUFBSSxDQUFDQyxNQUFNLEVBQWlCQyxJQUFJLENBQUNDLFNBQVMsQ0FBQyxJQUFJLENBQUNDLFlBQVksQ0FBQyxFQU9oSSxJQUFJLENBQUNDLFVBQVUsRUFFQ3JCLGtEQUFHLENBQUMsYUFBYSxDQUFDO0lBR2hEO0VBQUM7SUFBQVEsR0FBQTtJQUFBYyxHQUFBLEVBN0NELFNBQUFBLElBQUEsRUFBd0I7TUFDdEIsT0FBTztRQUNMRixZQUFZLEVBQUU7VUFBRUcsSUFBSSxFQUFFQztRQUFPLENBQUM7UUFDOUJDLElBQUksRUFBRTtVQUFFRixJQUFJLEVBQUVHO1FBQVEsQ0FBQztRQUN2QlgsT0FBTyxFQUFFO1VBQUVRLElBQUksRUFBRUc7UUFBUSxDQUFDO1FBQzFCVixPQUFPLEVBQUU7VUFBRU8sSUFBSSxFQUFFSTtRQUFPLENBQUM7UUFDekJWLE1BQU0sRUFBRTtVQUFFTSxJQUFJLEVBQUVJO1FBQU87TUFDekIsQ0FBQztJQUNIO0VBQUM7SUFBQW5CLEdBQUE7SUFBQWMsR0FBQSxFQUVELFNBQUFBLElBQUEsRUFBb0I7TUFDbEIsT0FBTzNCLHdDQUFHLENBQUFpQyxnQkFBQSxLQUFBQSxnQkFBQSxHQUFBaEIsc0JBQUE7SUFZWjtFQUFDO0FBQUEsRUF4Qm9DYixtRUFBTztBQWlEOUM4QixNQUFNLENBQUNDLGNBQWMsQ0FBQ0MsTUFBTSxDQUFDLHdCQUF3QixFQUFFOUIsaUJBQWlCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kaXNjaXBsZS10b29scy1jb252ZXJzYXRpb25zLy4vYXNzZXRzL2pzL2NvbnZvX2xpc3QvY29udm9fbW9kYWwuanM/MmE2YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MsIGh0bWwsIExpdEVsZW1lbnQgfSBmcm9tIFwibGl0XCI7XG5pbXBvcnQgeyBjbGFzc01hcCB9IGZyb20gXCJsaXQvZGlyZWN0aXZlcy9jbGFzcy1tYXAuanNcIjtcbmltcG9ydCB7IER0TW9kYWwgfSBmcm9tIFwiQGRpc2NpcGxlLnRvb2xzL3dlYi1jb21wb25lbnRzXCI7XG5pbXBvcnQgeyBtc2cgfSBmcm9tICdAbGl0L2xvY2FsaXplJztcblxuXG5leHBvcnQgY2xhc3MgY29udmVyc2F0aW9uTW9kYWwgZXh0ZW5kcyBEdE1vZGFsIHtcbiAgc3RhdGljIGdldCBwcm9wZXJ0aWVzKCkge1xuICAgIHJldHVybiB7XG4gICAgICBjb252ZXJzYXRpb246IHsgdHlwZTogT2JqZWN0IH0sXG4gICAgICBvcGVuOiB7IHR5cGU6IEJvb2xlYW4gfSxcbiAgICAgIGNsYWltZWQ6IHsgdHlwZTogQm9vbGVhbiB9LFxuICAgICAgY29udm9pZDogeyB0eXBlOiBOdW1iZXIgfSxcbiAgICAgIHVzZXJpZDogeyB0eXBlOiBOdW1iZXIgfSxcbiAgICB9O1xuICB9XG5cbiAgc3RhdGljIGdldCBzdHlsZXMoKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIDpob3N0IHtcbiAgICAgIH1cbiAgICAgIGRpYWxvZyB7XG4gICAgICAgIHdpZHRoOiA5MHZ3O1xuICAgICAgICBoZWlnaHQ6IDkwdmg7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICB9XG4gICAgICBkaWFsb2c6OmJhY2tkcm9wIHtcbiAgICAgICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjcpO1xuICAgICAgfVxuICAgICAgYFxuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiBodG1sYFxuICAgIDxkaWFsb2dcbiAgICAgICAgaWQ9XCJcIlxuICAgICAgICBjbGFzcz1cImR0LW1vZGFsXCJcbiAgICAgICAgQGNsaWNrPSR7dGhpcy5fZGlhbG9nQ2xpY2t9XG4gICAgICAgIEBrZXlwcmVzcz0ke3RoaXMuX2RpYWxvZ0tleXByZXNzfVxuICAgICAgPlxuICAgICAgICA8c21tLWNoYXQtd2luZG93ID9jbGFpbWVkPSR7dGhpcy5jbGFpbWVkfSBjb252b2lkPSR7dGhpcy5jb252b2lkfSB1c2VyaWQ9JHt0aGlzLnVzZXJpZH0gY29udmVyc2F0aW9uPSR7SlNPTi5zdHJpbmdpZnkodGhpcy5jb252ZXJzYXRpb24pfT48L3NtbS1jaGF0LXdpbmRvdz5cbiAgICA8L2RpYWxvZz5cbiAgICA8YnV0dG9uXG4gICAgICBjbGFzcz1cImJ1dHRvbiBzbWFsbCBvcGVuZXJcIlxuICAgICAgZGF0YS1vcGVuPVwiXCJcbiAgICAgIGFyaWEtbGFiZWw9XCJPcGVuIHJldmVhbFwiXG4gICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgIEBjbGljaz1cIiR7dGhpcy5fb3Blbk1vZGFsfVwiXG4gICAgPlxuICAgICAgPHNsb3QgbmFtZT1cIm9wZW5CdXR0b25cIj4ke21zZygnT3BlbiBEaWFsb2cnKX08L3Nsb3Q+XG4gICAgPC9idXR0b24+XG4gICAgYDtcbiAgfVxufVxuXG53aW5kb3cuY3VzdG9tRWxlbWVudHMuZGVmaW5lKFwic21tLWNvbnZlcnNhdGlvbi1tb2RhbFwiLCBjb252ZXJzYXRpb25Nb2RhbCk7XG4iXSwibmFtZXMiOlsiY3NzIiwiaHRtbCIsIkxpdEVsZW1lbnQiLCJjbGFzc01hcCIsIkR0TW9kYWwiLCJtc2ciLCJjb252ZXJzYXRpb25Nb2RhbCIsIl9EdE1vZGFsIiwiX2NsYXNzQ2FsbENoZWNrIiwiX2NhbGxTdXBlciIsImFyZ3VtZW50cyIsIl9pbmhlcml0cyIsIl9jcmVhdGVDbGFzcyIsImtleSIsInZhbHVlIiwicmVuZGVyIiwiX3RlbXBsYXRlT2JqZWN0IiwiX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbCIsIl9kaWFsb2dDbGljayIsIl9kaWFsb2dLZXlwcmVzcyIsImNsYWltZWQiLCJjb252b2lkIiwidXNlcmlkIiwiSlNPTiIsInN0cmluZ2lmeSIsImNvbnZlcnNhdGlvbiIsIl9vcGVuTW9kYWwiLCJnZXQiLCJ0eXBlIiwiT2JqZWN0Iiwib3BlbiIsIkJvb2xlYW4iLCJOdW1iZXIiLCJfdGVtcGxhdGVPYmplY3QyIiwid2luZG93IiwiY3VzdG9tRWxlbWVudHMiLCJkZWZpbmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./assets/js/convo_list/convo_modal.js\n");

/***/ }),

/***/ "./assets/css/styles.css":
/*!*******************************!*\
  !*** ./assets/css/styles.css ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hc3NldHMvY3NzL3N0eWxlcy5jc3MiLCJtYXBwaW5ncyI6IjtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGlzY2lwbGUtdG9vbHMtY29udmVyc2F0aW9ucy8uL2Fzc2V0cy9jc3Mvc3R5bGVzLmNzcz81OWM3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./assets/css/styles.css\n");

/***/ }),

/***/ "./node_modules/@lit/localize/init/runtime.js":
/*!****************************************************!*\
  !*** ./node_modules/@lit/localize/init/runtime.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   configureLocalization: () => (/* binding */ configureLocalization)\n/* harmony export */ });\n/* harmony import */ var _lit_localize_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lit-localize.js */ \"./node_modules/@lit/localize/lit-localize.js\");\n/* harmony import */ var _internal_deferred_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/deferred.js */ \"./node_modules/@lit/localize/internal/deferred.js\");\n/* harmony import */ var _internal_locale_status_event_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/locale-status-event.js */ \"./node_modules/@lit/localize/internal/locale-status-event.js\");\n/* harmony import */ var _internal_runtime_msg_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../internal/runtime-msg.js */ \"./node_modules/@lit/localize/internal/runtime-msg.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n\n\n\n/**\n * Dispatch a \"lit-localize-status\" event to `window` with the given detail.\n */\nfunction dispatchStatusEvent(detail) {\n    window.dispatchEvent(new CustomEvent(_internal_locale_status_event_js__WEBPACK_IMPORTED_MODULE_2__.LOCALE_STATUS_EVENT, { detail }));\n}\nlet activeLocale = '';\nlet loadingLocale;\nlet sourceLocale;\nlet validLocales;\nlet loadLocale;\nlet templates;\nlet loading = new _internal_deferred_js__WEBPACK_IMPORTED_MODULE_1__.Deferred();\n// The loading promise must be initially resolved, because that's what we should\n// return if the user immediately calls setLocale(sourceLocale).\nloading.resolve();\nlet requestId = 0;\n/**\n * Set configuration parameters for lit-localize when in runtime mode. Returns\n * an object with functions:\n *\n * - `getLocale`: Return the active locale code.\n * - `setLocale`: Set the active locale code.\n *\n * Throws if called more than once.\n */\nconst configureLocalization = (config) => {\n    (0,_lit_localize_js__WEBPACK_IMPORTED_MODULE_0__._installMsgImplementation)(((template, options) => (0,_internal_runtime_msg_js__WEBPACK_IMPORTED_MODULE_3__.runtimeMsg)(templates, template, options)));\n    activeLocale = sourceLocale = config.sourceLocale;\n    validLocales = new Set(config.targetLocales);\n    validLocales.add(config.sourceLocale);\n    loadLocale = config.loadLocale;\n    return { getLocale, setLocale };\n};\n/**\n * Return the active locale code.\n */\nconst getLocale = () => {\n    return activeLocale;\n};\n/**\n * Set the active locale code, and begin loading templates for that locale using\n * the `loadLocale` function that was passed to `configureLocalization`. Returns\n * a promise that resolves when the next locale is ready to be rendered.\n *\n * Note that if a second call to `setLocale` is made while the first requested\n * locale is still loading, then the second call takes precedence, and the\n * promise returned from the first call will resolve when second locale is\n * ready. If you need to know whether a particular locale was loaded, check\n * `getLocale` after the promise resolves.\n *\n * Throws if the given locale is not contained by the configured `sourceLocale`\n * or `targetLocales`.\n */\nconst setLocale = (newLocale) => {\n    if (newLocale === (loadingLocale !== null && loadingLocale !== void 0 ? loadingLocale : activeLocale)) {\n        return loading.promise;\n    }\n    if (!validLocales || !loadLocale) {\n        throw new Error('Internal error');\n    }\n    if (!validLocales.has(newLocale)) {\n        throw new Error('Invalid locale code');\n    }\n    requestId++;\n    const thisRequestId = requestId;\n    loadingLocale = newLocale;\n    if (loading.settled) {\n        loading = new _internal_deferred_js__WEBPACK_IMPORTED_MODULE_1__.Deferred();\n    }\n    dispatchStatusEvent({ status: 'loading', loadingLocale: newLocale });\n    const localePromise = newLocale === sourceLocale\n        ? // We could switch to the source locale synchronously, but we prefer to\n            // queue it on a microtask so that switching locales is consistently\n            // asynchronous.\n            Promise.resolve({ templates: undefined })\n        : loadLocale(newLocale);\n    localePromise.then((mod) => {\n        if (requestId === thisRequestId) {\n            activeLocale = newLocale;\n            loadingLocale = undefined;\n            templates = mod.templates;\n            dispatchStatusEvent({ status: 'ready', readyLocale: newLocale });\n            loading.resolve();\n        }\n        // Else another locale was requested in the meantime. Don't resolve or\n        // reject, because the newer load call is going to use the same promise.\n        // Note the user can call getLocale() after the promise resolves if they\n        // need to check if the locale is still the one they expected to load.\n    }, (err) => {\n        if (requestId === thisRequestId) {\n            dispatchStatusEvent({\n                status: 'error',\n                errorLocale: newLocale,\n                errorMessage: err.toString(),\n            });\n            loading.reject(err);\n        }\n    });\n    return loading.promise;\n};\n//# sourceMappingURL=runtime.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGxpdC9sb2NhbGl6ZS9pbml0L3J1bnRpbWUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQytEO0FBQ1o7QUFDc0I7QUFDakI7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsaUZBQW1CLElBQUksUUFBUTtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiwyREFBUTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsSUFBSSwyRUFBeUIseUJBQXlCLG9FQUFVO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsMkRBQVE7QUFDOUI7QUFDQSwwQkFBMEIsNkNBQTZDO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLHNCQUFzQjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MseUNBQXlDO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGlzY2lwbGUtdG9vbHMtY29udmVyc2F0aW9ucy8uL25vZGVfbW9kdWxlcy9AbGl0L2xvY2FsaXplL2luaXQvcnVudGltZS5qcz8zMDM0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTENcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBCU0QtMy1DbGF1c2VcbiAqL1xuaW1wb3J0IHsgX2luc3RhbGxNc2dJbXBsZW1lbnRhdGlvbiB9IGZyb20gJy4uL2xpdC1sb2NhbGl6ZS5qcyc7XG5pbXBvcnQgeyBEZWZlcnJlZCB9IGZyb20gJy4uL2ludGVybmFsL2RlZmVycmVkLmpzJztcbmltcG9ydCB7IExPQ0FMRV9TVEFUVVNfRVZFTlQgfSBmcm9tICcuLi9pbnRlcm5hbC9sb2NhbGUtc3RhdHVzLWV2ZW50LmpzJztcbmltcG9ydCB7IHJ1bnRpbWVNc2cgfSBmcm9tICcuLi9pbnRlcm5hbC9ydW50aW1lLW1zZy5qcyc7XG4vKipcbiAqIERpc3BhdGNoIGEgXCJsaXQtbG9jYWxpemUtc3RhdHVzXCIgZXZlbnQgdG8gYHdpbmRvd2Agd2l0aCB0aGUgZ2l2ZW4gZGV0YWlsLlxuICovXG5mdW5jdGlvbiBkaXNwYXRjaFN0YXR1c0V2ZW50KGRldGFpbCkge1xuICAgIHdpbmRvdy5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudChMT0NBTEVfU1RBVFVTX0VWRU5ULCB7IGRldGFpbCB9KSk7XG59XG5sZXQgYWN0aXZlTG9jYWxlID0gJyc7XG5sZXQgbG9hZGluZ0xvY2FsZTtcbmxldCBzb3VyY2VMb2NhbGU7XG5sZXQgdmFsaWRMb2NhbGVzO1xubGV0IGxvYWRMb2NhbGU7XG5sZXQgdGVtcGxhdGVzO1xubGV0IGxvYWRpbmcgPSBuZXcgRGVmZXJyZWQoKTtcbi8vIFRoZSBsb2FkaW5nIHByb21pc2UgbXVzdCBiZSBpbml0aWFsbHkgcmVzb2x2ZWQsIGJlY2F1c2UgdGhhdCdzIHdoYXQgd2Ugc2hvdWxkXG4vLyByZXR1cm4gaWYgdGhlIHVzZXIgaW1tZWRpYXRlbHkgY2FsbHMgc2V0TG9jYWxlKHNvdXJjZUxvY2FsZSkuXG5sb2FkaW5nLnJlc29sdmUoKTtcbmxldCByZXF1ZXN0SWQgPSAwO1xuLyoqXG4gKiBTZXQgY29uZmlndXJhdGlvbiBwYXJhbWV0ZXJzIGZvciBsaXQtbG9jYWxpemUgd2hlbiBpbiBydW50aW1lIG1vZGUuIFJldHVybnNcbiAqIGFuIG9iamVjdCB3aXRoIGZ1bmN0aW9uczpcbiAqXG4gKiAtIGBnZXRMb2NhbGVgOiBSZXR1cm4gdGhlIGFjdGl2ZSBsb2NhbGUgY29kZS5cbiAqIC0gYHNldExvY2FsZWA6IFNldCB0aGUgYWN0aXZlIGxvY2FsZSBjb2RlLlxuICpcbiAqIFRocm93cyBpZiBjYWxsZWQgbW9yZSB0aGFuIG9uY2UuXG4gKi9cbmV4cG9ydCBjb25zdCBjb25maWd1cmVMb2NhbGl6YXRpb24gPSAoY29uZmlnKSA9PiB7XG4gICAgX2luc3RhbGxNc2dJbXBsZW1lbnRhdGlvbigoKHRlbXBsYXRlLCBvcHRpb25zKSA9PiBydW50aW1lTXNnKHRlbXBsYXRlcywgdGVtcGxhdGUsIG9wdGlvbnMpKSk7XG4gICAgYWN0aXZlTG9jYWxlID0gc291cmNlTG9jYWxlID0gY29uZmlnLnNvdXJjZUxvY2FsZTtcbiAgICB2YWxpZExvY2FsZXMgPSBuZXcgU2V0KGNvbmZpZy50YXJnZXRMb2NhbGVzKTtcbiAgICB2YWxpZExvY2FsZXMuYWRkKGNvbmZpZy5zb3VyY2VMb2NhbGUpO1xuICAgIGxvYWRMb2NhbGUgPSBjb25maWcubG9hZExvY2FsZTtcbiAgICByZXR1cm4geyBnZXRMb2NhbGUsIHNldExvY2FsZSB9O1xufTtcbi8qKlxuICogUmV0dXJuIHRoZSBhY3RpdmUgbG9jYWxlIGNvZGUuXG4gKi9cbmNvbnN0IGdldExvY2FsZSA9ICgpID0+IHtcbiAgICByZXR1cm4gYWN0aXZlTG9jYWxlO1xufTtcbi8qKlxuICogU2V0IHRoZSBhY3RpdmUgbG9jYWxlIGNvZGUsIGFuZCBiZWdpbiBsb2FkaW5nIHRlbXBsYXRlcyBmb3IgdGhhdCBsb2NhbGUgdXNpbmdcbiAqIHRoZSBgbG9hZExvY2FsZWAgZnVuY3Rpb24gdGhhdCB3YXMgcGFzc2VkIHRvIGBjb25maWd1cmVMb2NhbGl6YXRpb25gLiBSZXR1cm5zXG4gKiBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIHRoZSBuZXh0IGxvY2FsZSBpcyByZWFkeSB0byBiZSByZW5kZXJlZC5cbiAqXG4gKiBOb3RlIHRoYXQgaWYgYSBzZWNvbmQgY2FsbCB0byBgc2V0TG9jYWxlYCBpcyBtYWRlIHdoaWxlIHRoZSBmaXJzdCByZXF1ZXN0ZWRcbiAqIGxvY2FsZSBpcyBzdGlsbCBsb2FkaW5nLCB0aGVuIHRoZSBzZWNvbmQgY2FsbCB0YWtlcyBwcmVjZWRlbmNlLCBhbmQgdGhlXG4gKiBwcm9taXNlIHJldHVybmVkIGZyb20gdGhlIGZpcnN0IGNhbGwgd2lsbCByZXNvbHZlIHdoZW4gc2Vjb25kIGxvY2FsZSBpc1xuICogcmVhZHkuIElmIHlvdSBuZWVkIHRvIGtub3cgd2hldGhlciBhIHBhcnRpY3VsYXIgbG9jYWxlIHdhcyBsb2FkZWQsIGNoZWNrXG4gKiBgZ2V0TG9jYWxlYCBhZnRlciB0aGUgcHJvbWlzZSByZXNvbHZlcy5cbiAqXG4gKiBUaHJvd3MgaWYgdGhlIGdpdmVuIGxvY2FsZSBpcyBub3QgY29udGFpbmVkIGJ5IHRoZSBjb25maWd1cmVkIGBzb3VyY2VMb2NhbGVgXG4gKiBvciBgdGFyZ2V0TG9jYWxlc2AuXG4gKi9cbmNvbnN0IHNldExvY2FsZSA9IChuZXdMb2NhbGUpID0+IHtcbiAgICBpZiAobmV3TG9jYWxlID09PSAobG9hZGluZ0xvY2FsZSAhPT0gbnVsbCAmJiBsb2FkaW5nTG9jYWxlICE9PSB2b2lkIDAgPyBsb2FkaW5nTG9jYWxlIDogYWN0aXZlTG9jYWxlKSkge1xuICAgICAgICByZXR1cm4gbG9hZGluZy5wcm9taXNlO1xuICAgIH1cbiAgICBpZiAoIXZhbGlkTG9jYWxlcyB8fCAhbG9hZExvY2FsZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludGVybmFsIGVycm9yJyk7XG4gICAgfVxuICAgIGlmICghdmFsaWRMb2NhbGVzLmhhcyhuZXdMb2NhbGUpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBsb2NhbGUgY29kZScpO1xuICAgIH1cbiAgICByZXF1ZXN0SWQrKztcbiAgICBjb25zdCB0aGlzUmVxdWVzdElkID0gcmVxdWVzdElkO1xuICAgIGxvYWRpbmdMb2NhbGUgPSBuZXdMb2NhbGU7XG4gICAgaWYgKGxvYWRpbmcuc2V0dGxlZCkge1xuICAgICAgICBsb2FkaW5nID0gbmV3IERlZmVycmVkKCk7XG4gICAgfVxuICAgIGRpc3BhdGNoU3RhdHVzRXZlbnQoeyBzdGF0dXM6ICdsb2FkaW5nJywgbG9hZGluZ0xvY2FsZTogbmV3TG9jYWxlIH0pO1xuICAgIGNvbnN0IGxvY2FsZVByb21pc2UgPSBuZXdMb2NhbGUgPT09IHNvdXJjZUxvY2FsZVxuICAgICAgICA/IC8vIFdlIGNvdWxkIHN3aXRjaCB0byB0aGUgc291cmNlIGxvY2FsZSBzeW5jaHJvbm91c2x5LCBidXQgd2UgcHJlZmVyIHRvXG4gICAgICAgICAgICAvLyBxdWV1ZSBpdCBvbiBhIG1pY3JvdGFzayBzbyB0aGF0IHN3aXRjaGluZyBsb2NhbGVzIGlzIGNvbnNpc3RlbnRseVxuICAgICAgICAgICAgLy8gYXN5bmNocm9ub3VzLlxuICAgICAgICAgICAgUHJvbWlzZS5yZXNvbHZlKHsgdGVtcGxhdGVzOiB1bmRlZmluZWQgfSlcbiAgICAgICAgOiBsb2FkTG9jYWxlKG5ld0xvY2FsZSk7XG4gICAgbG9jYWxlUHJvbWlzZS50aGVuKChtb2QpID0+IHtcbiAgICAgICAgaWYgKHJlcXVlc3RJZCA9PT0gdGhpc1JlcXVlc3RJZCkge1xuICAgICAgICAgICAgYWN0aXZlTG9jYWxlID0gbmV3TG9jYWxlO1xuICAgICAgICAgICAgbG9hZGluZ0xvY2FsZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIHRlbXBsYXRlcyA9IG1vZC50ZW1wbGF0ZXM7XG4gICAgICAgICAgICBkaXNwYXRjaFN0YXR1c0V2ZW50KHsgc3RhdHVzOiAncmVhZHknLCByZWFkeUxvY2FsZTogbmV3TG9jYWxlIH0pO1xuICAgICAgICAgICAgbG9hZGluZy5yZXNvbHZlKCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gRWxzZSBhbm90aGVyIGxvY2FsZSB3YXMgcmVxdWVzdGVkIGluIHRoZSBtZWFudGltZS4gRG9uJ3QgcmVzb2x2ZSBvclxuICAgICAgICAvLyByZWplY3QsIGJlY2F1c2UgdGhlIG5ld2VyIGxvYWQgY2FsbCBpcyBnb2luZyB0byB1c2UgdGhlIHNhbWUgcHJvbWlzZS5cbiAgICAgICAgLy8gTm90ZSB0aGUgdXNlciBjYW4gY2FsbCBnZXRMb2NhbGUoKSBhZnRlciB0aGUgcHJvbWlzZSByZXNvbHZlcyBpZiB0aGV5XG4gICAgICAgIC8vIG5lZWQgdG8gY2hlY2sgaWYgdGhlIGxvY2FsZSBpcyBzdGlsbCB0aGUgb25lIHRoZXkgZXhwZWN0ZWQgdG8gbG9hZC5cbiAgICB9LCAoZXJyKSA9PiB7XG4gICAgICAgIGlmIChyZXF1ZXN0SWQgPT09IHRoaXNSZXF1ZXN0SWQpIHtcbiAgICAgICAgICAgIGRpc3BhdGNoU3RhdHVzRXZlbnQoe1xuICAgICAgICAgICAgICAgIHN0YXR1czogJ2Vycm9yJyxcbiAgICAgICAgICAgICAgICBlcnJvckxvY2FsZTogbmV3TG9jYWxlLFxuICAgICAgICAgICAgICAgIGVycm9yTWVzc2FnZTogZXJyLnRvU3RyaW5nKCksXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGxvYWRpbmcucmVqZWN0KGVycik7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gbG9hZGluZy5wcm9taXNlO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJ1bnRpbWUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@lit/localize/init/runtime.js\n");

/***/ }),

/***/ "./node_modules/@lit/localize/init/transform.js":
/*!******************************************************!*\
  !*** ./node_modules/@lit/localize/init/transform.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   configureTransformLocalization: () => (/* binding */ configureTransformLocalization)\n/* harmony export */ });\n/* harmony import */ var _lit_localize_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lit-localize.js */ \"./node_modules/@lit/localize/lit-localize.js\");\n/* harmony import */ var _internal_default_msg_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/default-msg.js */ \"./node_modules/@lit/localize/internal/default-msg.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n\n/**\n * Set configuration parameters for lit-localize when in transform mode. Returns\n * an object with function:\n *\n * - `getLocale`: Return the active locale code.\n *\n * Throws if called more than once.\n */\nconst configureTransformLocalization = (config) => {\n    (0,_lit_localize_js__WEBPACK_IMPORTED_MODULE_0__._installMsgImplementation)(_internal_default_msg_js__WEBPACK_IMPORTED_MODULE_1__.defaultMsg);\n    const sourceLocale = config.sourceLocale;\n    return {\n        getLocale: () => sourceLocale,\n    };\n};\n//# sourceMappingURL=transform.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGxpdC9sb2NhbGl6ZS9pbml0L3RyYW5zZm9ybS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQytEO0FBQ1A7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsSUFBSSwyRUFBeUIsQ0FBQyxnRUFBVTtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kaXNjaXBsZS10b29scy1jb252ZXJzYXRpb25zLy4vbm9kZV9tb2R1bGVzL0BsaXQvbG9jYWxpemUvaW5pdC90cmFuc2Zvcm0uanM/NTEwNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQlNELTMtQ2xhdXNlXG4gKi9cbmltcG9ydCB7IF9pbnN0YWxsTXNnSW1wbGVtZW50YXRpb24gfSBmcm9tICcuLi9saXQtbG9jYWxpemUuanMnO1xuaW1wb3J0IHsgZGVmYXVsdE1zZyB9IGZyb20gJy4uL2ludGVybmFsL2RlZmF1bHQtbXNnLmpzJztcbi8qKlxuICogU2V0IGNvbmZpZ3VyYXRpb24gcGFyYW1ldGVycyBmb3IgbGl0LWxvY2FsaXplIHdoZW4gaW4gdHJhbnNmb3JtIG1vZGUuIFJldHVybnNcbiAqIGFuIG9iamVjdCB3aXRoIGZ1bmN0aW9uOlxuICpcbiAqIC0gYGdldExvY2FsZWA6IFJldHVybiB0aGUgYWN0aXZlIGxvY2FsZSBjb2RlLlxuICpcbiAqIFRocm93cyBpZiBjYWxsZWQgbW9yZSB0aGFuIG9uY2UuXG4gKi9cbmV4cG9ydCBjb25zdCBjb25maWd1cmVUcmFuc2Zvcm1Mb2NhbGl6YXRpb24gPSAoY29uZmlnKSA9PiB7XG4gICAgX2luc3RhbGxNc2dJbXBsZW1lbnRhdGlvbihkZWZhdWx0TXNnKTtcbiAgICBjb25zdCBzb3VyY2VMb2NhbGUgPSBjb25maWcuc291cmNlTG9jYWxlO1xuICAgIHJldHVybiB7XG4gICAgICAgIGdldExvY2FsZTogKCkgPT4gc291cmNlTG9jYWxlLFxuICAgIH07XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHJhbnNmb3JtLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@lit/localize/init/transform.js\n");

/***/ }),

/***/ "./node_modules/@lit/localize/internal/default-msg.js":
/*!************************************************************!*\
  !*** ./node_modules/@lit/localize/internal/default-msg.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultMsg: () => (/* binding */ defaultMsg)\n/* harmony export */ });\n/* harmony import */ var _str_tag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./str-tag.js */ \"./node_modules/@lit/localize/internal/str-tag.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Default identity msg implementation. Simply returns the input template with\n * no awareness of translations. If the template is str-tagged, returns it in\n * string form.\n */\nconst defaultMsg = ((template) => (0,_str_tag_js__WEBPACK_IMPORTED_MODULE_0__.isStrTagged)(template)\n    ? (0,_str_tag_js__WEBPACK_IMPORTED_MODULE_0__.joinStringsAndValues)(template.strings, template.values)\n    : template);\n//# sourceMappingURL=default-msg.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGxpdC9sb2NhbGl6ZS9pbnRlcm5hbC9kZWZhdWx0LW1zZy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDaUU7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLGtDQUFrQyx3REFBVztBQUNwRCxNQUFNLGlFQUFvQjtBQUMxQjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGlzY2lwbGUtdG9vbHMtY29udmVyc2F0aW9ucy8uL25vZGVfbW9kdWxlcy9AbGl0L2xvY2FsaXplL2ludGVybmFsL2RlZmF1bHQtbXNnLmpzPzk3OTQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQ1xuICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEJTRC0zLUNsYXVzZVxuICovXG5pbXBvcnQgeyBpc1N0clRhZ2dlZCwgam9pblN0cmluZ3NBbmRWYWx1ZXMgfSBmcm9tICcuL3N0ci10YWcuanMnO1xuLyoqXG4gKiBEZWZhdWx0IGlkZW50aXR5IG1zZyBpbXBsZW1lbnRhdGlvbi4gU2ltcGx5IHJldHVybnMgdGhlIGlucHV0IHRlbXBsYXRlIHdpdGhcbiAqIG5vIGF3YXJlbmVzcyBvZiB0cmFuc2xhdGlvbnMuIElmIHRoZSB0ZW1wbGF0ZSBpcyBzdHItdGFnZ2VkLCByZXR1cm5zIGl0IGluXG4gKiBzdHJpbmcgZm9ybS5cbiAqL1xuZXhwb3J0IGNvbnN0IGRlZmF1bHRNc2cgPSAoKHRlbXBsYXRlKSA9PiBpc1N0clRhZ2dlZCh0ZW1wbGF0ZSlcbiAgICA/IGpvaW5TdHJpbmdzQW5kVmFsdWVzKHRlbXBsYXRlLnN0cmluZ3MsIHRlbXBsYXRlLnZhbHVlcylcbiAgICA6IHRlbXBsYXRlKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlZmF1bHQtbXNnLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@lit/localize/internal/default-msg.js\n");

/***/ }),

/***/ "./node_modules/@lit/localize/internal/deferred.js":
/*!*********************************************************!*\
  !*** ./node_modules/@lit/localize/internal/deferred.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Deferred: () => (/* binding */ Deferred)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nclass Deferred {\n    constructor() {\n        this.settled = false;\n        this.promise = new Promise((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n    }\n    resolve(value) {\n        this.settled = true;\n        this._resolve(value);\n    }\n    reject(error) {\n        this.settled = true;\n        this._reject(error);\n    }\n}\n//# sourceMappingURL=deferred.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGxpdC9sb2NhbGl6ZS9pbnRlcm5hbC9kZWZlcnJlZC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGlzY2lwbGUtdG9vbHMtY29udmVyc2F0aW9ucy8uL25vZGVfbW9kdWxlcy9AbGl0L2xvY2FsaXplL2ludGVybmFsL2RlZmVycmVkLmpzP2Q5NDYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIExMQ1xuICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEJTRC0zLUNsYXVzZVxuICovXG5leHBvcnQgY2xhc3MgRGVmZXJyZWQge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnNldHRsZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5wcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5fcmVzb2x2ZSA9IHJlc29sdmU7XG4gICAgICAgICAgICB0aGlzLl9yZWplY3QgPSByZWplY3Q7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXNvbHZlKHZhbHVlKSB7XG4gICAgICAgIHRoaXMuc2V0dGxlZCA9IHRydWU7XG4gICAgICAgIHRoaXMuX3Jlc29sdmUodmFsdWUpO1xuICAgIH1cbiAgICByZWplY3QoZXJyb3IpIHtcbiAgICAgICAgdGhpcy5zZXR0bGVkID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5fcmVqZWN0KGVycm9yKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWZlcnJlZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@lit/localize/internal/deferred.js\n");

/***/ }),

/***/ "./node_modules/@lit/localize/internal/fnv1a64.js":
/*!********************************************************!*\
  !*** ./node_modules/@lit/localize/internal/fnv1a64.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fnv1a64: () => (/* binding */ fnv1a64)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2014 Travis Webb\n * SPDX-License-Identifier: MIT\n */\n// This module is derived from the file:\n// https://github.com/tjwebb/fnv-plus/blob/1e2ce68a07cb7dd4c3c85364f3d8d96c95919474/index.js#L309\n//\n// Changes:\n// - Only the _hash64_1a_fast function is included.\n// - Removed loop unrolling.\n// - Converted to TypeScript ES module.\n// - var -> let/const\n//\n// TODO(aomarks) Upstream improvements to https://github.com/tjwebb/fnv-plus/.\nconst hl = [];\nfor (let i = 0; i < 256; i++) {\n    hl[i] = ((i >> 4) & 15).toString(16) + (i & 15).toString(16);\n}\n/**\n * Perform a FNV-1A 64-bit hash of the given string (as UTF-16 code units), and\n * return a hexadecimal digest (left zero padded to 16 characters).\n *\n * @see {@link http://tools.ietf.org/html/draft-eastlake-fnv-06}\n */\nfunction fnv1a64(str) {\n    let t0 = 0, v0 = 0x2325, t1 = 0, v1 = 0x8422, t2 = 0, v2 = 0x9ce4, t3 = 0, v3 = 0xcbf2;\n    for (let i = 0; i < str.length; i++) {\n        v0 ^= str.charCodeAt(i);\n        t0 = v0 * 435;\n        t1 = v1 * 435;\n        t2 = v2 * 435;\n        t3 = v3 * 435;\n        t2 += v0 << 8;\n        t3 += v1 << 8;\n        t1 += t0 >>> 16;\n        v0 = t0 & 65535;\n        t2 += t1 >>> 16;\n        v1 = t1 & 65535;\n        v3 = (t3 + (t2 >>> 16)) & 65535;\n        v2 = t2 & 65535;\n    }\n    return (hl[v3 >> 8] +\n        hl[v3 & 255] +\n        hl[v2 >> 8] +\n        hl[v2 & 255] +\n        hl[v1 >> 8] +\n        hl[v1 & 255] +\n        hl[v0 >> 8] +\n        hl[v0 & 255]);\n}\n//# sourceMappingURL=fnv1a64.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGxpdC9sb2NhbGl6ZS9pbnRlcm5hbC9mbnYxYTY0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixTQUFTO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNPO0FBQ1A7QUFDQSxvQkFBb0IsZ0JBQWdCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Rpc2NpcGxlLXRvb2xzLWNvbnZlcnNhdGlvbnMvLi9ub2RlX21vZHVsZXMvQGxpdC9sb2NhbGl6ZS9pbnRlcm5hbC9mbnYxYTY0LmpzPzA5ZTAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTQgVHJhdmlzIFdlYmJcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbiAqL1xuLy8gVGhpcyBtb2R1bGUgaXMgZGVyaXZlZCBmcm9tIHRoZSBmaWxlOlxuLy8gaHR0cHM6Ly9naXRodWIuY29tL3Rqd2ViYi9mbnYtcGx1cy9ibG9iLzFlMmNlNjhhMDdjYjdkZDRjM2M4NTM2NGYzZDhkOTZjOTU5MTk0NzQvaW5kZXguanMjTDMwOVxuLy9cbi8vIENoYW5nZXM6XG4vLyAtIE9ubHkgdGhlIF9oYXNoNjRfMWFfZmFzdCBmdW5jdGlvbiBpcyBpbmNsdWRlZC5cbi8vIC0gUmVtb3ZlZCBsb29wIHVucm9sbGluZy5cbi8vIC0gQ29udmVydGVkIHRvIFR5cGVTY3JpcHQgRVMgbW9kdWxlLlxuLy8gLSB2YXIgLT4gbGV0L2NvbnN0XG4vL1xuLy8gVE9ETyhhb21hcmtzKSBVcHN0cmVhbSBpbXByb3ZlbWVudHMgdG8gaHR0cHM6Ly9naXRodWIuY29tL3Rqd2ViYi9mbnYtcGx1cy8uXG5jb25zdCBobCA9IFtdO1xuZm9yIChsZXQgaSA9IDA7IGkgPCAyNTY7IGkrKykge1xuICAgIGhsW2ldID0gKChpID4+IDQpICYgMTUpLnRvU3RyaW5nKDE2KSArIChpICYgMTUpLnRvU3RyaW5nKDE2KTtcbn1cbi8qKlxuICogUGVyZm9ybSBhIEZOVi0xQSA2NC1iaXQgaGFzaCBvZiB0aGUgZ2l2ZW4gc3RyaW5nIChhcyBVVEYtMTYgY29kZSB1bml0cyksIGFuZFxuICogcmV0dXJuIGEgaGV4YWRlY2ltYWwgZGlnZXN0IChsZWZ0IHplcm8gcGFkZGVkIHRvIDE2IGNoYXJhY3RlcnMpLlxuICpcbiAqIEBzZWUge0BsaW5rIGh0dHA6Ly90b29scy5pZXRmLm9yZy9odG1sL2RyYWZ0LWVhc3RsYWtlLWZudi0wNn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZudjFhNjQoc3RyKSB7XG4gICAgbGV0IHQwID0gMCwgdjAgPSAweDIzMjUsIHQxID0gMCwgdjEgPSAweDg0MjIsIHQyID0gMCwgdjIgPSAweDljZTQsIHQzID0gMCwgdjMgPSAweGNiZjI7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzdHIubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdjAgXj0gc3RyLmNoYXJDb2RlQXQoaSk7XG4gICAgICAgIHQwID0gdjAgKiA0MzU7XG4gICAgICAgIHQxID0gdjEgKiA0MzU7XG4gICAgICAgIHQyID0gdjIgKiA0MzU7XG4gICAgICAgIHQzID0gdjMgKiA0MzU7XG4gICAgICAgIHQyICs9IHYwIDw8IDg7XG4gICAgICAgIHQzICs9IHYxIDw8IDg7XG4gICAgICAgIHQxICs9IHQwID4+PiAxNjtcbiAgICAgICAgdjAgPSB0MCAmIDY1NTM1O1xuICAgICAgICB0MiArPSB0MSA+Pj4gMTY7XG4gICAgICAgIHYxID0gdDEgJiA2NTUzNTtcbiAgICAgICAgdjMgPSAodDMgKyAodDIgPj4+IDE2KSkgJiA2NTUzNTtcbiAgICAgICAgdjIgPSB0MiAmIDY1NTM1O1xuICAgIH1cbiAgICByZXR1cm4gKGhsW3YzID4+IDhdICtcbiAgICAgICAgaGxbdjMgJiAyNTVdICtcbiAgICAgICAgaGxbdjIgPj4gOF0gK1xuICAgICAgICBobFt2MiAmIDI1NV0gK1xuICAgICAgICBobFt2MSA+PiA4XSArXG4gICAgICAgIGhsW3YxICYgMjU1XSArXG4gICAgICAgIGhsW3YwID4+IDhdICtcbiAgICAgICAgaGxbdjAgJiAyNTVdKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZudjFhNjQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@lit/localize/internal/fnv1a64.js\n");

/***/ }),

/***/ "./node_modules/@lit/localize/internal/id-generation.js":
/*!**************************************************************!*\
  !*** ./node_modules/@lit/localize/internal/id-generation.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HASH_DELIMITER: () => (/* binding */ HASH_DELIMITER),\n/* harmony export */   generateMsgId: () => (/* binding */ generateMsgId)\n/* harmony export */ });\n/* harmony import */ var _fnv1a64_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fnv1a64.js */ \"./node_modules/@lit/localize/internal/fnv1a64.js\");\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Delimiter used between each template string component before hashing. Used to\n * prevent e.g. \"foobar\" and \"foo${baz}bar\" from sharing a hash.\n *\n * This is the \"record separator\" ASCII character.\n */\nconst HASH_DELIMITER = '\\x1e';\n/**\n * Id prefix on html-tagged templates to distinguish e.g. `<b>x</b>` from\n * html`<b>x</b>`.\n */\nconst HTML_PREFIX = 'h';\n/**\n * Id prefix on plain string templates to distinguish e.g. `<b>x</b>` from\n * html`<b>x</b>`.\n */\nconst STRING_PREFIX = 's';\n/**\n * Generate a unique ID for a lit-localize message.\n *\n * Example:\n *   Template: html`Hello <b>${who}</b>!`\n *     Params: [\"Hello <b>\", \"</b>!\"], true\n *     Output: h82ccc38d4d46eaa9\n *\n * The ID is constructed as:\n *\n *   [0]    Kind of template: [h]tml or [s]tring.\n *   [1,16] 64-bit FNV-1a hash hex digest of the template strings, as UTF-16\n *          code points, delineated by an ASCII \"record separator\" character.\n *\n * We choose FNV-1a because:\n *\n *   1. It's pretty fast (e.g. much faster than SHA-1).\n *   2. It's pretty small (0.25 KiB minified + brotli).\n *   3. We don't require cryptographic security, and 64 bits should give\n *      sufficient collision resistance for any one application. Worst\n *      case, we will always detect collisions during analysis.\n *   4. We can't use Web Crypto API (e.g. SHA-1), because it's asynchronous.\n *   5. It's a well known non-cryptographic hash with implementations in many\n *      languages.\n *   6. There was an existing JavaScript implementation that doesn't require\n *      BigInt, for IE11 compatibility.\n */\nfunction generateMsgId(strings, isHtmlTagged) {\n    return ((isHtmlTagged ? HTML_PREFIX : STRING_PREFIX) +\n        (0,_fnv1a64_js__WEBPACK_IMPORTED_MODULE_0__.fnv1a64)(typeof strings === 'string' ? strings : strings.join(HASH_DELIMITER)));\n}\n//# sourceMappingURL=id-generation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGxpdC9sb2NhbGl6ZS9pbnRlcm5hbC9pZC1nZW5lcmF0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDdUM7QUFDdkM7QUFDQTtBQUNBLG1DQUFtQyxJQUFJO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQixJQUFJO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLFFBQVEsb0RBQU87QUFDZjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGlzY2lwbGUtdG9vbHMtY29udmVyc2F0aW9ucy8uL25vZGVfbW9kdWxlcy9AbGl0L2xvY2FsaXplL2ludGVybmFsL2lkLWdlbmVyYXRpb24uanM/M2UxYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQlNELTMtQ2xhdXNlXG4gKi9cbmltcG9ydCB7IGZudjFhNjQgfSBmcm9tICcuL2ZudjFhNjQuanMnO1xuLyoqXG4gKiBEZWxpbWl0ZXIgdXNlZCBiZXR3ZWVuIGVhY2ggdGVtcGxhdGUgc3RyaW5nIGNvbXBvbmVudCBiZWZvcmUgaGFzaGluZy4gVXNlZCB0b1xuICogcHJldmVudCBlLmcuIFwiZm9vYmFyXCIgYW5kIFwiZm9vJHtiYXp9YmFyXCIgZnJvbSBzaGFyaW5nIGEgaGFzaC5cbiAqXG4gKiBUaGlzIGlzIHRoZSBcInJlY29yZCBzZXBhcmF0b3JcIiBBU0NJSSBjaGFyYWN0ZXIuXG4gKi9cbmV4cG9ydCBjb25zdCBIQVNIX0RFTElNSVRFUiA9ICdcXHgxZSc7XG4vKipcbiAqIElkIHByZWZpeCBvbiBodG1sLXRhZ2dlZCB0ZW1wbGF0ZXMgdG8gZGlzdGluZ3Vpc2ggZS5nLiBgPGI+eDwvYj5gIGZyb21cbiAqIGh0bWxgPGI+eDwvYj5gLlxuICovXG5jb25zdCBIVE1MX1BSRUZJWCA9ICdoJztcbi8qKlxuICogSWQgcHJlZml4IG9uIHBsYWluIHN0cmluZyB0ZW1wbGF0ZXMgdG8gZGlzdGluZ3Vpc2ggZS5nLiBgPGI+eDwvYj5gIGZyb21cbiAqIGh0bWxgPGI+eDwvYj5gLlxuICovXG5jb25zdCBTVFJJTkdfUFJFRklYID0gJ3MnO1xuLyoqXG4gKiBHZW5lcmF0ZSBhIHVuaXF1ZSBJRCBmb3IgYSBsaXQtbG9jYWxpemUgbWVzc2FnZS5cbiAqXG4gKiBFeGFtcGxlOlxuICogICBUZW1wbGF0ZTogaHRtbGBIZWxsbyA8Yj4ke3dob308L2I+IWBcbiAqICAgICBQYXJhbXM6IFtcIkhlbGxvIDxiPlwiLCBcIjwvYj4hXCJdLCB0cnVlXG4gKiAgICAgT3V0cHV0OiBoODJjY2MzOGQ0ZDQ2ZWFhOVxuICpcbiAqIFRoZSBJRCBpcyBjb25zdHJ1Y3RlZCBhczpcbiAqXG4gKiAgIFswXSAgICBLaW5kIG9mIHRlbXBsYXRlOiBbaF10bWwgb3IgW3NddHJpbmcuXG4gKiAgIFsxLDE2XSA2NC1iaXQgRk5WLTFhIGhhc2ggaGV4IGRpZ2VzdCBvZiB0aGUgdGVtcGxhdGUgc3RyaW5ncywgYXMgVVRGLTE2XG4gKiAgICAgICAgICBjb2RlIHBvaW50cywgZGVsaW5lYXRlZCBieSBhbiBBU0NJSSBcInJlY29yZCBzZXBhcmF0b3JcIiBjaGFyYWN0ZXIuXG4gKlxuICogV2UgY2hvb3NlIEZOVi0xYSBiZWNhdXNlOlxuICpcbiAqICAgMS4gSXQncyBwcmV0dHkgZmFzdCAoZS5nLiBtdWNoIGZhc3RlciB0aGFuIFNIQS0xKS5cbiAqICAgMi4gSXQncyBwcmV0dHkgc21hbGwgKDAuMjUgS2lCIG1pbmlmaWVkICsgYnJvdGxpKS5cbiAqICAgMy4gV2UgZG9uJ3QgcmVxdWlyZSBjcnlwdG9ncmFwaGljIHNlY3VyaXR5LCBhbmQgNjQgYml0cyBzaG91bGQgZ2l2ZVxuICogICAgICBzdWZmaWNpZW50IGNvbGxpc2lvbiByZXNpc3RhbmNlIGZvciBhbnkgb25lIGFwcGxpY2F0aW9uLiBXb3JzdFxuICogICAgICBjYXNlLCB3ZSB3aWxsIGFsd2F5cyBkZXRlY3QgY29sbGlzaW9ucyBkdXJpbmcgYW5hbHlzaXMuXG4gKiAgIDQuIFdlIGNhbid0IHVzZSBXZWIgQ3J5cHRvIEFQSSAoZS5nLiBTSEEtMSksIGJlY2F1c2UgaXQncyBhc3luY2hyb25vdXMuXG4gKiAgIDUuIEl0J3MgYSB3ZWxsIGtub3duIG5vbi1jcnlwdG9ncmFwaGljIGhhc2ggd2l0aCBpbXBsZW1lbnRhdGlvbnMgaW4gbWFueVxuICogICAgICBsYW5ndWFnZXMuXG4gKiAgIDYuIFRoZXJlIHdhcyBhbiBleGlzdGluZyBKYXZhU2NyaXB0IGltcGxlbWVudGF0aW9uIHRoYXQgZG9lc24ndCByZXF1aXJlXG4gKiAgICAgIEJpZ0ludCwgZm9yIElFMTEgY29tcGF0aWJpbGl0eS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlTXNnSWQoc3RyaW5ncywgaXNIdG1sVGFnZ2VkKSB7XG4gICAgcmV0dXJuICgoaXNIdG1sVGFnZ2VkID8gSFRNTF9QUkVGSVggOiBTVFJJTkdfUFJFRklYKSArXG4gICAgICAgIGZudjFhNjQodHlwZW9mIHN0cmluZ3MgPT09ICdzdHJpbmcnID8gc3RyaW5ncyA6IHN0cmluZ3Muam9pbihIQVNIX0RFTElNSVRFUikpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlkLWdlbmVyYXRpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@lit/localize/internal/id-generation.js\n");

/***/ }),

/***/ "./node_modules/@lit/localize/internal/locale-status-event.js":
/*!********************************************************************!*\
  !*** ./node_modules/@lit/localize/internal/locale-status-event.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LOCALE_STATUS_EVENT: () => (/* binding */ LOCALE_STATUS_EVENT)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/**\n * Name of the event dispatched to `window` whenever a locale change starts,\n * finishes successfully, or fails. Only relevant to runtime mode.\n *\n * The `detail` of this event is an object with a `status` string that can be:\n * \"loading\", \"ready\", or \"error\", along with the relevant locale code, and\n * error message if applicable.\n *\n * You can listen for this event to know when your application should be\n * re-rendered following a locale change. See also the Localized mixin, which\n * automatically re-renders LitElement classes using this event.\n */\nconst LOCALE_STATUS_EVENT = 'lit-localize-status';\n//# sourceMappingURL=locale-status-event.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGxpdC9sb2NhbGl6ZS9pbnRlcm5hbC9sb2NhbGUtc3RhdHVzLWV2ZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCIsInNvdXJjZXMiOlsid2VicGFjazovL2Rpc2NpcGxlLXRvb2xzLWNvbnZlcnNhdGlvbnMvLi9ub2RlX21vZHVsZXMvQGxpdC9sb2NhbGl6ZS9pbnRlcm5hbC9sb2NhbGUtc3RhdHVzLWV2ZW50LmpzP2YyODAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQ1xuICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEJTRC0zLUNsYXVzZVxuICovXG4vKipcbiAqIE5hbWUgb2YgdGhlIGV2ZW50IGRpc3BhdGNoZWQgdG8gYHdpbmRvd2Agd2hlbmV2ZXIgYSBsb2NhbGUgY2hhbmdlIHN0YXJ0cyxcbiAqIGZpbmlzaGVzIHN1Y2Nlc3NmdWxseSwgb3IgZmFpbHMuIE9ubHkgcmVsZXZhbnQgdG8gcnVudGltZSBtb2RlLlxuICpcbiAqIFRoZSBgZGV0YWlsYCBvZiB0aGlzIGV2ZW50IGlzIGFuIG9iamVjdCB3aXRoIGEgYHN0YXR1c2Agc3RyaW5nIHRoYXQgY2FuIGJlOlxuICogXCJsb2FkaW5nXCIsIFwicmVhZHlcIiwgb3IgXCJlcnJvclwiLCBhbG9uZyB3aXRoIHRoZSByZWxldmFudCBsb2NhbGUgY29kZSwgYW5kXG4gKiBlcnJvciBtZXNzYWdlIGlmIGFwcGxpY2FibGUuXG4gKlxuICogWW91IGNhbiBsaXN0ZW4gZm9yIHRoaXMgZXZlbnQgdG8ga25vdyB3aGVuIHlvdXIgYXBwbGljYXRpb24gc2hvdWxkIGJlXG4gKiByZS1yZW5kZXJlZCBmb2xsb3dpbmcgYSBsb2NhbGUgY2hhbmdlLiBTZWUgYWxzbyB0aGUgTG9jYWxpemVkIG1peGluLCB3aGljaFxuICogYXV0b21hdGljYWxseSByZS1yZW5kZXJzIExpdEVsZW1lbnQgY2xhc3NlcyB1c2luZyB0aGlzIGV2ZW50LlxuICovXG5leHBvcnQgY29uc3QgTE9DQUxFX1NUQVRVU19FVkVOVCA9ICdsaXQtbG9jYWxpemUtc3RhdHVzJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvY2FsZS1zdGF0dXMtZXZlbnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@lit/localize/internal/locale-status-event.js\n");

/***/ }),

/***/ "./node_modules/@lit/localize/internal/localized-controller.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@lit/localize/internal/localized-controller.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   updateWhenLocaleChanges: () => (/* binding */ updateWhenLocaleChanges)\n/* harmony export */ });\n/* harmony import */ var _locale_status_event_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./locale-status-event.js */ \"./node_modules/@lit/localize/internal/locale-status-event.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nclass LocalizeController {\n    constructor(host) {\n        this.__litLocalizeEventHandler = (event) => {\n            if (event.detail.status === 'ready') {\n                this.host.requestUpdate();\n            }\n        };\n        this.host = host;\n    }\n    hostConnected() {\n        window.addEventListener(_locale_status_event_js__WEBPACK_IMPORTED_MODULE_0__.LOCALE_STATUS_EVENT, this.__litLocalizeEventHandler);\n    }\n    hostDisconnected() {\n        window.removeEventListener(_locale_status_event_js__WEBPACK_IMPORTED_MODULE_0__.LOCALE_STATUS_EVENT, this.__litLocalizeEventHandler);\n    }\n}\n/**\n * Re-render the given LitElement whenever a new active locale has loaded.\n *\n * See also {@link localized} for the same functionality as a decorator.\n *\n * When using lit-localize in transform mode, calls to this function are\n * replaced with undefined.\n *\n * Usage:\n *\n *   import {LitElement, html} from 'lit';\n *   import {msg, updateWhenLocaleChanges} from '@lit/localize';\n *\n *   class MyElement extends LitElement {\n *     constructor() {\n *       super();\n *       updateWhenLocaleChanges(this);\n *     }\n *\n *     render() {\n *       return html`<b>${msg('Hello World')}</b>`;\n *     }\n *   }\n */\nconst _updateWhenLocaleChanges = (host) => host.addController(new LocalizeController(host));\nconst updateWhenLocaleChanges = _updateWhenLocaleChanges;\n//# sourceMappingURL=localized-controller.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGxpdC9sb2NhbGl6ZS9pbnRlcm5hbC9sb2NhbGl6ZWQtY29udHJvbGxlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDK0Q7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0Msd0VBQW1CO0FBQ25EO0FBQ0E7QUFDQSxtQ0FBbUMsd0VBQW1CO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLGlCQUFpQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLGtCQUFrQjtBQUMvQixhQUFhLDhCQUE4QjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLG1CQUFtQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kaXNjaXBsZS10b29scy1jb252ZXJzYXRpb25zLy4vbm9kZV9tb2R1bGVzL0BsaXQvbG9jYWxpemUvaW50ZXJuYWwvbG9jYWxpemVkLWNvbnRyb2xsZXIuanM/NDU5MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQlNELTMtQ2xhdXNlXG4gKi9cbmltcG9ydCB7IExPQ0FMRV9TVEFUVVNfRVZFTlQgfSBmcm9tICcuL2xvY2FsZS1zdGF0dXMtZXZlbnQuanMnO1xuY2xhc3MgTG9jYWxpemVDb250cm9sbGVyIHtcbiAgICBjb25zdHJ1Y3Rvcihob3N0KSB7XG4gICAgICAgIHRoaXMuX19saXRMb2NhbGl6ZUV2ZW50SGFuZGxlciA9IChldmVudCkgPT4ge1xuICAgICAgICAgICAgaWYgKGV2ZW50LmRldGFpbC5zdGF0dXMgPT09ICdyZWFkeScpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmhvc3QucmVxdWVzdFVwZGF0ZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICB0aGlzLmhvc3QgPSBob3N0O1xuICAgIH1cbiAgICBob3N0Q29ubmVjdGVkKCkge1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihMT0NBTEVfU1RBVFVTX0VWRU5ULCB0aGlzLl9fbGl0TG9jYWxpemVFdmVudEhhbmRsZXIpO1xuICAgIH1cbiAgICBob3N0RGlzY29ubmVjdGVkKCkge1xuICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihMT0NBTEVfU1RBVFVTX0VWRU5ULCB0aGlzLl9fbGl0TG9jYWxpemVFdmVudEhhbmRsZXIpO1xuICAgIH1cbn1cbi8qKlxuICogUmUtcmVuZGVyIHRoZSBnaXZlbiBMaXRFbGVtZW50IHdoZW5ldmVyIGEgbmV3IGFjdGl2ZSBsb2NhbGUgaGFzIGxvYWRlZC5cbiAqXG4gKiBTZWUgYWxzbyB7QGxpbmsgbG9jYWxpemVkfSBmb3IgdGhlIHNhbWUgZnVuY3Rpb25hbGl0eSBhcyBhIGRlY29yYXRvci5cbiAqXG4gKiBXaGVuIHVzaW5nIGxpdC1sb2NhbGl6ZSBpbiB0cmFuc2Zvcm0gbW9kZSwgY2FsbHMgdG8gdGhpcyBmdW5jdGlvbiBhcmVcbiAqIHJlcGxhY2VkIHdpdGggdW5kZWZpbmVkLlxuICpcbiAqIFVzYWdlOlxuICpcbiAqICAgaW1wb3J0IHtMaXRFbGVtZW50LCBodG1sfSBmcm9tICdsaXQnO1xuICogICBpbXBvcnQge21zZywgdXBkYXRlV2hlbkxvY2FsZUNoYW5nZXN9IGZyb20gJ0BsaXQvbG9jYWxpemUnO1xuICpcbiAqICAgY2xhc3MgTXlFbGVtZW50IGV4dGVuZHMgTGl0RWxlbWVudCB7XG4gKiAgICAgY29uc3RydWN0b3IoKSB7XG4gKiAgICAgICBzdXBlcigpO1xuICogICAgICAgdXBkYXRlV2hlbkxvY2FsZUNoYW5nZXModGhpcyk7XG4gKiAgICAgfVxuICpcbiAqICAgICByZW5kZXIoKSB7XG4gKiAgICAgICByZXR1cm4gaHRtbGA8Yj4ke21zZygnSGVsbG8gV29ybGQnKX08L2I+YDtcbiAqICAgICB9XG4gKiAgIH1cbiAqL1xuY29uc3QgX3VwZGF0ZVdoZW5Mb2NhbGVDaGFuZ2VzID0gKGhvc3QpID0+IGhvc3QuYWRkQ29udHJvbGxlcihuZXcgTG9jYWxpemVDb250cm9sbGVyKGhvc3QpKTtcbmV4cG9ydCBjb25zdCB1cGRhdGVXaGVuTG9jYWxlQ2hhbmdlcyA9IF91cGRhdGVXaGVuTG9jYWxlQ2hhbmdlcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvY2FsaXplZC1jb250cm9sbGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@lit/localize/internal/localized-controller.js\n");

/***/ }),

/***/ "./node_modules/@lit/localize/internal/localized-decorator.js":
/*!********************************************************************!*\
  !*** ./node_modules/@lit/localize/internal/localized-decorator.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   localized: () => (/* binding */ localized)\n/* harmony export */ });\n/* harmony import */ var _localized_controller_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./localized-controller.js */ \"./node_modules/@lit/localize/internal/localized-controller.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Class decorator to enable re-rendering the given LitElement whenever a new\n * active locale has loaded.\n *\n * See also {@link updateWhenLocaleChanges} for the same functionality without\n * the use of decorators.\n *\n * When using lit-localize in transform mode, applications of this decorator are\n * removed.\n *\n * Usage:\n *\n *   import {LitElement, html} from 'lit';\n *   import {customElement} from 'lit/decorators.js';\n *   import {msg, localized} from '@lit/localize';\n *\n *   @localized()\n *   @customElement('my-element')\n *   class MyElement extends LitElement {\n *     render() {\n *       return html`<b>${msg('Hello World')}</b>`;\n *     }\n *   }\n */\nconst _localized = () => (classOrDescriptor) => typeof classOrDescriptor === 'function'\n    ? legacyLocalized(classOrDescriptor)\n    : standardLocalized(classOrDescriptor);\nconst localized = _localized;\nconst standardLocalized = ({ kind, elements }) => {\n    return {\n        kind,\n        elements,\n        finisher(clazz) {\n            clazz.addInitializer(_localized_controller_js__WEBPACK_IMPORTED_MODULE_0__.updateWhenLocaleChanges);\n        },\n    };\n};\nconst legacyLocalized = (clazz) => {\n    clazz.addInitializer(_localized_controller_js__WEBPACK_IMPORTED_MODULE_0__.updateWhenLocaleChanges);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return clazz;\n};\n//# sourceMappingURL=localized-decorator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGxpdC9sb2NhbGl6ZS9pbnRlcm5hbC9sb2NhbGl6ZWQtZGVjb3JhdG9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNvRTtBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsK0JBQStCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxrQkFBa0I7QUFDL0IsYUFBYSxlQUFlO0FBQzVCLGFBQWEsZ0JBQWdCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsbUJBQW1CO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsNkJBQTZCLGdCQUFnQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyw2RUFBdUI7QUFDeEQsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qiw2RUFBdUI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kaXNjaXBsZS10b29scy1jb252ZXJzYXRpb25zLy4vbm9kZV9tb2R1bGVzL0BsaXQvbG9jYWxpemUvaW50ZXJuYWwvbG9jYWxpemVkLWRlY29yYXRvci5qcz9kMWNkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTENcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBCU0QtMy1DbGF1c2VcbiAqL1xuaW1wb3J0IHsgdXBkYXRlV2hlbkxvY2FsZUNoYW5nZXMgfSBmcm9tICcuL2xvY2FsaXplZC1jb250cm9sbGVyLmpzJztcbi8qKlxuICogQ2xhc3MgZGVjb3JhdG9yIHRvIGVuYWJsZSByZS1yZW5kZXJpbmcgdGhlIGdpdmVuIExpdEVsZW1lbnQgd2hlbmV2ZXIgYSBuZXdcbiAqIGFjdGl2ZSBsb2NhbGUgaGFzIGxvYWRlZC5cbiAqXG4gKiBTZWUgYWxzbyB7QGxpbmsgdXBkYXRlV2hlbkxvY2FsZUNoYW5nZXN9IGZvciB0aGUgc2FtZSBmdW5jdGlvbmFsaXR5IHdpdGhvdXRcbiAqIHRoZSB1c2Ugb2YgZGVjb3JhdG9ycy5cbiAqXG4gKiBXaGVuIHVzaW5nIGxpdC1sb2NhbGl6ZSBpbiB0cmFuc2Zvcm0gbW9kZSwgYXBwbGljYXRpb25zIG9mIHRoaXMgZGVjb3JhdG9yIGFyZVxuICogcmVtb3ZlZC5cbiAqXG4gKiBVc2FnZTpcbiAqXG4gKiAgIGltcG9ydCB7TGl0RWxlbWVudCwgaHRtbH0gZnJvbSAnbGl0JztcbiAqICAgaW1wb3J0IHtjdXN0b21FbGVtZW50fSBmcm9tICdsaXQvZGVjb3JhdG9ycy5qcyc7XG4gKiAgIGltcG9ydCB7bXNnLCBsb2NhbGl6ZWR9IGZyb20gJ0BsaXQvbG9jYWxpemUnO1xuICpcbiAqICAgQGxvY2FsaXplZCgpXG4gKiAgIEBjdXN0b21FbGVtZW50KCdteS1lbGVtZW50JylcbiAqICAgY2xhc3MgTXlFbGVtZW50IGV4dGVuZHMgTGl0RWxlbWVudCB7XG4gKiAgICAgcmVuZGVyKCkge1xuICogICAgICAgcmV0dXJuIGh0bWxgPGI+JHttc2coJ0hlbGxvIFdvcmxkJyl9PC9iPmA7XG4gKiAgICAgfVxuICogICB9XG4gKi9cbmNvbnN0IF9sb2NhbGl6ZWQgPSAoKSA9PiAoY2xhc3NPckRlc2NyaXB0b3IpID0+IHR5cGVvZiBjbGFzc09yRGVzY3JpcHRvciA9PT0gJ2Z1bmN0aW9uJ1xuICAgID8gbGVnYWN5TG9jYWxpemVkKGNsYXNzT3JEZXNjcmlwdG9yKVxuICAgIDogc3RhbmRhcmRMb2NhbGl6ZWQoY2xhc3NPckRlc2NyaXB0b3IpO1xuZXhwb3J0IGNvbnN0IGxvY2FsaXplZCA9IF9sb2NhbGl6ZWQ7XG5jb25zdCBzdGFuZGFyZExvY2FsaXplZCA9ICh7IGtpbmQsIGVsZW1lbnRzIH0pID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICBraW5kLFxuICAgICAgICBlbGVtZW50cyxcbiAgICAgICAgZmluaXNoZXIoY2xhenopIHtcbiAgICAgICAgICAgIGNsYXp6LmFkZEluaXRpYWxpemVyKHVwZGF0ZVdoZW5Mb2NhbGVDaGFuZ2VzKTtcbiAgICAgICAgfSxcbiAgICB9O1xufTtcbmNvbnN0IGxlZ2FjeUxvY2FsaXplZCA9IChjbGF6eikgPT4ge1xuICAgIGNsYXp6LmFkZEluaXRpYWxpemVyKHVwZGF0ZVdoZW5Mb2NhbGVDaGFuZ2VzKTtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICAgIHJldHVybiBjbGF6ejtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sb2NhbGl6ZWQtZGVjb3JhdG9yLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@lit/localize/internal/localized-decorator.js\n");

/***/ }),

/***/ "./node_modules/@lit/localize/internal/runtime-msg.js":
/*!************************************************************!*\
  !*** ./node_modules/@lit/localize/internal/runtime-msg.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   runtimeMsg: () => (/* binding */ runtimeMsg)\n/* harmony export */ });\n/* harmony import */ var _default_msg_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./default-msg.js */ \"./node_modules/@lit/localize/internal/default-msg.js\");\n/* harmony import */ var _str_tag_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./str-tag.js */ \"./node_modules/@lit/localize/internal/str-tag.js\");\n/* harmony import */ var _id_generation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./id-generation.js */ \"./node_modules/@lit/localize/internal/id-generation.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n\n\nconst expressionOrders = new WeakMap();\nconst hashCache = new Map();\nfunction runtimeMsg(templates, template, options) {\n    var _a;\n    if (templates) {\n        const id = (_a = options === null || options === void 0 ? void 0 : options.id) !== null && _a !== void 0 ? _a : generateId(template);\n        const localized = templates[id];\n        if (localized) {\n            if (typeof localized === 'string') {\n                // E.g. \"Hello World!\"\n                return localized;\n            }\n            else if ('strTag' in localized) {\n                // E.g. str`Hello ${name}!`\n                //\n                // Localized templates have ${number} in place of real template\n                // expressions. They can't have real template values, because the\n                // variable scope would be wrong. The number tells us the index of the\n                // source value to substitute in its place, because expressions can be\n                // moved to a different position during translation.\n                return (0,_str_tag_js__WEBPACK_IMPORTED_MODULE_1__.joinStringsAndValues)(localized.strings, \n                // Cast `template` because its type wasn't automatically narrowed (but\n                // we know it must be the same type as `localized`).\n                template.values, localized.values);\n            }\n            else {\n                // E.g. html`Hello <b>${name}</b>!`\n                //\n                // We have to keep our own mapping of expression ordering because we do\n                // an in-place update of `values`, and otherwise we'd lose ordering for\n                // subsequent renders.\n                let order = expressionOrders.get(localized);\n                if (order === undefined) {\n                    order = localized.values;\n                    expressionOrders.set(localized, order);\n                }\n                return {\n                    ...localized,\n                    values: order.map((i) => template.values[i]),\n                };\n            }\n        }\n    }\n    return (0,_default_msg_js__WEBPACK_IMPORTED_MODULE_0__.defaultMsg)(template);\n}\nfunction generateId(template) {\n    const strings = typeof template === 'string' ? template : template.strings;\n    let id = hashCache.get(strings);\n    if (id === undefined) {\n        id = (0,_id_generation_js__WEBPACK_IMPORTED_MODULE_2__.generateMsgId)(strings, typeof template !== 'string' && !('strTag' in template));\n        hashCache.set(strings, id);\n    }\n    return id;\n}\n//# sourceMappingURL=runtime-msg.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGxpdC9sb2NhbGl6ZS9pbnRlcm5hbC9ydW50aW1lLW1zZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUM4QztBQUNNO0FBQ0Q7QUFDbkQ7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsS0FBSztBQUN6QztBQUNBLDhDQUE4QyxRQUFRO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGlFQUFvQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLEtBQUs7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLDJEQUFVO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLGdFQUFhO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kaXNjaXBsZS10b29scy1jb252ZXJzYXRpb25zLy4vbm9kZV9tb2R1bGVzL0BsaXQvbG9jYWxpemUvaW50ZXJuYWwvcnVudGltZS1tc2cuanM/YjViNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQlNELTMtQ2xhdXNlXG4gKi9cbmltcG9ydCB7IGRlZmF1bHRNc2cgfSBmcm9tICcuL2RlZmF1bHQtbXNnLmpzJztcbmltcG9ydCB7IGpvaW5TdHJpbmdzQW5kVmFsdWVzIH0gZnJvbSAnLi9zdHItdGFnLmpzJztcbmltcG9ydCB7IGdlbmVyYXRlTXNnSWQgfSBmcm9tICcuL2lkLWdlbmVyYXRpb24uanMnO1xuY29uc3QgZXhwcmVzc2lvbk9yZGVycyA9IG5ldyBXZWFrTWFwKCk7XG5jb25zdCBoYXNoQ2FjaGUgPSBuZXcgTWFwKCk7XG5leHBvcnQgZnVuY3Rpb24gcnVudGltZU1zZyh0ZW1wbGF0ZXMsIHRlbXBsYXRlLCBvcHRpb25zKSB7XG4gICAgdmFyIF9hO1xuICAgIGlmICh0ZW1wbGF0ZXMpIHtcbiAgICAgICAgY29uc3QgaWQgPSAoX2EgPSBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuaWQpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGdlbmVyYXRlSWQodGVtcGxhdGUpO1xuICAgICAgICBjb25zdCBsb2NhbGl6ZWQgPSB0ZW1wbGF0ZXNbaWRdO1xuICAgICAgICBpZiAobG9jYWxpemVkKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGxvY2FsaXplZCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICAvLyBFLmcuIFwiSGVsbG8gV29ybGQhXCJcbiAgICAgICAgICAgICAgICByZXR1cm4gbG9jYWxpemVkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoJ3N0clRhZycgaW4gbG9jYWxpemVkKSB7XG4gICAgICAgICAgICAgICAgLy8gRS5nLiBzdHJgSGVsbG8gJHtuYW1lfSFgXG4gICAgICAgICAgICAgICAgLy9cbiAgICAgICAgICAgICAgICAvLyBMb2NhbGl6ZWQgdGVtcGxhdGVzIGhhdmUgJHtudW1iZXJ9IGluIHBsYWNlIG9mIHJlYWwgdGVtcGxhdGVcbiAgICAgICAgICAgICAgICAvLyBleHByZXNzaW9ucy4gVGhleSBjYW4ndCBoYXZlIHJlYWwgdGVtcGxhdGUgdmFsdWVzLCBiZWNhdXNlIHRoZVxuICAgICAgICAgICAgICAgIC8vIHZhcmlhYmxlIHNjb3BlIHdvdWxkIGJlIHdyb25nLiBUaGUgbnVtYmVyIHRlbGxzIHVzIHRoZSBpbmRleCBvZiB0aGVcbiAgICAgICAgICAgICAgICAvLyBzb3VyY2UgdmFsdWUgdG8gc3Vic3RpdHV0ZSBpbiBpdHMgcGxhY2UsIGJlY2F1c2UgZXhwcmVzc2lvbnMgY2FuIGJlXG4gICAgICAgICAgICAgICAgLy8gbW92ZWQgdG8gYSBkaWZmZXJlbnQgcG9zaXRpb24gZHVyaW5nIHRyYW5zbGF0aW9uLlxuICAgICAgICAgICAgICAgIHJldHVybiBqb2luU3RyaW5nc0FuZFZhbHVlcyhsb2NhbGl6ZWQuc3RyaW5ncywgXG4gICAgICAgICAgICAgICAgLy8gQ2FzdCBgdGVtcGxhdGVgIGJlY2F1c2UgaXRzIHR5cGUgd2Fzbid0IGF1dG9tYXRpY2FsbHkgbmFycm93ZWQgKGJ1dFxuICAgICAgICAgICAgICAgIC8vIHdlIGtub3cgaXQgbXVzdCBiZSB0aGUgc2FtZSB0eXBlIGFzIGBsb2NhbGl6ZWRgKS5cbiAgICAgICAgICAgICAgICB0ZW1wbGF0ZS52YWx1ZXMsIGxvY2FsaXplZC52YWx1ZXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gRS5nLiBodG1sYEhlbGxvIDxiPiR7bmFtZX08L2I+IWBcbiAgICAgICAgICAgICAgICAvL1xuICAgICAgICAgICAgICAgIC8vIFdlIGhhdmUgdG8ga2VlcCBvdXIgb3duIG1hcHBpbmcgb2YgZXhwcmVzc2lvbiBvcmRlcmluZyBiZWNhdXNlIHdlIGRvXG4gICAgICAgICAgICAgICAgLy8gYW4gaW4tcGxhY2UgdXBkYXRlIG9mIGB2YWx1ZXNgLCBhbmQgb3RoZXJ3aXNlIHdlJ2QgbG9zZSBvcmRlcmluZyBmb3JcbiAgICAgICAgICAgICAgICAvLyBzdWJzZXF1ZW50IHJlbmRlcnMuXG4gICAgICAgICAgICAgICAgbGV0IG9yZGVyID0gZXhwcmVzc2lvbk9yZGVycy5nZXQobG9jYWxpemVkKTtcbiAgICAgICAgICAgICAgICBpZiAob3JkZXIgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICBvcmRlciA9IGxvY2FsaXplZC52YWx1ZXM7XG4gICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb25PcmRlcnMuc2V0KGxvY2FsaXplZCwgb3JkZXIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAuLi5sb2NhbGl6ZWQsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlczogb3JkZXIubWFwKChpKSA9PiB0ZW1wbGF0ZS52YWx1ZXNbaV0pLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGRlZmF1bHRNc2codGVtcGxhdGUpO1xufVxuZnVuY3Rpb24gZ2VuZXJhdGVJZCh0ZW1wbGF0ZSkge1xuICAgIGNvbnN0IHN0cmluZ3MgPSB0eXBlb2YgdGVtcGxhdGUgPT09ICdzdHJpbmcnID8gdGVtcGxhdGUgOiB0ZW1wbGF0ZS5zdHJpbmdzO1xuICAgIGxldCBpZCA9IGhhc2hDYWNoZS5nZXQoc3RyaW5ncyk7XG4gICAgaWYgKGlkID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgaWQgPSBnZW5lcmF0ZU1zZ0lkKHN0cmluZ3MsIHR5cGVvZiB0ZW1wbGF0ZSAhPT0gJ3N0cmluZycgJiYgISgnc3RyVGFnJyBpbiB0ZW1wbGF0ZSkpO1xuICAgICAgICBoYXNoQ2FjaGUuc2V0KHN0cmluZ3MsIGlkKTtcbiAgICB9XG4gICAgcmV0dXJuIGlkO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cnVudGltZS1tc2cuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@lit/localize/internal/runtime-msg.js\n");

/***/ }),

/***/ "./node_modules/@lit/localize/internal/str-tag.js":
/*!********************************************************!*\
  !*** ./node_modules/@lit/localize/internal/str-tag.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isStrTagged: () => (/* binding */ isStrTagged),\n/* harmony export */   joinStringsAndValues: () => (/* binding */ joinStringsAndValues),\n/* harmony export */   str: () => (/* binding */ str)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/**\n * Tag that allows expressions to be used in localized non-HTML template\n * strings.\n *\n * Example: msg(str`Hello ${this.user}!`);\n *\n * The Lit html tag can also be used for this purpose, but HTML will need to be\n * escaped, and there is a small overhead for HTML parsing.\n *\n * Untagged template strings with expressions aren't supported by lit-localize\n * because they don't allow for values to be captured at runtime.\n */\nconst _str = (strings, ...values) => ({\n    strTag: true,\n    strings,\n    values,\n});\nconst str = _str;\nconst isStrTagged = (val) => typeof val !== 'string' && 'strTag' in val;\n/**\n * Render the result of a `str` tagged template to a string. Note we don't need\n * to do this for Lit templates, since Lit itself handles rendering.\n */\nconst joinStringsAndValues = (strings, values, valueOrder) => {\n    let concat = strings[0];\n    for (let i = 1; i < strings.length; i++) {\n        concat += values[valueOrder ? valueOrder[i - 1] : i - 1];\n        concat += strings[i];\n    }\n    return concat;\n};\n//# sourceMappingURL=str-tag.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGxpdC9sb2NhbGl6ZS9pbnRlcm5hbC9zdHItdGFnLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixVQUFVO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ007QUFDQTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLG9CQUFvQixvQkFBb0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGlzY2lwbGUtdG9vbHMtY29udmVyc2F0aW9ucy8uL25vZGVfbW9kdWxlcy9AbGl0L2xvY2FsaXplL2ludGVybmFsL3N0ci10YWcuanM/MTM2NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQlNELTMtQ2xhdXNlXG4gKi9cbi8qKlxuICogVGFnIHRoYXQgYWxsb3dzIGV4cHJlc3Npb25zIHRvIGJlIHVzZWQgaW4gbG9jYWxpemVkIG5vbi1IVE1MIHRlbXBsYXRlXG4gKiBzdHJpbmdzLlxuICpcbiAqIEV4YW1wbGU6IG1zZyhzdHJgSGVsbG8gJHt0aGlzLnVzZXJ9IWApO1xuICpcbiAqIFRoZSBMaXQgaHRtbCB0YWcgY2FuIGFsc28gYmUgdXNlZCBmb3IgdGhpcyBwdXJwb3NlLCBidXQgSFRNTCB3aWxsIG5lZWQgdG8gYmVcbiAqIGVzY2FwZWQsIGFuZCB0aGVyZSBpcyBhIHNtYWxsIG92ZXJoZWFkIGZvciBIVE1MIHBhcnNpbmcuXG4gKlxuICogVW50YWdnZWQgdGVtcGxhdGUgc3RyaW5ncyB3aXRoIGV4cHJlc3Npb25zIGFyZW4ndCBzdXBwb3J0ZWQgYnkgbGl0LWxvY2FsaXplXG4gKiBiZWNhdXNlIHRoZXkgZG9uJ3QgYWxsb3cgZm9yIHZhbHVlcyB0byBiZSBjYXB0dXJlZCBhdCBydW50aW1lLlxuICovXG5jb25zdCBfc3RyID0gKHN0cmluZ3MsIC4uLnZhbHVlcykgPT4gKHtcbiAgICBzdHJUYWc6IHRydWUsXG4gICAgc3RyaW5ncyxcbiAgICB2YWx1ZXMsXG59KTtcbmV4cG9ydCBjb25zdCBzdHIgPSBfc3RyO1xuZXhwb3J0IGNvbnN0IGlzU3RyVGFnZ2VkID0gKHZhbCkgPT4gdHlwZW9mIHZhbCAhPT0gJ3N0cmluZycgJiYgJ3N0clRhZycgaW4gdmFsO1xuLyoqXG4gKiBSZW5kZXIgdGhlIHJlc3VsdCBvZiBhIGBzdHJgIHRhZ2dlZCB0ZW1wbGF0ZSB0byBhIHN0cmluZy4gTm90ZSB3ZSBkb24ndCBuZWVkXG4gKiB0byBkbyB0aGlzIGZvciBMaXQgdGVtcGxhdGVzLCBzaW5jZSBMaXQgaXRzZWxmIGhhbmRsZXMgcmVuZGVyaW5nLlxuICovXG5leHBvcnQgY29uc3Qgam9pblN0cmluZ3NBbmRWYWx1ZXMgPSAoc3RyaW5ncywgdmFsdWVzLCB2YWx1ZU9yZGVyKSA9PiB7XG4gICAgbGV0IGNvbmNhdCA9IHN0cmluZ3NbMF07XG4gICAgZm9yIChsZXQgaSA9IDE7IGkgPCBzdHJpbmdzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbmNhdCArPSB2YWx1ZXNbdmFsdWVPcmRlciA/IHZhbHVlT3JkZXJbaSAtIDFdIDogaSAtIDFdO1xuICAgICAgICBjb25jYXQgKz0gc3RyaW5nc1tpXTtcbiAgICB9XG4gICAgcmV0dXJuIGNvbmNhdDtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdHItdGFnLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@lit/localize/internal/str-tag.js\n");

/***/ }),

/***/ "./node_modules/@lit/localize/internal/types.js":
/*!******************************************************!*\
  !*** ./node_modules/@lit/localize/internal/types.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGxpdC9sb2NhbGl6ZS9pbnRlcm5hbC90eXBlcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNVO0FBQ1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kaXNjaXBsZS10b29scy1jb252ZXJzYXRpb25zLy4vbm9kZV9tb2R1bGVzL0BsaXQvbG9jYWxpemUvaW50ZXJuYWwvdHlwZXMuanM/NmNjNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQlNELTMtQ2xhdXNlXG4gKi9cbmV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@lit/localize/internal/types.js\n");

/***/ }),

/***/ "./node_modules/@lit/localize/lit-localize.js":
/*!****************************************************!*\
  !*** ./node_modules/@lit/localize/lit-localize.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LOCALE_STATUS_EVENT: () => (/* reexport safe */ _internal_locale_status_event_js__WEBPACK_IMPORTED_MODULE_1__.LOCALE_STATUS_EVENT),\n/* harmony export */   _installMsgImplementation: () => (/* binding */ _installMsgImplementation),\n/* harmony export */   configureLocalization: () => (/* reexport safe */ _init_runtime_js__WEBPACK_IMPORTED_MODULE_6__.configureLocalization),\n/* harmony export */   configureTransformLocalization: () => (/* reexport safe */ _init_transform_js__WEBPACK_IMPORTED_MODULE_7__.configureTransformLocalization),\n/* harmony export */   isStrTagged: () => (/* reexport safe */ _internal_str_tag_js__WEBPACK_IMPORTED_MODULE_2__.isStrTagged),\n/* harmony export */   joinStringsAndValues: () => (/* reexport safe */ _internal_str_tag_js__WEBPACK_IMPORTED_MODULE_2__.joinStringsAndValues),\n/* harmony export */   localized: () => (/* reexport safe */ _internal_localized_decorator_js__WEBPACK_IMPORTED_MODULE_5__.localized),\n/* harmony export */   msg: () => (/* binding */ msg),\n/* harmony export */   str: () => (/* reexport safe */ _internal_str_tag_js__WEBPACK_IMPORTED_MODULE_2__.str),\n/* harmony export */   updateWhenLocaleChanges: () => (/* reexport safe */ _internal_localized_controller_js__WEBPACK_IMPORTED_MODULE_4__.updateWhenLocaleChanges)\n/* harmony export */ });\n/* harmony import */ var _internal_default_msg_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/default-msg.js */ \"./node_modules/@lit/localize/internal/default-msg.js\");\n/* harmony import */ var _internal_locale_status_event_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/locale-status-event.js */ \"./node_modules/@lit/localize/internal/locale-status-event.js\");\n/* harmony import */ var _internal_str_tag_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal/str-tag.js */ \"./node_modules/@lit/localize/internal/str-tag.js\");\n/* harmony import */ var _internal_types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./internal/types.js */ \"./node_modules/@lit/localize/internal/types.js\");\n/* harmony import */ var _internal_localized_controller_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./internal/localized-controller.js */ \"./node_modules/@lit/localize/internal/localized-controller.js\");\n/* harmony import */ var _internal_localized_decorator_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./internal/localized-decorator.js */ \"./node_modules/@lit/localize/internal/localized-decorator.js\");\n/* harmony import */ var _init_runtime_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./init/runtime.js */ \"./node_modules/@lit/localize/init/runtime.js\");\n/* harmony import */ var _init_transform_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./init/transform.js */ \"./node_modules/@lit/localize/init/transform.js\");\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n\n\n\n// TODO(aomarks) In a future breaking version, remove these imports so that the\n// bulk of the code isn't included in bundles by default. In particular imagine\n// the component library use-case where msg() calls are made, but there is no\n// need to actually initialize any of the localization runtime.\n\n\n\n\n/**\n * Make a string or lit-html template localizable.\n *\n * @param template A string, a lit-html template, or a function that returns\n * either a string or lit-html template.\n * @param options Optional configuration object with the following properties:\n *   - id: Optional project-wide unique identifier for this template. If\n *     omitted, an id will be automatically generated from the template strings.\n *   - desc: Optional description\n */\nlet msg = _internal_default_msg_js__WEBPACK_IMPORTED_MODULE_0__.defaultMsg;\nlet installed = false;\n/**\n * Internal only. Do not use this function.\n *\n * Installs an implementation of the msg function to replace the default\n * identity function. Throws if called more than once.\n *\n * @internal\n */\nfunction _installMsgImplementation(impl) {\n    if (installed) {\n        throw new Error('lit-localize can only be configured once');\n    }\n    msg = impl;\n    installed = true;\n}\n//# sourceMappingURL=lit-localize.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGxpdC9sb2NhbGl6ZS9saXQtbG9jYWxpemUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUN1RDtBQUNMO0FBQ1o7QUFDRjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNtRDtBQUNEO0FBQ2hCO0FBQ0U7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxVQUFVLGdFQUFVO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kaXNjaXBsZS10b29scy1jb252ZXJzYXRpb25zLy4vbm9kZV9tb2R1bGVzL0BsaXQvbG9jYWxpemUvbGl0LWxvY2FsaXplLmpzPzExNTQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIExMQ1xuICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEJTRC0zLUNsYXVzZVxuICovXG5pbXBvcnQgeyBkZWZhdWx0TXNnIH0gZnJvbSAnLi9pbnRlcm5hbC9kZWZhdWx0LW1zZy5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2ludGVybmFsL2xvY2FsZS1zdGF0dXMtZXZlbnQuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9pbnRlcm5hbC9zdHItdGFnLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vaW50ZXJuYWwvdHlwZXMuanMnO1xuLy8gVE9ETyhhb21hcmtzKSBJbiBhIGZ1dHVyZSBicmVha2luZyB2ZXJzaW9uLCByZW1vdmUgdGhlc2UgaW1wb3J0cyBzbyB0aGF0IHRoZVxuLy8gYnVsayBvZiB0aGUgY29kZSBpc24ndCBpbmNsdWRlZCBpbiBidW5kbGVzIGJ5IGRlZmF1bHQuIEluIHBhcnRpY3VsYXIgaW1hZ2luZVxuLy8gdGhlIGNvbXBvbmVudCBsaWJyYXJ5IHVzZS1jYXNlIHdoZXJlIG1zZygpIGNhbGxzIGFyZSBtYWRlLCBidXQgdGhlcmUgaXMgbm9cbi8vIG5lZWQgdG8gYWN0dWFsbHkgaW5pdGlhbGl6ZSBhbnkgb2YgdGhlIGxvY2FsaXphdGlvbiBydW50aW1lLlxuZXhwb3J0ICogZnJvbSAnLi9pbnRlcm5hbC9sb2NhbGl6ZWQtY29udHJvbGxlci5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2ludGVybmFsL2xvY2FsaXplZC1kZWNvcmF0b3IuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9pbml0L3J1bnRpbWUuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9pbml0L3RyYW5zZm9ybS5qcyc7XG4vKipcbiAqIE1ha2UgYSBzdHJpbmcgb3IgbGl0LWh0bWwgdGVtcGxhdGUgbG9jYWxpemFibGUuXG4gKlxuICogQHBhcmFtIHRlbXBsYXRlIEEgc3RyaW5nLCBhIGxpdC1odG1sIHRlbXBsYXRlLCBvciBhIGZ1bmN0aW9uIHRoYXQgcmV0dXJuc1xuICogZWl0aGVyIGEgc3RyaW5nIG9yIGxpdC1odG1sIHRlbXBsYXRlLlxuICogQHBhcmFtIG9wdGlvbnMgT3B0aW9uYWwgY29uZmlndXJhdGlvbiBvYmplY3Qgd2l0aCB0aGUgZm9sbG93aW5nIHByb3BlcnRpZXM6XG4gKiAgIC0gaWQ6IE9wdGlvbmFsIHByb2plY3Qtd2lkZSB1bmlxdWUgaWRlbnRpZmllciBmb3IgdGhpcyB0ZW1wbGF0ZS4gSWZcbiAqICAgICBvbWl0dGVkLCBhbiBpZCB3aWxsIGJlIGF1dG9tYXRpY2FsbHkgZ2VuZXJhdGVkIGZyb20gdGhlIHRlbXBsYXRlIHN0cmluZ3MuXG4gKiAgIC0gZGVzYzogT3B0aW9uYWwgZGVzY3JpcHRpb25cbiAqL1xuZXhwb3J0IGxldCBtc2cgPSBkZWZhdWx0TXNnO1xubGV0IGluc3RhbGxlZCA9IGZhbHNlO1xuLyoqXG4gKiBJbnRlcm5hbCBvbmx5LiBEbyBub3QgdXNlIHRoaXMgZnVuY3Rpb24uXG4gKlxuICogSW5zdGFsbHMgYW4gaW1wbGVtZW50YXRpb24gb2YgdGhlIG1zZyBmdW5jdGlvbiB0byByZXBsYWNlIHRoZSBkZWZhdWx0XG4gKiBpZGVudGl0eSBmdW5jdGlvbi4gVGhyb3dzIGlmIGNhbGxlZCBtb3JlIHRoYW4gb25jZS5cbiAqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIF9pbnN0YWxsTXNnSW1wbGVtZW50YXRpb24oaW1wbCkge1xuICAgIGlmIChpbnN0YWxsZWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdsaXQtbG9jYWxpemUgY2FuIG9ubHkgYmUgY29uZmlndXJlZCBvbmNlJyk7XG4gICAgfVxuICAgIG1zZyA9IGltcGw7XG4gICAgaW5zdGFsbGVkID0gdHJ1ZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxpdC1sb2NhbGl6ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@lit/localize/lit-localize.js\n");

/***/ }),

/***/ "./node_modules/@lit/reactive-element/development/css-tag.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@lit/reactive-element/development/css-tag.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CSSResult: () => (/* binding */ CSSResult),\n/* harmony export */   adoptStyles: () => (/* binding */ adoptStyles),\n/* harmony export */   css: () => (/* binding */ css),\n/* harmony export */   getCompatibleStyle: () => (/* binding */ getCompatibleStyle),\n/* harmony export */   supportsAdoptingStyleSheets: () => (/* binding */ supportsAdoptingStyleSheets),\n/* harmony export */   unsafeCSS: () => (/* binding */ unsafeCSS)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst NODE_MODE = false;\nconst global = NODE_MODE ? globalThis : window;\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nconst supportsAdoptingStyleSheets = global.ShadowRoot &&\n    (global.ShadyCSS === undefined || global.ShadyCSS.nativeShadow) &&\n    'adoptedStyleSheets' in Document.prototype &&\n    'replace' in CSSStyleSheet.prototype;\nconst constructionToken = Symbol();\nconst cssTagCache = new WeakMap();\n/**\n * A container for a string of CSS text, that may be used to create a CSSStyleSheet.\n *\n * CSSResult is the return value of `css`-tagged template literals and\n * `unsafeCSS()`. In order to ensure that CSSResults are only created via the\n * `css` tag and `unsafeCSS()`, CSSResult cannot be constructed directly.\n */\nclass CSSResult {\n    constructor(cssText, strings, safeToken) {\n        // This property needs to remain unminified.\n        this['_$cssResult$'] = true;\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n        this._strings = strings;\n    }\n    // This is a getter so that it's lazy. In practice, this means stylesheets\n    // are not created until the first element instance is made.\n    get styleSheet() {\n        // If `supportsAdoptingStyleSheets` is true then we assume CSSStyleSheet is\n        // constructable.\n        let styleSheet = this._styleSheet;\n        const strings = this._strings;\n        if (supportsAdoptingStyleSheets && styleSheet === undefined) {\n            const cacheable = strings !== undefined && strings.length === 1;\n            if (cacheable) {\n                styleSheet = cssTagCache.get(strings);\n            }\n            if (styleSheet === undefined) {\n                (this._styleSheet = styleSheet = new CSSStyleSheet()).replaceSync(this.cssText);\n                if (cacheable) {\n                    cssTagCache.set(strings, styleSheet);\n                }\n            }\n        }\n        return styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\nconst textFromCSSResult = (value) => {\n    // This property needs to remain unminified.\n    if (value['_$cssResult$'] === true) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ` +\n            `${value}. Use 'unsafeCSS' to pass non-literal values, but take care ` +\n            `to ensure page security.`);\n    }\n};\n/**\n * Wrap a value for interpolation in a {@linkcode css} tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nconst unsafeCSS = (value) => new CSSResult(typeof value === 'string' ? value : String(value), undefined, constructionToken);\n/**\n * A template literal tag which can be used with LitElement's\n * {@linkcode LitElement.styles} property to set element styles.\n *\n * For security reasons, only literal string values and number may be used in\n * embedded expressions. To incorporate non-literal values {@linkcode unsafeCSS}\n * may be used inside an expression.\n */\nconst css = (strings, ...values) => {\n    const cssText = strings.length === 1\n        ? strings[0]\n        : values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, strings, constructionToken);\n};\n/**\n * Applies the given styles to a `shadowRoot`. When Shadow DOM is\n * available but `adoptedStyleSheets` is not, styles are appended to the\n * `shadowRoot` to [mimic spec behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n * Note, when shimming is used, any styles that are subsequently placed into\n * the shadowRoot should be placed *before* any shimmed adopted styles. This\n * will match spec behavior that gives adopted sheets precedence over styles in\n * shadowRoot.\n */\nconst adoptStyles = (renderRoot, styles) => {\n    if (supportsAdoptingStyleSheets) {\n        renderRoot.adoptedStyleSheets = styles.map((s) => s instanceof CSSStyleSheet ? s : s.styleSheet);\n    }\n    else {\n        styles.forEach((s) => {\n            const style = document.createElement('style');\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const nonce = global['litNonce'];\n            if (nonce !== undefined) {\n                style.setAttribute('nonce', nonce);\n            }\n            style.textContent = s.cssText;\n            renderRoot.appendChild(style);\n        });\n    }\n};\nconst cssResultFromStyleSheet = (sheet) => {\n    let cssText = '';\n    for (const rule of sheet.cssRules) {\n        cssText += rule.cssText;\n    }\n    return unsafeCSS(cssText);\n};\nconst getCompatibleStyle = supportsAdoptingStyleSheets ||\n    (NODE_MODE && global.CSSStyleSheet === undefined)\n    ? (s) => s\n    : (s) => s instanceof CSSStyleSheet ? cssResultFromStyleSheet(s) : s;\n//# sourceMappingURL=css-tag.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@lit/reactive-element/development/css-tag.js\n");

/***/ }),

/***/ "./node_modules/@lit/reactive-element/development/reactive-element.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@lit/reactive-element/development/reactive-element.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CSSResult: () => (/* reexport safe */ _css_tag_js__WEBPACK_IMPORTED_MODULE_0__.CSSResult),\n/* harmony export */   ReactiveElement: () => (/* binding */ ReactiveElement),\n/* harmony export */   adoptStyles: () => (/* reexport safe */ _css_tag_js__WEBPACK_IMPORTED_MODULE_0__.adoptStyles),\n/* harmony export */   css: () => (/* reexport safe */ _css_tag_js__WEBPACK_IMPORTED_MODULE_0__.css),\n/* harmony export */   defaultConverter: () => (/* binding */ defaultConverter),\n/* harmony export */   getCompatibleStyle: () => (/* reexport safe */ _css_tag_js__WEBPACK_IMPORTED_MODULE_0__.getCompatibleStyle),\n/* harmony export */   notEqual: () => (/* binding */ notEqual),\n/* harmony export */   supportsAdoptingStyleSheets: () => (/* reexport safe */ _css_tag_js__WEBPACK_IMPORTED_MODULE_0__.supportsAdoptingStyleSheets),\n/* harmony export */   unsafeCSS: () => (/* reexport safe */ _css_tag_js__WEBPACK_IMPORTED_MODULE_0__.unsafeCSS)\n/* harmony export */ });\n/* harmony import */ var _css_tag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./css-tag.js */ \"./node_modules/@lit/reactive-element/development/css-tag.js\");\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nvar _a, _b, _c, _d;\nvar _e;\n/**\n * Use this module if you want to create your own base class extending\n * {@link ReactiveElement}.\n * @packageDocumentation\n */\n\n// In the Node build, this import will be injected by Rollup:\n// import {HTMLElement, customElements} from '@lit-labs/ssr-dom-shim';\n\nconst NODE_MODE = false;\nconst global = NODE_MODE ? globalThis : window;\nif (NODE_MODE) {\n    (_a = global.customElements) !== null && _a !== void 0 ? _a : (global.customElements = customElements);\n}\nconst DEV_MODE = true;\nlet requestUpdateThenable;\nlet issueWarning;\nconst trustedTypes = global\n    .trustedTypes;\n// Temporary workaround for https://crbug.com/993268\n// Currently, any attribute starting with \"on\" is considered to be a\n// TrustedScript source. Such boolean attributes must be set to the equivalent\n// trusted emptyScript value.\nconst emptyStringForBooleanAttribute = trustedTypes\n    ? trustedTypes.emptyScript\n    : '';\nconst polyfillSupport = DEV_MODE\n    ? global.reactiveElementPolyfillSupportDevMode\n    : global.reactiveElementPolyfillSupport;\nif (DEV_MODE) {\n    // Ensure warnings are issued only 1x, even if multiple versions of Lit\n    // are loaded.\n    const issuedWarnings = ((_b = global.litIssuedWarnings) !== null && _b !== void 0 ? _b : (global.litIssuedWarnings = new Set()));\n    // Issue a warning, if we haven't already.\n    issueWarning = (code, warning) => {\n        warning += ` See https://lit.dev/msg/${code} for more information.`;\n        if (!issuedWarnings.has(warning)) {\n            console.warn(warning);\n            issuedWarnings.add(warning);\n        }\n    };\n    issueWarning('dev-mode', `Lit is in dev mode. Not recommended for production!`);\n    // Issue polyfill support warning.\n    if (((_c = global.ShadyDOM) === null || _c === void 0 ? void 0 : _c.inUse) && polyfillSupport === undefined) {\n        issueWarning('polyfill-support-missing', `Shadow DOM is being polyfilled via \\`ShadyDOM\\` but ` +\n            `the \\`polyfill-support\\` module has not been loaded.`);\n    }\n    requestUpdateThenable = (name) => ({\n        then: (onfulfilled, _onrejected) => {\n            issueWarning('request-update-promise', `The \\`requestUpdate\\` method should no longer return a Promise but ` +\n                `does so on \\`${name}\\`. Use \\`updateComplete\\` instead.`);\n            if (onfulfilled !== undefined) {\n                onfulfilled(false);\n            }\n        },\n    });\n}\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n    ? (event) => {\n        const shouldEmit = global\n            .emitLitDebugLogEvents;\n        if (!shouldEmit) {\n            return;\n        }\n        global.dispatchEvent(new CustomEvent('lit-debug', {\n            detail: event,\n        }));\n    }\n    : undefined;\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\n/*@__INLINE__*/\nconst JSCompiler_renameProperty = (prop, _obj) => prop;\nconst defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                value = value ? emptyStringForBooleanAttribute : null;\n                break;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                value = value == null ? value : JSON.stringify(value);\n                break;\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        let fromValue = value;\n        switch (type) {\n            case Boolean:\n                fromValue = value !== null;\n                break;\n            case Number:\n                fromValue = value === null ? null : Number(value);\n                break;\n            case Object:\n            case Array:\n                // Do *not* generate exception when invalid JSON is set as elements\n                // don't normally complain on being mis-configured.\n                // TODO(sorvell): Do generate exception in *dev mode*.\n                try {\n                    // Assert to adhere to Bazel's \"must type assert JSON parse\" rule.\n                    fromValue = JSON.parse(value);\n                }\n                catch (e) {\n                    fromValue = null;\n                }\n                break;\n        }\n        return fromValue;\n    },\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nconst notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual,\n};\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n * @noInheritDoc\n */\nclass ReactiveElement\n// In the Node build, this `extends` clause will be substituted with\n// `(globalThis.HTMLElement ?? HTMLElement)`.\n//\n// This way, we will first prefer any global `HTMLElement` polyfill that the\n// user has assigned, and then fall back to the `HTMLElement` shim which has\n// been imported (see note at the top of this file about how this import is\n// generated by Rollup). Note that the `HTMLElement` variable has been\n// shadowed by this import, so it no longer refers to the global.\n extends HTMLElement {\n    constructor() {\n        super();\n        this.__instanceProperties = new Map();\n        /**\n         * True if there is a pending update as a result of calling `requestUpdate()`.\n         * Should only be read.\n         * @category updates\n         */\n        this.isUpdatePending = false;\n        /**\n         * Is set to `true` after the first update. The element code cannot assume\n         * that `renderRoot` exists before the element `hasUpdated`.\n         * @category updates\n         */\n        this.hasUpdated = false;\n        /**\n         * Name of currently reflecting property\n         */\n        this.__reflectingProperty = null;\n        this.__initialize();\n    }\n    /**\n     * Adds an initializer function to the class that is called during instance\n     * construction.\n     *\n     * This is useful for code that runs against a `ReactiveElement`\n     * subclass, such as a decorator, that needs to do work for each\n     * instance, such as setting up a `ReactiveController`.\n     *\n     * ```ts\n     * const myDecorator = (target: typeof ReactiveElement, key: string) => {\n     *   target.addInitializer((instance: ReactiveElement) => {\n     *     // This is run during construction of the element\n     *     new MyController(instance);\n     *   });\n     * }\n     * ```\n     *\n     * Decorating a field will then cause each instance to run an initializer\n     * that adds a controller:\n     *\n     * ```ts\n     * class MyElement extends LitElement {\n     *   @myDecorator foo;\n     * }\n     * ```\n     *\n     * Initializers are stored per-constructor. Adding an initializer to a\n     * subclass does not add it to a superclass. Since initializers are run in\n     * constructors, initializers will run in order of the class hierarchy,\n     * starting with superclasses and progressing to the instance's class.\n     *\n     * @nocollapse\n     */\n    static addInitializer(initializer) {\n        var _a;\n        this.finalize();\n        ((_a = this._initializers) !== null && _a !== void 0 ? _a : (this._initializers = [])).push(initializer);\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     * @category attributes\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.elementProperties.forEach((v, p) => {\n            const attr = this.__attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this.__attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist\n     * and stores a {@linkcode PropertyDeclaration} for the property with the\n     * given options. The property setter calls the property's `hasChanged`\n     * property option or uses a strict identity check to determine whether or not\n     * to request an update.\n     *\n     * This method may be overridden to customize properties; however,\n     * when doing so, it's important to call `super.createProperty` to ensure\n     * the property is setup correctly. This method calls\n     * `getPropertyDescriptor` internally to get a descriptor to install.\n     * To customize what properties do when they are get or set, override\n     * `getPropertyDescriptor`. To customize the options for a property,\n     * implement `createProperty` like this:\n     *\n     * ```ts\n     * static createProperty(name, options) {\n     *   options = Object.assign(options, {myOption: true});\n     *   super.createProperty(name, options);\n     * }\n     * ```\n     *\n     * @nocollapse\n     * @category properties\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        var _a;\n        // if this is a state property, force the attribute to false.\n        if (options.state) {\n            // Cast as any since this is readonly.\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            options.attribute = false;\n        }\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure finalization has been kicked off.\n        this.finalize();\n        this.elementProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (!options.noAccessor && !this.prototype.hasOwnProperty(name)) {\n            const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n            const descriptor = this.getPropertyDescriptor(name, key, options);\n            if (descriptor !== undefined) {\n                Object.defineProperty(this.prototype, name, descriptor);\n                if (DEV_MODE) {\n                    // If this class doesn't have its own set, create one and initialize\n                    // with the values in the set from the nearest ancestor class, if any.\n                    if (!this.hasOwnProperty('__reactivePropertyKeys')) {\n                        this.__reactivePropertyKeys = new Set((_a = this.__reactivePropertyKeys) !== null && _a !== void 0 ? _a : []);\n                    }\n                    this.__reactivePropertyKeys.add(name);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a property descriptor to be defined on the given named property.\n     * If no descriptor is returned, the property will not become an accessor.\n     * For example,\n     *\n     * ```ts\n     * class MyElement extends LitElement {\n     *   static getPropertyDescriptor(name, key, options) {\n     *     const defaultDescriptor =\n     *         super.getPropertyDescriptor(name, key, options);\n     *     const setter = defaultDescriptor.set;\n     *     return {\n     *       get: defaultDescriptor.get,\n     *       set(value) {\n     *         setter.call(this, value);\n     *         // custom action.\n     *       },\n     *       configurable: true,\n     *       enumerable: true\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @nocollapse\n     * @category properties\n     */\n    static getPropertyDescriptor(name, key, options) {\n        return {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this.requestUpdate(name, oldValue, options);\n            },\n            configurable: true,\n            enumerable: true,\n        };\n    }\n    /**\n     * Returns the property options associated with the given property.\n     * These options are defined with a `PropertyDeclaration` via the `properties`\n     * object or the `@property` decorator and are registered in\n     * `createProperty(...)`.\n     *\n     * Note, this method should be considered \"final\" and not overridden. To\n     * customize the options for a given property, override\n     * {@linkcode createProperty}.\n     *\n     * @nocollapse\n     * @final\n     * @category properties\n     */\n    static getPropertyOptions(name) {\n        return this.elementProperties.get(name) || defaultPropertyDeclaration;\n    }\n    /**\n     * Creates property accessors for registered properties, sets up element\n     * styling, and ensures any superclasses are also finalized. Returns true if\n     * the element was finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        if (this.hasOwnProperty(finalized)) {\n            return false;\n        }\n        this[finalized] = true;\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        superCtor.finalize();\n        // Create own set of initializers for this class if any exist on the\n        // superclass and copy them down. Note, for a small perf boost, avoid\n        // creating initializers unless needed.\n        if (superCtor._initializers !== undefined) {\n            this._initializers = [...superCtor._initializers];\n        }\n        this.elementProperties = new Map(superCtor.elementProperties);\n        // initialize Map populated in observedAttributes\n        this.__attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...Object.getOwnPropertySymbols(props),\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeScript lack of support for symbol in\n                // index types\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                this.createProperty(p, props[p]);\n            }\n        }\n        this.elementStyles = this.finalizeStyles(this.styles);\n        // DEV mode warnings\n        if (DEV_MODE) {\n            const warnRemovedOrRenamed = (name, renamed = false) => {\n                if (this.prototype.hasOwnProperty(name)) {\n                    issueWarning(renamed ? 'renamed-api' : 'removed-api', `\\`${name}\\` is implemented on class ${this.name}. It ` +\n                        `has been ${renamed ? 'renamed' : 'removed'} ` +\n                        `in this version of LitElement.`);\n                }\n            };\n            warnRemovedOrRenamed('initialize');\n            warnRemovedOrRenamed('requestUpdateInternal');\n            warnRemovedOrRenamed('_getUpdateComplete', true);\n        }\n        return true;\n    }\n    /**\n     * Takes the styles the user supplied via the `static styles` property and\n     * returns the array of styles to apply to the element.\n     * Override this method to integrate into a style management system.\n     *\n     * Styles are deduplicated preserving the _last_ instance in the list. This\n     * is a performance optimization to avoid duplicated styles that can occur\n     * especially when composing via subclassing. The last item is kept to try\n     * to preserve the cascade order with the assumption that it's most important\n     * that last added styles override previous styles.\n     *\n     * @nocollapse\n     * @category styles\n     */\n    static finalizeStyles(styles) {\n        const elementStyles = [];\n        if (Array.isArray(styles)) {\n            // Dedupe the flattened array in reverse order to preserve the last items.\n            // Casting to Array<unknown> works around TS error that\n            // appears to come from trying to flatten a type CSSResultArray.\n            const set = new Set(styles.flat(Infinity).reverse());\n            // Then preserve original order by adding the set items in reverse order.\n            for (const s of set) {\n                elementStyles.unshift((0,_css_tag_js__WEBPACK_IMPORTED_MODULE_0__.getCompatibleStyle)(s));\n            }\n        }\n        else if (styles !== undefined) {\n            elementStyles.push((0,_css_tag_js__WEBPACK_IMPORTED_MODULE_0__.getCompatibleStyle)(styles));\n        }\n        return elementStyles;\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static __attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false\n            ? undefined\n            : typeof attribute === 'string'\n                ? attribute\n                : typeof name === 'string'\n                    ? name.toLowerCase()\n                    : undefined;\n    }\n    /**\n     * Internal only override point for customizing work done when elements\n     * are constructed.\n     */\n    __initialize() {\n        var _a;\n        this.__updatePromise = new Promise((res) => (this.enableUpdating = res));\n        this._$changedProperties = new Map();\n        this.__saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this.requestUpdate();\n        (_a = this.constructor._initializers) === null || _a === void 0 ? void 0 : _a.forEach((i) => i(this));\n    }\n    /**\n     * Registers a `ReactiveController` to participate in the element's reactive\n     * update cycle. The element automatically calls into any registered\n     * controllers during its lifecycle callbacks.\n     *\n     * If the element is connected when `addController()` is called, the\n     * controller's `hostConnected()` callback will be immediately called.\n     * @category controllers\n     */\n    addController(controller) {\n        var _a, _b;\n        ((_a = this.__controllers) !== null && _a !== void 0 ? _a : (this.__controllers = [])).push(controller);\n        // If a controller is added after the element has been connected,\n        // call hostConnected. Note, re-using existence of `renderRoot` here\n        // (which is set in connectedCallback) to avoid the need to track a\n        // first connected state.\n        if (this.renderRoot !== undefined && this.isConnected) {\n            (_b = controller.hostConnected) === null || _b === void 0 ? void 0 : _b.call(controller);\n        }\n    }\n    /**\n     * Removes a `ReactiveController` from the element.\n     * @category controllers\n     */\n    removeController(controller) {\n        var _a;\n        // Note, if the indexOf is -1, the >>> will flip the sign which makes the\n        // splice do nothing.\n        (_a = this.__controllers) === null || _a === void 0 ? void 0 : _a.splice(this.__controllers.indexOf(controller) >>> 0, 1);\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    __saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor.elementProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                this.__instanceProperties.set(p, this[p]);\n                delete this[p];\n            }\n        });\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     *\n     * @return Returns a node into which to render.\n     * @category rendering\n     */\n    createRenderRoot() {\n        var _a;\n        const renderRoot = (_a = this.shadowRoot) !== null && _a !== void 0 ? _a : this.attachShadow(this.constructor.shadowRootOptions);\n        (0,_css_tag_js__WEBPACK_IMPORTED_MODULE_0__.adoptStyles)(renderRoot, this.constructor.elementStyles);\n        return renderRoot;\n    }\n    /**\n     * On first connection, creates the element's renderRoot, sets up\n     * element styling, and enables updating.\n     * @category lifecycle\n     */\n    connectedCallback() {\n        var _a;\n        // create renderRoot before first update.\n        if (this.renderRoot === undefined) {\n            this.renderRoot = this.createRenderRoot();\n        }\n        this.enableUpdating(true);\n        (_a = this.__controllers) === null || _a === void 0 ? void 0 : _a.forEach((c) => { var _a; return (_a = c.hostConnected) === null || _a === void 0 ? void 0 : _a.call(c); });\n    }\n    /**\n     * Note, this method should be considered final and not overridden. It is\n     * overridden on the element instance with a function that triggers the first\n     * update.\n     * @category updates\n     */\n    enableUpdating(_requestedUpdate) { }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     * @category lifecycle\n     */\n    disconnectedCallback() {\n        var _a;\n        (_a = this.__controllers) === null || _a === void 0 ? void 0 : _a.forEach((c) => { var _a; return (_a = c.hostDisconnected) === null || _a === void 0 ? void 0 : _a.call(c); });\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     *\n     * Specifically, when an attribute is set, the corresponding property is set.\n     * You should rarely need to implement this callback. If this method is\n     * overridden, `super.attributeChangedCallback(name, _old, value)` must be\n     * called.\n     *\n     * See [using the lifecycle callbacks](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks)\n     * on MDN for more information about the `attributeChangedCallback`.\n     * @category attributes\n     */\n    attributeChangedCallback(name, _old, value) {\n        this._$attributeToProperty(name, value);\n    }\n    __propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        var _a;\n        const attr = this.constructor.__attributeNameForProperty(name, options);\n        if (attr !== undefined && options.reflect === true) {\n            const converter = ((_a = options.converter) === null || _a === void 0 ? void 0 : _a.toAttribute) !==\n                undefined\n                ? options.converter\n                : defaultConverter;\n            const attrValue = converter.toAttribute(value, options.type);\n            if (DEV_MODE &&\n                this.constructor.enabledWarnings.indexOf('migration') >= 0 &&\n                attrValue === undefined) {\n                issueWarning('undefined-attribute-value', `The attribute value for the ${name} property is ` +\n                    `undefined on element ${this.localName}. The attribute will be ` +\n                    `removed, but in the previous version of \\`ReactiveElement\\`, ` +\n                    `the attribute would not have changed.`);\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this.__reflectingProperty = name;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this.__reflectingProperty = null;\n        }\n    }\n    /** @internal */\n    _$attributeToProperty(name, value) {\n        var _a;\n        const ctor = this.constructor;\n        // Note, hint this as an `AttributeMap` so closure clearly understands\n        // the type; it has issues with tracking types through statics\n        const propName = ctor.__attributeToPropertyMap.get(name);\n        // Use tracking info to avoid reflecting a property value to an attribute\n        // if it was just set because the attribute changed.\n        if (propName !== undefined && this.__reflectingProperty !== propName) {\n            const options = ctor.getPropertyOptions(propName);\n            const converter = typeof options.converter === 'function'\n                ? { fromAttribute: options.converter }\n                : ((_a = options.converter) === null || _a === void 0 ? void 0 : _a.fromAttribute) !== undefined\n                    ? options.converter\n                    : defaultConverter;\n            // mark state reflecting\n            this.__reflectingProperty = propName;\n            this[propName] = converter.fromAttribute(value, options.type\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            );\n            // mark state not reflecting\n            this.__reflectingProperty = null;\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should be called\n     * when an element should update based on some state not triggered by setting\n     * a reactive property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored.\n     *\n     * @param name name of requesting property\n     * @param oldValue old value of requesting property\n     * @param options property options to use instead of the previously\n     *     configured options\n     * @category updates\n     */\n    requestUpdate(name, oldValue, options) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            options =\n                options ||\n                    this.constructor.getPropertyOptions(name);\n            const hasChanged = options.hasChanged || notEqual;\n            if (hasChanged(this[name], oldValue)) {\n                if (!this._$changedProperties.has(name)) {\n                    this._$changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true && this.__reflectingProperty !== name) {\n                    if (this.__reflectingProperties === undefined) {\n                        this.__reflectingProperties = new Map();\n                    }\n                    this.__reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this.isUpdatePending && shouldRequestUpdate) {\n            this.__updatePromise = this.__enqueueUpdate();\n        }\n        // Note, since this no longer returns a promise, in dev mode we return a\n        // thenable which warns if it's called.\n        return DEV_MODE\n            ? requestUpdateThenable(this.localName)\n            : undefined;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async __enqueueUpdate() {\n        this.isUpdatePending = true;\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await this.__updatePromise;\n        }\n        catch (e) {\n            // Refire any previous errors async so they do not disrupt the update\n            // cycle. Errors are refired so developers have a chance to observe\n            // them, and this can be done by implementing\n            // `window.onunhandledrejection`.\n            Promise.reject(e);\n        }\n        const result = this.scheduleUpdate();\n        // If `scheduleUpdate` returns a Promise, we await it. This is done to\n        // enable coordinating updates with a scheduler. Note, the result is\n        // checked to avoid delaying an additional microtask unless we need to.\n        if (result != null) {\n            await result;\n        }\n        return !this.isUpdatePending;\n    }\n    /**\n     * Schedules an element update. You can override this method to change the\n     * timing of updates by returning a Promise. The update will await the\n     * returned Promise, and you should resolve the Promise to allow the update\n     * to proceed. If this method is overridden, `super.scheduleUpdate()`\n     * must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```ts\n     * override protected async scheduleUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.scheduleUpdate();\n     * }\n     * ```\n     * @category updates\n     */\n    scheduleUpdate() {\n        return this.performUpdate();\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * Call `performUpdate()` to immediately process a pending update. This should\n     * generally not be needed, but it can be done in rare cases when you need to\n     * update synchronously.\n     *\n     * Note: To ensure `performUpdate()` synchronously completes a pending update,\n     * it should not be overridden. In LitElement 2.x it was suggested to override\n     * `performUpdate()` to also customizing update scheduling. Instead, you should now\n     * override `scheduleUpdate()`. For backwards compatibility with LitElement 2.x,\n     * scheduling updates via `performUpdate()` continues to work, but will make\n     * also calling `performUpdate()` to synchronously process updates difficult.\n     *\n     * @category updates\n     */\n    performUpdate() {\n        var _a, _b;\n        // Abort any update if one is not pending when this is called.\n        // This can happen if `performUpdate` is called early to \"flush\"\n        // the update.\n        if (!this.isUpdatePending) {\n            return;\n        }\n        debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({ kind: 'update' });\n        // create renderRoot before first update.\n        if (!this.hasUpdated) {\n            // Produce warning if any class properties are shadowed by class fields\n            if (DEV_MODE) {\n                const shadowedProperties = [];\n                (_a = this.constructor.__reactivePropertyKeys) === null || _a === void 0 ? void 0 : _a.forEach((p) => {\n                    var _a;\n                    if (this.hasOwnProperty(p) && !((_a = this.__instanceProperties) === null || _a === void 0 ? void 0 : _a.has(p))) {\n                        shadowedProperties.push(p);\n                    }\n                });\n                if (shadowedProperties.length) {\n                    throw new Error(`The following properties on element ${this.localName} will not ` +\n                        `trigger updates as expected because they are set using class ` +\n                        `fields: ${shadowedProperties.join(', ')}. ` +\n                        `Native class fields and some compiled output will overwrite ` +\n                        `accessors used for detecting changes. See ` +\n                        `https://lit.dev/msg/class-field-shadowing ` +\n                        `for more information.`);\n                }\n            }\n        }\n        // Mixin instance properties once, if they exist.\n        if (this.__instanceProperties) {\n            // Use forEach so this works even if for/of loops are compiled to for loops\n            // expecting arrays\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.__instanceProperties.forEach((v, p) => (this[p] = v));\n            this.__instanceProperties = undefined;\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._$changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.willUpdate(changedProperties);\n                (_b = this.__controllers) === null || _b === void 0 ? void 0 : _b.forEach((c) => { var _a; return (_a = c.hostUpdate) === null || _a === void 0 ? void 0 : _a.call(c); });\n                this.update(changedProperties);\n            }\n            else {\n                this.__markUpdated();\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            // Ensure element can accept additional updates after an exception.\n            this.__markUpdated();\n            throw e;\n        }\n        // The update is no longer considered pending and further updates are now allowed.\n        if (shouldUpdate) {\n            this._$didUpdate(changedProperties);\n        }\n    }\n    /**\n     * Invoked before `update()` to compute values needed during the update.\n     *\n     * Implement `willUpdate` to compute property values that depend on other\n     * properties and are used in the rest of the update process.\n     *\n     * ```ts\n     * willUpdate(changedProperties) {\n     *   // only need to check changed properties for an expensive computation.\n     *   if (changedProperties.has('firstName') || changedProperties.has('lastName')) {\n     *     this.sha = computeSHA(`${this.firstName} ${this.lastName}`);\n     *   }\n     * }\n     *\n     * render() {\n     *   return html`SHA: ${this.sha}`;\n     * }\n     * ```\n     *\n     * @category updates\n     */\n    willUpdate(_changedProperties) { }\n    // Note, this is an override point for polyfill-support.\n    // @internal\n    _$didUpdate(changedProperties) {\n        var _a;\n        (_a = this.__controllers) === null || _a === void 0 ? void 0 : _a.forEach((c) => { var _a; return (_a = c.hostUpdated) === null || _a === void 0 ? void 0 : _a.call(c); });\n        if (!this.hasUpdated) {\n            this.hasUpdated = true;\n            this.firstUpdated(changedProperties);\n        }\n        this.updated(changedProperties);\n        if (DEV_MODE &&\n            this.isUpdatePending &&\n            this.constructor.enabledWarnings.indexOf('change-in-update') >= 0) {\n            issueWarning('change-in-update', `Element ${this.localName} scheduled an update ` +\n                `(generally because a property was set) ` +\n                `after an update completed, causing a new update to be scheduled. ` +\n                `This is inefficient and should be avoided unless the next update ` +\n                `can only be scheduled as a side effect of the previous update.`);\n        }\n    }\n    __markUpdated() {\n        this._$changedProperties = new Map();\n        this.isUpdatePending = false;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super.getUpdateComplete()`, then any subsequent state.\n     *\n     * @return A promise of a boolean that resolves to true if the update completed\n     *     without triggering another update.\n     * @category updates\n     */\n    get updateComplete() {\n        return this.getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     * ```ts\n     * class MyElement extends LitElement {\n     *   override async getUpdateComplete() {\n     *     const result = await super.getUpdateComplete();\n     *     await this._myChild.updateComplete;\n     *     return result;\n     *   }\n     * }\n     * ```\n     *\n     * @return A promise of a boolean that resolves to true if the update completed\n     *     without triggering another update.\n     * @category updates\n     */\n    getUpdateComplete() {\n        return this.__updatePromise;\n    }\n    /**\n     * Controls whether or not `update()` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     * @category updates\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     * @category updates\n     */\n    update(_changedProperties) {\n        if (this.__reflectingProperties !== undefined) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this.__reflectingProperties.forEach((v, k) => this.__propertyToAttribute(k, this[k], v));\n            this.__reflectingProperties = undefined;\n        }\n        this.__markUpdated();\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     * @category updates\n     */\n    updated(_changedProperties) { }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * ```ts\n     * firstUpdated() {\n     *   this.renderRoot.getElementById('my-text-area').focus();\n     * }\n     * ```\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     * @category updates\n     */\n    firstUpdated(_changedProperties) { }\n}\n_e = finalized;\n/**\n * Marks class as having finished creating properties.\n */\nReactiveElement[_e] = true;\n/**\n * Memoized list of all element properties, including any superclass properties.\n * Created lazily on user subclasses when finalizing the class.\n * @nocollapse\n * @category properties\n */\nReactiveElement.elementProperties = new Map();\n/**\n * Memoized list of all element styles.\n * Created lazily on user subclasses when finalizing the class.\n * @nocollapse\n * @category styles\n */\nReactiveElement.elementStyles = [];\n/**\n * Options used when calling `attachShadow`. Set this property to customize\n * the options for the shadowRoot; for example, to create a closed\n * shadowRoot: `{mode: 'closed'}`.\n *\n * Note, these options are used in `createRenderRoot`. If this method\n * is customized, options should be respected if possible.\n * @nocollapse\n * @category rendering\n */\nReactiveElement.shadowRootOptions = { mode: 'open' };\n// Apply polyfills if available\npolyfillSupport === null || polyfillSupport === void 0 ? void 0 : polyfillSupport({ ReactiveElement });\n// Dev mode warnings...\nif (DEV_MODE) {\n    // Default warning set.\n    ReactiveElement.enabledWarnings = ['change-in-update'];\n    const ensureOwnWarnings = function (ctor) {\n        if (!ctor.hasOwnProperty(JSCompiler_renameProperty('enabledWarnings', ctor))) {\n            ctor.enabledWarnings = ctor.enabledWarnings.slice();\n        }\n    };\n    ReactiveElement.enableWarning = function (warning) {\n        ensureOwnWarnings(this);\n        if (this.enabledWarnings.indexOf(warning) < 0) {\n            this.enabledWarnings.push(warning);\n        }\n    };\n    ReactiveElement.disableWarning = function (warning) {\n        ensureOwnWarnings(this);\n        const i = this.enabledWarnings.indexOf(warning);\n        if (i >= 0) {\n            this.enabledWarnings.splice(i, 1);\n        }\n    };\n}\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for ReactiveElement usage.\n((_d = global.reactiveElementVersions) !== null && _d !== void 0 ? _d : (global.reactiveElementVersions = [])).push('1.6.3');\nif (DEV_MODE && global.reactiveElementVersions.length > 1) {\n    issueWarning('multiple-versions', `Multiple versions of Lit loaded. Loading multiple versions ` +\n        `is not recommended.`);\n}\n//# sourceMappingURL=reactive-element.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@lit/reactive-element/development/reactive-element.js\n");

/***/ }),

/***/ "./node_modules/element-internals-polyfill/dist/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/element-internals-polyfill/dist/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n(function (exports) {\n    'use strict';\n\n    const refMap = new WeakMap();\n    const validityMap = new WeakMap();\n    const hiddenInputMap = new WeakMap();\n    const internalsMap = new WeakMap();\n    const validationMessageMap = new WeakMap();\n    const formsMap = new WeakMap();\n    const shadowHostsMap = new WeakMap();\n    const formElementsMap = new WeakMap();\n    const refValueMap = new WeakMap();\n    const upgradeMap = new WeakMap();\n    const shadowRootMap = new WeakMap();\n    const validationAnchorMap = new WeakMap();\n    const documentFragmentMap = new WeakMap();\n    const connectedCallbackMap = new WeakMap();\n    const validityUpgradeMap = new WeakMap();\n\n    const aom = {\n        ariaAtomic: 'aria-atomic',\n        ariaAutoComplete: 'aria-autocomplete',\n        ariaBusy: 'aria-busy',\n        ariaChecked: 'aria-checked',\n        ariaColCount: 'aria-colcount',\n        ariaColIndex: 'aria-colindex',\n        ariaColIndexText: 'aria-colindextext',\n        ariaColSpan: 'aria-colspan',\n        ariaCurrent: 'aria-current',\n        ariaDescription: 'aria-description',\n        ariaDisabled: 'aria-disabled',\n        ariaExpanded: 'aria-expanded',\n        ariaHasPopup: 'aria-haspopup',\n        ariaHidden: 'aria-hidden',\n        ariaInvalid: 'aria-invalid',\n        ariaKeyShortcuts: 'aria-keyshortcuts',\n        ariaLabel: 'aria-label',\n        ariaLevel: 'aria-level',\n        ariaLive: 'aria-live',\n        ariaModal: 'aria-modal',\n        ariaMultiLine: 'aria-multiline',\n        ariaMultiSelectable: 'aria-multiselectable',\n        ariaOrientation: 'aria-orientation',\n        ariaPlaceholder: 'aria-placeholder',\n        ariaPosInSet: 'aria-posinset',\n        ariaPressed: 'aria-pressed',\n        ariaReadOnly: 'aria-readonly',\n        ariaRelevant: 'aria-relevant',\n        ariaRequired: 'aria-required',\n        ariaRoleDescription: 'aria-roledescription',\n        ariaRowCount: 'aria-rowcount',\n        ariaRowIndex: 'aria-rowindex',\n        ariaRowIndexText: 'aria-rowindextext',\n        ariaRowSpan: 'aria-rowspan',\n        ariaSelected: 'aria-selected',\n        ariaSetSize: 'aria-setsize',\n        ariaSort: 'aria-sort',\n        ariaValueMax: 'aria-valuemax',\n        ariaValueMin: 'aria-valuemin',\n        ariaValueNow: 'aria-valuenow',\n        ariaValueText: 'aria-valuetext',\n        role: 'role'\n    };\n    const initAom = (ref, internals) => {\n        for (let key in aom) {\n            internals[key] = null;\n            let closureValue = null;\n            const attributeName = aom[key];\n            Object.defineProperty(internals, key, {\n                get() {\n                    return closureValue;\n                },\n                set(value) {\n                    closureValue = value;\n                    if (ref.isConnected) {\n                        ref.setAttribute(attributeName, value);\n                    }\n                    else {\n                        upgradeMap.set(ref, internals);\n                    }\n                }\n            });\n        }\n    };\n\n    function initNode(node) {\n        const internals = internalsMap.get(node);\n        const { form } = internals;\n        initForm(node, form, internals);\n        initLabels(node, internals.labels);\n    }\n    const walkFieldset = (node, firstRender = false) => {\n        const walker = document.createTreeWalker(node, NodeFilter.SHOW_ELEMENT, {\n            acceptNode(node) {\n                return internalsMap.has(node) ?\n                    NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n            }\n        });\n        let current = walker.nextNode();\n        const isCallNecessary = (!firstRender || node.disabled);\n        while (current) {\n            if (current.formDisabledCallback && isCallNecessary) {\n                setDisabled(current, node.disabled);\n            }\n            current = walker.nextNode();\n        }\n    };\n    const disabledOrNameObserverConfig = { attributes: true, attributeFilter: ['disabled', 'name'] };\n    const disabledOrNameObserver = mutationObserverExists() ? new MutationObserver((mutationsList) => {\n        for (const mutation of mutationsList) {\n            const target = mutation.target;\n            if (mutation.attributeName === 'disabled') {\n                if (target.constructor['formAssociated']) {\n                    setDisabled(target, target.hasAttribute('disabled'));\n                }\n                else if (target.localName === 'fieldset') {\n                    walkFieldset(target);\n                }\n            }\n            if (mutation.attributeName === 'name') {\n                if (target.constructor['formAssociated']) {\n                    const internals = internalsMap.get(target);\n                    const value = refValueMap.get(target);\n                    internals.setFormValue(value);\n                }\n            }\n        }\n    }) : {};\n    function observerCallback(mutationList) {\n        mutationList.forEach(mutationRecord => {\n            const { addedNodes, removedNodes } = mutationRecord;\n            const added = Array.from(addedNodes);\n            const removed = Array.from(removedNodes);\n            added.forEach(node => {\n                var _a;\n                if (internalsMap.has(node) && node.constructor['formAssociated']) {\n                    initNode(node);\n                }\n                if (upgradeMap.has(node)) {\n                    const internals = upgradeMap.get(node);\n                    const aomKeys = Object.keys(aom);\n                    aomKeys\n                        .filter(key => internals[key] !== null)\n                        .forEach(key => {\n                        node.setAttribute(aom[key], internals[key]);\n                    });\n                    upgradeMap.delete(node);\n                }\n                if (validityUpgradeMap.has(node)) {\n                    const internals = validityUpgradeMap.get(node);\n                    node.setAttribute('internals-valid', internals.validity.valid.toString());\n                    node.setAttribute('internals-invalid', (!internals.validity.valid).toString());\n                    node.setAttribute('aria-invalid', (!internals.validity.valid).toString());\n                    validityUpgradeMap.delete(node);\n                }\n                if (node.localName === 'form') {\n                    const formElements = formElementsMap.get(node);\n                    const walker = document.createTreeWalker(node, NodeFilter.SHOW_ELEMENT, {\n                        acceptNode(node) {\n                            return (internalsMap.has(node) && node.constructor['formAssociated'] && !(formElements && formElements.has(node))) ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n                        }\n                    });\n                    let current = walker.nextNode();\n                    while (current) {\n                        initNode(current);\n                        current = walker.nextNode();\n                    }\n                }\n                if (node.localName === 'fieldset') {\n                    (_a = disabledOrNameObserver.observe) === null || _a === void 0 ? void 0 : _a.call(disabledOrNameObserver, node, disabledOrNameObserverConfig);\n                    walkFieldset(node, true);\n                }\n            });\n            removed.forEach(node => {\n                const internals = internalsMap.get(node);\n                if (internals && hiddenInputMap.get(internals)) {\n                    removeHiddenInputs(internals);\n                }\n                if (shadowHostsMap.has(node)) {\n                    const observer = shadowHostsMap.get(node);\n                    observer.disconnect();\n                }\n            });\n        });\n    }\n    function fragmentObserverCallback(mutationList) {\n        mutationList.forEach(mutation => {\n            const { removedNodes } = mutation;\n            removedNodes.forEach(node => {\n                const observer = documentFragmentMap.get(mutation.target);\n                if (internalsMap.has(node)) {\n                    upgradeInternals(node);\n                }\n                observer.disconnect();\n            });\n        });\n    }\n    const deferUpgrade = (fragment) => {\n        var _a, _b;\n        const observer = new MutationObserver(fragmentObserverCallback);\n        if (((_a = window === null || window === void 0 ? void 0 : window.ShadyDOM) === null || _a === void 0 ? void 0 : _a.inUse) &&\n            fragment.mode &&\n            fragment.host) {\n            fragment = fragment.host;\n        }\n        (_b = observer.observe) === null || _b === void 0 ? void 0 : _b.call(observer, fragment, { childList: true });\n        documentFragmentMap.set(fragment, observer);\n    };\n    mutationObserverExists() ? new MutationObserver(observerCallback) : {};\n    const observerConfig = {\n        childList: true,\n        subtree: true\n    };\n\n    const setDisabled = (ref, disabled) => {\n        ref.toggleAttribute('internals-disabled', disabled);\n        if (disabled) {\n            ref.setAttribute('aria-disabled', 'true');\n        }\n        else {\n            ref.removeAttribute('aria-disabled');\n        }\n        if (ref.formDisabledCallback) {\n            ref.formDisabledCallback.apply(ref, [disabled]);\n        }\n    };\n    const removeHiddenInputs = (internals) => {\n        const hiddenInputs = hiddenInputMap.get(internals);\n        hiddenInputs.forEach(hiddenInput => {\n            hiddenInput.remove();\n        });\n        hiddenInputMap.set(internals, []);\n    };\n    const createHiddenInput = (ref, internals) => {\n        const input = document.createElement('input');\n        input.type = 'hidden';\n        input.name = ref.getAttribute('name');\n        ref.after(input);\n        hiddenInputMap.get(internals).push(input);\n        return input;\n    };\n    const initRef = (ref, internals) => {\n        var _a;\n        hiddenInputMap.set(internals, []);\n        (_a = disabledOrNameObserver.observe) === null || _a === void 0 ? void 0 : _a.call(disabledOrNameObserver, ref, disabledOrNameObserverConfig);\n    };\n    const initLabels = (ref, labels) => {\n        if (labels.length) {\n            Array.from(labels).forEach(label => label.addEventListener('click', ref.click.bind(ref)));\n            let firstLabelId = labels[0].id;\n            if (!labels[0].id) {\n                firstLabelId = `${labels[0].htmlFor}_Label`;\n                labels[0].id = firstLabelId;\n            }\n            ref.setAttribute('aria-labelledby', firstLabelId);\n        }\n    };\n    const setFormValidity = (form) => {\n        const nativeControlValidity = Array.from(form.elements)\n            .filter((element) => !element.tagName.includes('-') && element.validity)\n            .map((element) => element.validity.valid);\n        const polyfilledElements = formElementsMap.get(form) || [];\n        const polyfilledValidity = Array.from(polyfilledElements)\n            .filter(control => control.isConnected)\n            .map((control) => internalsMap.get(control).validity.valid);\n        const hasInvalid = [...nativeControlValidity, ...polyfilledValidity].includes(false);\n        form.toggleAttribute('internals-invalid', hasInvalid);\n        form.toggleAttribute('internals-valid', !hasInvalid);\n    };\n    const formInputCallback = (event) => {\n        setFormValidity(findParentForm(event.target));\n    };\n    const formChangeCallback = (event) => {\n        setFormValidity(findParentForm(event.target));\n    };\n    const wireSubmitLogic = (form) => {\n        const submitButtonSelector = ['button[type=submit]', 'input[type=submit]', 'button:not([type])']\n            .map(sel => `${sel}:not([disabled])`)\n            .map(sel => `${sel}:not([form])${form.id ? `,${sel}[form='${form.id}']` : ''}`)\n            .join(',');\n        form.addEventListener('click', event => {\n            const target = event.target;\n            if (target.closest(submitButtonSelector)) {\n                const elements = formElementsMap.get(form);\n                if (form.noValidate) {\n                    return;\n                }\n                if (elements.size) {\n                    const nodes = Array.from(elements);\n                    const validityList = nodes\n                        .reverse()\n                        .map(node => {\n                        const internals = internalsMap.get(node);\n                        return internals.reportValidity();\n                    });\n                    if (validityList.includes(false)) {\n                        event.preventDefault();\n                    }\n                }\n            }\n        });\n    };\n    const formResetCallback = (event) => {\n        const elements = formElementsMap.get(event.target);\n        if (elements && elements.size) {\n            elements.forEach(element => {\n                if (element.constructor.formAssociated && element.formResetCallback) {\n                    element.formResetCallback.apply(element);\n                }\n            });\n        }\n    };\n    const initForm = (ref, form, internals) => {\n        if (form) {\n            const formElements = formElementsMap.get(form);\n            if (formElements) {\n                formElements.add(ref);\n            }\n            else {\n                const initSet = new Set();\n                initSet.add(ref);\n                formElementsMap.set(form, initSet);\n                wireSubmitLogic(form);\n                form.addEventListener('reset', formResetCallback);\n                form.addEventListener('input', formInputCallback);\n                form.addEventListener('change', formChangeCallback);\n            }\n            formsMap.set(form, { ref, internals });\n            if (ref.constructor['formAssociated'] && ref.formAssociatedCallback) {\n                setTimeout(() => {\n                    ref.formAssociatedCallback.apply(ref, [form]);\n                }, 0);\n            }\n            setFormValidity(form);\n        }\n    };\n    const findParentForm = (elem) => {\n        let parent = elem.parentNode;\n        if (parent && parent.tagName !== 'FORM') {\n            parent = findParentForm(parent);\n        }\n        return parent;\n    };\n    const throwIfNotFormAssociated = (ref, message, ErrorType = DOMException) => {\n        if (!ref.constructor['formAssociated']) {\n            throw new ErrorType(message);\n        }\n    };\n    const overrideFormMethod = (form, returnValue, method) => {\n        const elements = formElementsMap.get(form);\n        if (elements && elements.size) {\n            elements.forEach(element => {\n                const internals = internalsMap.get(element);\n                const valid = internals[method]();\n                if (!valid) {\n                    returnValue = false;\n                }\n            });\n        }\n        return returnValue;\n    };\n    const upgradeInternals = (ref) => {\n        if (ref.constructor['formAssociated']) {\n            const internals = internalsMap.get(ref);\n            const { labels, form } = internals;\n            initLabels(ref, labels);\n            initForm(ref, form, internals);\n        }\n    };\n    function mutationObserverExists() {\n        return typeof MutationObserver !== 'undefined';\n    }\n\n    class ValidityState {\n        constructor() {\n            this.badInput = false;\n            this.customError = false;\n            this.patternMismatch = false;\n            this.rangeOverflow = false;\n            this.rangeUnderflow = false;\n            this.stepMismatch = false;\n            this.tooLong = false;\n            this.tooShort = false;\n            this.typeMismatch = false;\n            this.valid = true;\n            this.valueMissing = false;\n            Object.seal(this);\n        }\n    }\n    const setValid = (validityObject) => {\n        validityObject.badInput = false;\n        validityObject.customError = false;\n        validityObject.patternMismatch = false;\n        validityObject.rangeOverflow = false;\n        validityObject.rangeUnderflow = false;\n        validityObject.stepMismatch = false;\n        validityObject.tooLong = false;\n        validityObject.tooShort = false;\n        validityObject.typeMismatch = false;\n        validityObject.valid = true;\n        validityObject.valueMissing = false;\n        return validityObject;\n    };\n    const reconcileValidity = (validityObject, newState, form) => {\n        validityObject.valid = isValid(newState);\n        Object.keys(newState).forEach(key => validityObject[key] = newState[key]);\n        if (form) {\n            setFormValidity(form);\n        }\n        return validityObject;\n    };\n    const isValid = (validityState) => {\n        let valid = true;\n        for (let key in validityState) {\n            if (key !== 'valid' && validityState[key] !== false) {\n                valid = false;\n            }\n        }\n        return valid;\n    };\n\n    const customStateMap = new WeakMap();\n    function addState(ref, stateName) {\n        ref.toggleAttribute(stateName, true);\n        if (ref.part) {\n            ref.part.add(stateName);\n        }\n    }\n    class CustomStateSet extends Set {\n        static get isPolyfilled() {\n            return true;\n        }\n        constructor(ref) {\n            super();\n            if (!ref || !ref.tagName || ref.tagName.indexOf('-') === -1) {\n                throw new TypeError('Illegal constructor');\n            }\n            customStateMap.set(this, ref);\n        }\n        add(state) {\n            if (!/^--/.test(state) || typeof state !== 'string') {\n                throw new DOMException(`Failed to execute 'add' on 'CustomStateSet': The specified value ${state} must start with '--'.`);\n            }\n            const result = super.add(state);\n            const ref = customStateMap.get(this);\n            const stateName = `state${state}`;\n            if (ref.isConnected) {\n                addState(ref, stateName);\n            }\n            else {\n                setTimeout(() => {\n                    addState(ref, stateName);\n                });\n            }\n            return result;\n        }\n        clear() {\n            for (let [entry] of this.entries()) {\n                this.delete(entry);\n            }\n            super.clear();\n        }\n        delete(state) {\n            const result = super.delete(state);\n            const ref = customStateMap.get(this);\n            if (ref.isConnected) {\n                ref.toggleAttribute(`state${state}`, false);\n                if (ref.part) {\n                    ref.part.remove(`state${state}`);\n                }\n            }\n            else {\n                setTimeout(() => {\n                    ref.toggleAttribute(`state${state}`, false);\n                    if (ref.part) {\n                        ref.part.remove(`state${state}`);\n                    }\n                });\n            }\n            return result;\n        }\n    }\n\n    function __classPrivateFieldGet(receiver, state, kind, f) {\n        if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n        if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n        return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n    }\n    function __classPrivateFieldSet(receiver, state, value, kind, f) {\n        if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n        if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n        if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n        return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n    }\n\n    var _HTMLFormControlsCollection_elements;\n    class HTMLFormControlsCollection {\n        constructor(elements) {\n            _HTMLFormControlsCollection_elements.set(this, void 0);\n            __classPrivateFieldSet(this, _HTMLFormControlsCollection_elements, elements, \"f\");\n            for (let i = 0; i < elements.length; i++) {\n                let element = elements[i];\n                this[i] = element;\n                if (element.hasAttribute('name')) {\n                    this[element.getAttribute('name')] = element;\n                }\n            }\n            Object.freeze(this);\n        }\n        get length() {\n            return __classPrivateFieldGet(this, _HTMLFormControlsCollection_elements, \"f\").length;\n        }\n        [(_HTMLFormControlsCollection_elements = new WeakMap(), Symbol.iterator)]() {\n            return __classPrivateFieldGet(this, _HTMLFormControlsCollection_elements, \"f\")[Symbol.iterator]();\n        }\n        item(i) {\n            return this[i] == null ? null : this[i];\n        }\n        namedItem(name) {\n            return this[name] == null ? null : this[name];\n        }\n    }\n\n    function patchFormPrototype() {\n        const checkValidity = HTMLFormElement.prototype.checkValidity;\n        HTMLFormElement.prototype.checkValidity = checkValidityOverride;\n        const reportValidity = HTMLFormElement.prototype.reportValidity;\n        HTMLFormElement.prototype.reportValidity = reportValidityOverride;\n        function checkValidityOverride(...args) {\n            let returnValue = checkValidity.apply(this, args);\n            return overrideFormMethod(this, returnValue, 'checkValidity');\n        }\n        function reportValidityOverride(...args) {\n            let returnValue = reportValidity.apply(this, args);\n            return overrideFormMethod(this, returnValue, 'reportValidity');\n        }\n        const { get } = Object.getOwnPropertyDescriptor(HTMLFormElement.prototype, 'elements');\n        Object.defineProperty(HTMLFormElement.prototype, 'elements', {\n            get(...args) {\n                const elements = get.call(this, ...args);\n                const polyfilledElements = Array.from(formElementsMap.get(this) || []);\n                if (polyfilledElements.length === 0) {\n                    return elements;\n                }\n                const orderedElements = Array.from(elements).concat(polyfilledElements).sort((a, b) => {\n                    if (a.compareDocumentPosition) {\n                        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n                    }\n                    return 0;\n                });\n                return new HTMLFormControlsCollection(orderedElements);\n            },\n        });\n    }\n\n    class ElementInternals {\n        static get isPolyfilled() {\n            return true;\n        }\n        constructor(ref) {\n            if (!ref || !ref.tagName || ref.tagName.indexOf('-') === -1) {\n                throw new TypeError('Illegal constructor');\n            }\n            const rootNode = ref.getRootNode();\n            const validity = new ValidityState();\n            this.states = new CustomStateSet(ref);\n            refMap.set(this, ref);\n            validityMap.set(this, validity);\n            internalsMap.set(ref, this);\n            initAom(ref, this);\n            initRef(ref, this);\n            Object.seal(this);\n            if (rootNode instanceof DocumentFragment) {\n                deferUpgrade(rootNode);\n            }\n        }\n        checkValidity() {\n            const ref = refMap.get(this);\n            throwIfNotFormAssociated(ref, `Failed to execute 'checkValidity' on 'ElementInternals': The target element is not a form-associated custom element.`);\n            if (!this.willValidate) {\n                return true;\n            }\n            const validity = validityMap.get(this);\n            if (!validity.valid) {\n                const validityEvent = new Event('invalid', {\n                    bubbles: false,\n                    cancelable: true,\n                    composed: false\n                });\n                ref.dispatchEvent(validityEvent);\n            }\n            return validity.valid;\n        }\n        get form() {\n            const ref = refMap.get(this);\n            throwIfNotFormAssociated(ref, `Failed to read the 'form' property from 'ElementInternals': The target element is not a form-associated custom element.`);\n            let form;\n            if (ref.constructor['formAssociated'] === true) {\n                form = findParentForm(ref);\n            }\n            return form;\n        }\n        get labels() {\n            const ref = refMap.get(this);\n            throwIfNotFormAssociated(ref, `Failed to read the 'labels' property from 'ElementInternals': The target element is not a form-associated custom element.`);\n            const id = ref.getAttribute('id');\n            const hostRoot = ref.getRootNode();\n            if (hostRoot && id) {\n                return hostRoot.querySelectorAll(`[for=\"${id}\"]`);\n            }\n            return [];\n        }\n        reportValidity() {\n            const ref = refMap.get(this);\n            throwIfNotFormAssociated(ref, `Failed to execute 'reportValidity' on 'ElementInternals': The target element is not a form-associated custom element.`);\n            if (!this.willValidate) {\n                return true;\n            }\n            const valid = this.checkValidity();\n            const anchor = validationAnchorMap.get(this);\n            if (anchor && !ref.constructor['formAssociated']) {\n                throw new DOMException(`Failed to execute 'reportValidity' on 'ElementInternals': The target element is not a form-associated custom element.`);\n            }\n            if (!valid && anchor) {\n                ref.focus();\n                anchor.focus();\n            }\n            return valid;\n        }\n        setFormValue(value) {\n            const ref = refMap.get(this);\n            throwIfNotFormAssociated(ref, `Failed to execute 'setFormValue' on 'ElementInternals': The target element is not a form-associated custom element.`);\n            removeHiddenInputs(this);\n            if (value != null && !(value instanceof FormData)) {\n                if (ref.getAttribute('name')) {\n                    const hiddenInput = createHiddenInput(ref, this);\n                    hiddenInput.value = value;\n                }\n            }\n            else if (value != null && value instanceof FormData) {\n                Array.from(value).reverse().forEach(([formDataKey, formDataValue]) => {\n                    if (typeof formDataValue === 'string') {\n                        const hiddenInput = createHiddenInput(ref, this);\n                        hiddenInput.name = formDataKey;\n                        hiddenInput.value = formDataValue;\n                    }\n                });\n            }\n            refValueMap.set(ref, value);\n        }\n        setValidity(validityChanges, validationMessage, anchor) {\n            const ref = refMap.get(this);\n            throwIfNotFormAssociated(ref, `Failed to execute 'setValidity' on 'ElementInternals': The target element is not a form-associated custom element.`);\n            if (!validityChanges) {\n                throw new TypeError('Failed to execute \\'setValidity\\' on \\'ElementInternals\\': 1 argument required, but only 0 present.');\n            }\n            validationAnchorMap.set(this, anchor);\n            const validity = validityMap.get(this);\n            const validityChangesObj = {};\n            for (const key in validityChanges) {\n                validityChangesObj[key] = validityChanges[key];\n            }\n            if (Object.keys(validityChangesObj).length === 0) {\n                setValid(validity);\n            }\n            const check = Object.assign(Object.assign({}, validity), validityChangesObj);\n            delete check.valid;\n            const { valid } = reconcileValidity(validity, check, this.form);\n            if (!valid && !validationMessage) {\n                throw new DOMException(`Failed to execute 'setValidity' on 'ElementInternals': The second argument should not be empty if one or more flags in the first argument are true.`);\n            }\n            validationMessageMap.set(this, valid ? '' : validationMessage);\n            if (ref.isConnected) {\n                ref.toggleAttribute('internals-invalid', !valid);\n                ref.toggleAttribute('internals-valid', valid);\n                ref.setAttribute('aria-invalid', `${!valid}`);\n            }\n            else {\n                validityUpgradeMap.set(ref, this);\n            }\n        }\n        get shadowRoot() {\n            const ref = refMap.get(this);\n            const shadowRoot = shadowRootMap.get(ref);\n            if (shadowRoot) {\n                return shadowRoot;\n            }\n            return null;\n        }\n        get validationMessage() {\n            const ref = refMap.get(this);\n            throwIfNotFormAssociated(ref, `Failed to read the 'validationMessage' property from 'ElementInternals': The target element is not a form-associated custom element.`);\n            return validationMessageMap.get(this);\n        }\n        get validity() {\n            const ref = refMap.get(this);\n            throwIfNotFormAssociated(ref, `Failed to read the 'validity' property from 'ElementInternals': The target element is not a form-associated custom element.`);\n            const validity = validityMap.get(this);\n            return validity;\n        }\n        get willValidate() {\n            const ref = refMap.get(this);\n            throwIfNotFormAssociated(ref, `Failed to read the 'willValidate' property from 'ElementInternals': The target element is not a form-associated custom element.`);\n            if ((ref.disabled || ref.hasAttribute('disabled')) ||\n                ref.hasAttribute('readonly')) {\n                return false;\n            }\n            return true;\n        }\n    }\n    function isElementInternalsSupported() {\n        if (typeof window === 'undefined' || !window.ElementInternals || !HTMLElement.prototype.attachInternals) {\n            return false;\n        }\n        class ElementInternalsFeatureDetection extends HTMLElement {\n            constructor() {\n                super();\n                this.internals = this.attachInternals();\n            }\n        }\n        const randomName = `element-internals-feature-detection-${Math.random().toString(36).replace(/[^a-z]+/g, '')}`;\n        customElements.define(randomName, ElementInternalsFeatureDetection);\n        const featureDetectionElement = new ElementInternalsFeatureDetection();\n        return [\n            'shadowRoot',\n            'form',\n            'willValidate',\n            'validity',\n            'validationMessage',\n            'labels',\n            'setFormValue',\n            'setValidity',\n            'checkValidity',\n            'reportValidity'\n        ].every(prop => prop in featureDetectionElement.internals);\n    }\n    let hasElementInternalsPolyfillBeenApplied = false;\n    let hasCustomStateSetPolyfillBeenApplied = false;\n    function forceCustomStateSetPolyfill(attachInternals) {\n        if (hasCustomStateSetPolyfillBeenApplied) {\n            return;\n        }\n        hasCustomStateSetPolyfillBeenApplied = true;\n        window.CustomStateSet = CustomStateSet;\n        if (attachInternals) {\n            HTMLElement.prototype.attachInternals = function (...args) {\n                const internals = attachInternals.call(this, args);\n                internals.states = new CustomStateSet(this);\n                return internals;\n            };\n        }\n    }\n    function forceElementInternalsPolyfill(forceCustomStateSet = true) {\n        if (hasElementInternalsPolyfillBeenApplied) {\n            return;\n        }\n        hasElementInternalsPolyfillBeenApplied = true;\n        if (typeof window !== 'undefined') {\n            window.ElementInternals = ElementInternals;\n        }\n        if (typeof CustomElementRegistry !== 'undefined') {\n            const define = CustomElementRegistry.prototype.define;\n            CustomElementRegistry.prototype.define = function (name, constructor, options) {\n                if (constructor.formAssociated) {\n                    const connectedCallback = constructor.prototype.connectedCallback;\n                    constructor.prototype.connectedCallback = function () {\n                        if (!connectedCallbackMap.has(this)) {\n                            connectedCallbackMap.set(this, true);\n                            if (this.hasAttribute('disabled')) {\n                                setDisabled(this, true);\n                            }\n                        }\n                        if (connectedCallback != null) {\n                            connectedCallback.apply(this);\n                        }\n                        upgradeInternals(this);\n                    };\n                }\n                define.call(this, name, constructor, options);\n            };\n        }\n        if (typeof HTMLElement !== 'undefined') {\n            HTMLElement.prototype.attachInternals = function () {\n                if (!this.tagName) {\n                    return {};\n                }\n                else if (this.tagName.indexOf('-') === -1) {\n                    throw new Error(`Failed to execute 'attachInternals' on 'HTMLElement': Unable to attach ElementInternals to non-custom elements.`);\n                }\n                if (internalsMap.has(this)) {\n                    throw new DOMException(`DOMException: Failed to execute 'attachInternals' on 'HTMLElement': ElementInternals for the specified element was already attached.`);\n                }\n                return new ElementInternals(this);\n            };\n        }\n        if (typeof Element !== 'undefined') {\n            function attachShadowObserver(...args) {\n                const shadowRoot = attachShadow.apply(this, args);\n                shadowRootMap.set(this, shadowRoot);\n                if (mutationObserverExists()) {\n                    const observer = new MutationObserver(observerCallback);\n                    if (window.ShadyDOM) {\n                        observer.observe(this, observerConfig);\n                    }\n                    else {\n                        observer.observe(shadowRoot, observerConfig);\n                    }\n                    shadowHostsMap.set(this, observer);\n                }\n                return shadowRoot;\n            }\n            const attachShadow = Element.prototype.attachShadow;\n            Element.prototype.attachShadow = attachShadowObserver;\n        }\n        if (mutationObserverExists() && typeof document !== 'undefined') {\n            const documentObserver = new MutationObserver(observerCallback);\n            documentObserver.observe(document.documentElement, observerConfig);\n        }\n        if (typeof HTMLFormElement !== 'undefined') {\n            patchFormPrototype();\n        }\n        if (forceCustomStateSet ||\n            (typeof window !== \"undefined\" && !window.CustomStateSet)) {\n            forceCustomStateSetPolyfill();\n        }\n    }\n\n    const isCePolyfill = !!customElements.polyfillWrapFlushCallback;\n    if (!isCePolyfill) {\n        if (!isElementInternalsSupported()) {\n            forceElementInternalsPolyfill(false);\n        }\n        else if (typeof window !== \"undefined\" && !window.CustomStateSet) {\n            forceCustomStateSetPolyfill(HTMLElement.prototype.attachInternals);\n        }\n    }\n\n    exports.forceCustomStateSetPolyfill = forceCustomStateSetPolyfill;\n    exports.forceElementInternalsPolyfill = forceElementInternalsPolyfill;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n    return exports;\n\n})({});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/element-internals-polyfill/dist/index.js\n");

/***/ }),

/***/ "./node_modules/iconify-icon/dist/iconify-icon.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/iconify-icon/dist/iconify-icon.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IconifyIconComponent: () => (/* binding */ IconifyIconComponent),\n/* harmony export */   _api: () => (/* binding */ _api),\n/* harmony export */   addAPIProvider: () => (/* binding */ addAPIProvider),\n/* harmony export */   addCollection: () => (/* binding */ addCollection),\n/* harmony export */   addIcon: () => (/* binding */ addIcon),\n/* harmony export */   appendCustomStyle: () => (/* binding */ appendCustomStyle),\n/* harmony export */   buildIcon: () => (/* binding */ buildIcon),\n/* harmony export */   calculateSize: () => (/* binding */ calculateSize),\n/* harmony export */   disableCache: () => (/* binding */ disableCache),\n/* harmony export */   enableCache: () => (/* binding */ enableCache),\n/* harmony export */   getIcon: () => (/* binding */ getIcon),\n/* harmony export */   iconExists: () => (/* binding */ iconExists),\n/* harmony export */   listIcons: () => (/* binding */ listIcons),\n/* harmony export */   loadIcon: () => (/* binding */ loadIcon),\n/* harmony export */   loadIcons: () => (/* binding */ loadIcons)\n/* harmony export */ });\n/**\n* (c) Iconify\n*\n* For the full copyright and license information, please view the license.txt\n* files at https://github.com/iconify/iconify\n*\n* Licensed under MIT.\n*\n* @license MIT\n* @version 1.0.8\n*/\nconst defaultIconDimensions = Object.freeze(\n  {\n    left: 0,\n    top: 0,\n    width: 16,\n    height: 16\n  }\n);\nconst defaultIconTransformations = Object.freeze({\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\nconst defaultIconProps = Object.freeze({\n  ...defaultIconDimensions,\n  ...defaultIconTransformations\n});\nconst defaultExtendedIconProps = Object.freeze({\n  ...defaultIconProps,\n  body: \"\",\n  hidden: false\n});\n\nconst defaultIconSizeCustomisations = Object.freeze({\n  width: null,\n  height: null\n});\nconst defaultIconCustomisations = Object.freeze({\n  // Dimensions\n  ...defaultIconSizeCustomisations,\n  // Transformations\n  ...defaultIconTransformations\n});\n\nfunction rotateFromString(value, defaultValue = 0) {\n  const units = value.replace(/^-?[0-9.]*/, \"\");\n  function cleanup(value2) {\n    while (value2 < 0) {\n      value2 += 4;\n    }\n    return value2 % 4;\n  }\n  if (units === \"\") {\n    const num = parseInt(value);\n    return isNaN(num) ? 0 : cleanup(num);\n  } else if (units !== value) {\n    let split = 0;\n    switch (units) {\n      case \"%\":\n        split = 25;\n        break;\n      case \"deg\":\n        split = 90;\n    }\n    if (split) {\n      let num = parseFloat(value.slice(0, value.length - units.length));\n      if (isNaN(num)) {\n        return 0;\n      }\n      num = num / split;\n      return num % 1 === 0 ? cleanup(num) : 0;\n    }\n  }\n  return defaultValue;\n}\n\nconst separator = /[\\s,]+/;\nfunction flipFromString(custom, flip) {\n  flip.split(separator).forEach((str) => {\n    const value = str.trim();\n    switch (value) {\n      case \"horizontal\":\n        custom.hFlip = true;\n        break;\n      case \"vertical\":\n        custom.vFlip = true;\n        break;\n    }\n  });\n}\n\nconst defaultCustomisations = {\n    ...defaultIconCustomisations,\n    preserveAspectRatio: '',\n};\n/**\n * Get customisations\n */\nfunction getCustomisations(node) {\n    const customisations = {\n        ...defaultCustomisations,\n    };\n    const attr = (key, def) => node.getAttribute(key) || def;\n    // Dimensions\n    customisations.width = attr('width', null);\n    customisations.height = attr('height', null);\n    // Rotation\n    customisations.rotate = rotateFromString(attr('rotate', ''));\n    // Flip\n    flipFromString(customisations, attr('flip', ''));\n    // SVG attributes\n    customisations.preserveAspectRatio = attr('preserveAspectRatio', attr('preserveaspectratio', ''));\n    return customisations;\n}\n/**\n * Check if customisations have been updated\n */\nfunction haveCustomisationsChanged(value1, value2) {\n    for (const key in defaultCustomisations) {\n        if (value1[key] !== value2[key]) {\n            return true;\n        }\n    }\n    return false;\n}\n\nconst matchIconName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\nconst stringToIcon = (value, validate, allowSimpleName, provider = \"\") => {\n  const colonSeparated = value.split(\":\");\n  if (value.slice(0, 1) === \"@\") {\n    if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n      return null;\n    }\n    provider = colonSeparated.shift().slice(1);\n  }\n  if (colonSeparated.length > 3 || !colonSeparated.length) {\n    return null;\n  }\n  if (colonSeparated.length > 1) {\n    const name2 = colonSeparated.pop();\n    const prefix = colonSeparated.pop();\n    const result = {\n      // Allow provider without '@': \"provider:prefix:name\"\n      provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n      prefix,\n      name: name2\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  const name = colonSeparated[0];\n  const dashSeparated = name.split(\"-\");\n  if (dashSeparated.length > 1) {\n    const result = {\n      provider,\n      prefix: dashSeparated.shift(),\n      name: dashSeparated.join(\"-\")\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  if (allowSimpleName && provider === \"\") {\n    const result = {\n      provider,\n      prefix: \"\",\n      name\n    };\n    return validate && !validateIconName(result, allowSimpleName) ? null : result;\n  }\n  return null;\n};\nconst validateIconName = (icon, allowSimpleName) => {\n  if (!icon) {\n    return false;\n  }\n  return !!((icon.provider === \"\" || icon.provider.match(matchIconName)) && (allowSimpleName && icon.prefix === \"\" || icon.prefix.match(matchIconName)) && icon.name.match(matchIconName));\n};\n\nfunction mergeIconTransformations(obj1, obj2) {\n  const result = {};\n  if (!obj1.hFlip !== !obj2.hFlip) {\n    result.hFlip = true;\n  }\n  if (!obj1.vFlip !== !obj2.vFlip) {\n    result.vFlip = true;\n  }\n  const rotate = ((obj1.rotate || 0) + (obj2.rotate || 0)) % 4;\n  if (rotate) {\n    result.rotate = rotate;\n  }\n  return result;\n}\n\nfunction mergeIconData(parent, child) {\n  const result = mergeIconTransformations(parent, child);\n  for (const key in defaultExtendedIconProps) {\n    if (key in defaultIconTransformations) {\n      if (key in parent && !(key in result)) {\n        result[key] = defaultIconTransformations[key];\n      }\n    } else if (key in child) {\n      result[key] = child[key];\n    } else if (key in parent) {\n      result[key] = parent[key];\n    }\n  }\n  return result;\n}\n\nfunction getIconsTree(data, names) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  const resolved = /* @__PURE__ */ Object.create(null);\n  function resolve(name) {\n    if (icons[name]) {\n      return resolved[name] = [];\n    }\n    if (!(name in resolved)) {\n      resolved[name] = null;\n      const parent = aliases[name] && aliases[name].parent;\n      const value = parent && resolve(parent);\n      if (value) {\n        resolved[name] = [parent].concat(value);\n      }\n    }\n    return resolved[name];\n  }\n  (names || Object.keys(icons).concat(Object.keys(aliases))).forEach(resolve);\n  return resolved;\n}\n\nfunction internalGetIconData(data, name, tree) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  let currentProps = {};\n  function parse(name2) {\n    currentProps = mergeIconData(\n      icons[name2] || aliases[name2],\n      currentProps\n    );\n  }\n  parse(name);\n  tree.forEach(parse);\n  return mergeIconData(data, currentProps);\n}\n\nfunction parseIconSet(data, callback) {\n  const names = [];\n  if (typeof data !== \"object\" || typeof data.icons !== \"object\") {\n    return names;\n  }\n  if (data.not_found instanceof Array) {\n    data.not_found.forEach((name) => {\n      callback(name, null);\n      names.push(name);\n    });\n  }\n  const tree = getIconsTree(data);\n  for (const name in tree) {\n    const item = tree[name];\n    if (item) {\n      callback(name, internalGetIconData(data, name, item));\n      names.push(name);\n    }\n  }\n  return names;\n}\n\nconst optionalPropertyDefaults = {\n  provider: \"\",\n  aliases: {},\n  not_found: {},\n  ...defaultIconDimensions\n};\nfunction checkOptionalProps(item, defaults) {\n  for (const prop in defaults) {\n    if (prop in item && typeof item[prop] !== typeof defaults[prop]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction quicklyValidateIconSet(obj) {\n  if (typeof obj !== \"object\" || obj === null) {\n    return null;\n  }\n  const data = obj;\n  if (typeof data.prefix !== \"string\" || !obj.icons || typeof obj.icons !== \"object\") {\n    return null;\n  }\n  if (!checkOptionalProps(obj, optionalPropertyDefaults)) {\n    return null;\n  }\n  const icons = data.icons;\n  for (const name in icons) {\n    const icon = icons[name];\n    if (!name.match(matchIconName) || typeof icon.body !== \"string\" || !checkOptionalProps(\n      icon,\n      defaultExtendedIconProps\n    )) {\n      return null;\n    }\n  }\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  for (const name in aliases) {\n    const icon = aliases[name];\n    const parent = icon.parent;\n    if (!name.match(matchIconName) || typeof parent !== \"string\" || !icons[parent] && !aliases[parent] || !checkOptionalProps(\n      icon,\n      defaultExtendedIconProps\n    )) {\n      return null;\n    }\n  }\n  return data;\n}\n\nconst dataStorage = /* @__PURE__ */ Object.create(null);\nfunction newStorage(provider, prefix) {\n  return {\n    provider,\n    prefix,\n    icons: /* @__PURE__ */ Object.create(null),\n    missing: /* @__PURE__ */ new Set()\n  };\n}\nfunction getStorage(provider, prefix) {\n  const providerStorage = dataStorage[provider] || (dataStorage[provider] = /* @__PURE__ */ Object.create(null));\n  return providerStorage[prefix] || (providerStorage[prefix] = newStorage(provider, prefix));\n}\nfunction addIconSet(storage, data) {\n  if (!quicklyValidateIconSet(data)) {\n    return [];\n  }\n  return parseIconSet(data, (name, icon) => {\n    if (icon) {\n      storage.icons[name] = icon;\n    } else {\n      storage.missing.add(name);\n    }\n  });\n}\nfunction addIconToStorage(storage, name, icon) {\n  try {\n    if (typeof icon.body === \"string\") {\n      storage.icons[name] = { ...icon };\n      return true;\n    }\n  } catch (err) {\n  }\n  return false;\n}\nfunction listIcons$1(provider, prefix) {\n  let allIcons = [];\n  const providers = typeof provider === \"string\" ? [provider] : Object.keys(dataStorage);\n  providers.forEach((provider2) => {\n    const prefixes = typeof provider2 === \"string\" && typeof prefix === \"string\" ? [prefix] : Object.keys(dataStorage[provider2] || {});\n    prefixes.forEach((prefix2) => {\n      const storage = getStorage(provider2, prefix2);\n      allIcons = allIcons.concat(\n        Object.keys(storage.icons).map(\n          (name) => (provider2 !== \"\" ? \"@\" + provider2 + \":\" : \"\") + prefix2 + \":\" + name\n        )\n      );\n    });\n  });\n  return allIcons;\n}\n\nlet simpleNames = false;\nfunction allowSimpleNames(allow) {\n  if (typeof allow === \"boolean\") {\n    simpleNames = allow;\n  }\n  return simpleNames;\n}\nfunction getIconData(name) {\n  const icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\n  if (icon) {\n    const storage = getStorage(icon.provider, icon.prefix);\n    const iconName = icon.name;\n    return storage.icons[iconName] || (storage.missing.has(iconName) ? null : void 0);\n  }\n}\nfunction addIcon$1(name, data) {\n  const icon = stringToIcon(name, true, simpleNames);\n  if (!icon) {\n    return false;\n  }\n  const storage = getStorage(icon.provider, icon.prefix);\n  return addIconToStorage(storage, icon.name, data);\n}\nfunction addCollection$1(data, provider) {\n  if (typeof data !== \"object\") {\n    return false;\n  }\n  if (typeof provider !== \"string\") {\n    provider = data.provider || \"\";\n  }\n  if (simpleNames && !provider && !data.prefix) {\n    let added = false;\n    if (quicklyValidateIconSet(data)) {\n      data.prefix = \"\";\n      parseIconSet(data, (name, icon) => {\n        if (icon && addIcon$1(name, icon)) {\n          added = true;\n        }\n      });\n    }\n    return added;\n  }\n  const prefix = data.prefix;\n  if (!validateIconName({\n    provider,\n    prefix,\n    name: \"a\"\n  })) {\n    return false;\n  }\n  const storage = getStorage(provider, prefix);\n  return !!addIconSet(storage, data);\n}\nfunction iconExists$1(name) {\n  return !!getIconData(name);\n}\nfunction getIcon$1(name) {\n  const result = getIconData(name);\n  return result ? {\n    ...defaultIconProps,\n    ...result\n  } : null;\n}\n\nfunction sortIcons(icons) {\n  const result = {\n    loaded: [],\n    missing: [],\n    pending: []\n  };\n  const storage = /* @__PURE__ */ Object.create(null);\n  icons.sort((a, b) => {\n    if (a.provider !== b.provider) {\n      return a.provider.localeCompare(b.provider);\n    }\n    if (a.prefix !== b.prefix) {\n      return a.prefix.localeCompare(b.prefix);\n    }\n    return a.name.localeCompare(b.name);\n  });\n  let lastIcon = {\n    provider: \"\",\n    prefix: \"\",\n    name: \"\"\n  };\n  icons.forEach((icon) => {\n    if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {\n      return;\n    }\n    lastIcon = icon;\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    const providerStorage = storage[provider] || (storage[provider] = /* @__PURE__ */ Object.create(null));\n    const localStorage = providerStorage[prefix] || (providerStorage[prefix] = getStorage(provider, prefix));\n    let list;\n    if (name in localStorage.icons) {\n      list = result.loaded;\n    } else if (prefix === \"\" || localStorage.missing.has(name)) {\n      list = result.missing;\n    } else {\n      list = result.pending;\n    }\n    const item = {\n      provider,\n      prefix,\n      name\n    };\n    list.push(item);\n  });\n  return result;\n}\n\nfunction removeCallback(storages, id) {\n  storages.forEach((storage) => {\n    const items = storage.loaderCallbacks;\n    if (items) {\n      storage.loaderCallbacks = items.filter((row) => row.id !== id);\n    }\n  });\n}\nfunction updateCallbacks(storage) {\n  if (!storage.pendingCallbacksFlag) {\n    storage.pendingCallbacksFlag = true;\n    setTimeout(() => {\n      storage.pendingCallbacksFlag = false;\n      const items = storage.loaderCallbacks ? storage.loaderCallbacks.slice(0) : [];\n      if (!items.length) {\n        return;\n      }\n      let hasPending = false;\n      const provider = storage.provider;\n      const prefix = storage.prefix;\n      items.forEach((item) => {\n        const icons = item.icons;\n        const oldLength = icons.pending.length;\n        icons.pending = icons.pending.filter((icon) => {\n          if (icon.prefix !== prefix) {\n            return true;\n          }\n          const name = icon.name;\n          if (storage.icons[name]) {\n            icons.loaded.push({\n              provider,\n              prefix,\n              name\n            });\n          } else if (storage.missing.has(name)) {\n            icons.missing.push({\n              provider,\n              prefix,\n              name\n            });\n          } else {\n            hasPending = true;\n            return true;\n          }\n          return false;\n        });\n        if (icons.pending.length !== oldLength) {\n          if (!hasPending) {\n            removeCallback([storage], item.id);\n          }\n          item.callback(\n            icons.loaded.slice(0),\n            icons.missing.slice(0),\n            icons.pending.slice(0),\n            item.abort\n          );\n        }\n      });\n    });\n  }\n}\nlet idCounter = 0;\nfunction storeCallback(callback, icons, pendingSources) {\n  const id = idCounter++;\n  const abort = removeCallback.bind(null, pendingSources, id);\n  if (!icons.pending.length) {\n    return abort;\n  }\n  const item = {\n    id,\n    icons,\n    callback,\n    abort\n  };\n  pendingSources.forEach((storage) => {\n    (storage.loaderCallbacks || (storage.loaderCallbacks = [])).push(item);\n  });\n  return abort;\n}\n\nconst storage = /* @__PURE__ */ Object.create(null);\nfunction setAPIModule(provider, item) {\n  storage[provider] = item;\n}\nfunction getAPIModule(provider) {\n  return storage[provider] || storage[\"\"];\n}\n\nfunction listToIcons(list, validate = true, simpleNames = false) {\n  const result = [];\n  list.forEach((item) => {\n    const icon = typeof item === \"string\" ? stringToIcon(item, validate, simpleNames) : item;\n    if (icon) {\n      result.push(icon);\n    }\n  });\n  return result;\n}\n\n// src/config.ts\nvar defaultConfig = {\n  resources: [],\n  index: 0,\n  timeout: 2e3,\n  rotate: 750,\n  random: false,\n  dataAfterTimeout: false\n};\n\n// src/query.ts\nfunction sendQuery(config, payload, query, done) {\n  const resourcesCount = config.resources.length;\n  const startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\n  let resources;\n  if (config.random) {\n    let list = config.resources.slice(0);\n    resources = [];\n    while (list.length > 1) {\n      const nextIndex = Math.floor(Math.random() * list.length);\n      resources.push(list[nextIndex]);\n      list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n    }\n    resources = resources.concat(list);\n  } else {\n    resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\n  }\n  const startTime = Date.now();\n  let status = \"pending\";\n  let queriesSent = 0;\n  let lastError;\n  let timer = null;\n  let queue = [];\n  let doneCallbacks = [];\n  if (typeof done === \"function\") {\n    doneCallbacks.push(done);\n  }\n  function resetTimer() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  function abort() {\n    if (status === \"pending\") {\n      status = \"aborted\";\n    }\n    resetTimer();\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function subscribe(callback, overwrite) {\n    if (overwrite) {\n      doneCallbacks = [];\n    }\n    if (typeof callback === \"function\") {\n      doneCallbacks.push(callback);\n    }\n  }\n  function getQueryStatus() {\n    return {\n      startTime,\n      payload,\n      status,\n      queriesSent,\n      queriesPending: queue.length,\n      subscribe,\n      abort\n    };\n  }\n  function failQuery() {\n    status = \"failed\";\n    doneCallbacks.forEach((callback) => {\n      callback(void 0, lastError);\n    });\n  }\n  function clearQueue() {\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function moduleResponse(item, response, data) {\n    const isError = response !== \"success\";\n    queue = queue.filter((queued) => queued !== item);\n    switch (status) {\n      case \"pending\":\n        break;\n      case \"failed\":\n        if (isError || !config.dataAfterTimeout) {\n          return;\n        }\n        break;\n      default:\n        return;\n    }\n    if (response === \"abort\") {\n      lastError = data;\n      failQuery();\n      return;\n    }\n    if (isError) {\n      lastError = data;\n      if (!queue.length) {\n        if (!resources.length) {\n          failQuery();\n        } else {\n          execNext();\n        }\n      }\n      return;\n    }\n    resetTimer();\n    clearQueue();\n    if (!config.random) {\n      const index = config.resources.indexOf(item.resource);\n      if (index !== -1 && index !== config.index) {\n        config.index = index;\n      }\n    }\n    status = \"completed\";\n    doneCallbacks.forEach((callback) => {\n      callback(data);\n    });\n  }\n  function execNext() {\n    if (status !== \"pending\") {\n      return;\n    }\n    resetTimer();\n    const resource = resources.shift();\n    if (resource === void 0) {\n      if (queue.length) {\n        timer = setTimeout(() => {\n          resetTimer();\n          if (status === \"pending\") {\n            clearQueue();\n            failQuery();\n          }\n        }, config.timeout);\n        return;\n      }\n      failQuery();\n      return;\n    }\n    const item = {\n      status: \"pending\",\n      resource,\n      callback: (status2, data) => {\n        moduleResponse(item, status2, data);\n      }\n    };\n    queue.push(item);\n    queriesSent++;\n    timer = setTimeout(execNext, config.rotate);\n    query(resource, payload, item.callback);\n  }\n  setTimeout(execNext);\n  return getQueryStatus;\n}\n\n// src/index.ts\nfunction initRedundancy(cfg) {\n  const config = {\n    ...defaultConfig,\n    ...cfg\n  };\n  let queries = [];\n  function cleanup() {\n    queries = queries.filter((item) => item().status === \"pending\");\n  }\n  function query(payload, queryCallback, doneCallback) {\n    const query2 = sendQuery(\n      config,\n      payload,\n      queryCallback,\n      (data, error) => {\n        cleanup();\n        if (doneCallback) {\n          doneCallback(data, error);\n        }\n      }\n    );\n    queries.push(query2);\n    return query2;\n  }\n  function find(callback) {\n    return queries.find((value) => {\n      return callback(value);\n    }) || null;\n  }\n  const instance = {\n    query,\n    find,\n    setIndex: (index) => {\n      config.index = index;\n    },\n    getIndex: () => config.index,\n    cleanup\n  };\n  return instance;\n}\n\nfunction createAPIConfig(source) {\n  let resources;\n  if (typeof source.resources === \"string\") {\n    resources = [source.resources];\n  } else {\n    resources = source.resources;\n    if (!(resources instanceof Array) || !resources.length) {\n      return null;\n    }\n  }\n  const result = {\n    // API hosts\n    resources,\n    // Root path\n    path: source.path || \"/\",\n    // URL length limit\n    maxURL: source.maxURL || 500,\n    // Timeout before next host is used.\n    rotate: source.rotate || 750,\n    // Timeout before failing query.\n    timeout: source.timeout || 5e3,\n    // Randomise default API end point.\n    random: source.random === true,\n    // Start index\n    index: source.index || 0,\n    // Receive data after time out (used if time out kicks in first, then API module sends data anyway).\n    dataAfterTimeout: source.dataAfterTimeout !== false\n  };\n  return result;\n}\nconst configStorage = /* @__PURE__ */ Object.create(null);\nconst fallBackAPISources = [\n  \"https://api.simplesvg.com\",\n  \"https://api.unisvg.com\"\n];\nconst fallBackAPI = [];\nwhile (fallBackAPISources.length > 0) {\n  if (fallBackAPISources.length === 1) {\n    fallBackAPI.push(fallBackAPISources.shift());\n  } else {\n    if (Math.random() > 0.5) {\n      fallBackAPI.push(fallBackAPISources.shift());\n    } else {\n      fallBackAPI.push(fallBackAPISources.pop());\n    }\n  }\n}\nconfigStorage[\"\"] = createAPIConfig({\n  resources: [\"https://api.iconify.design\"].concat(fallBackAPI)\n});\nfunction addAPIProvider$1(provider, customConfig) {\n  const config = createAPIConfig(customConfig);\n  if (config === null) {\n    return false;\n  }\n  configStorage[provider] = config;\n  return true;\n}\nfunction getAPIConfig(provider) {\n  return configStorage[provider];\n}\nfunction listAPIProviders() {\n  return Object.keys(configStorage);\n}\n\nfunction emptyCallback$1() {\n}\nconst redundancyCache = /* @__PURE__ */ Object.create(null);\nfunction getRedundancyCache(provider) {\n  if (!redundancyCache[provider]) {\n    const config = getAPIConfig(provider);\n    if (!config) {\n      return;\n    }\n    const redundancy = initRedundancy(config);\n    const cachedReundancy = {\n      config,\n      redundancy\n    };\n    redundancyCache[provider] = cachedReundancy;\n  }\n  return redundancyCache[provider];\n}\nfunction sendAPIQuery(target, query, callback) {\n  let redundancy;\n  let send;\n  if (typeof target === \"string\") {\n    const api = getAPIModule(target);\n    if (!api) {\n      callback(void 0, 424);\n      return emptyCallback$1;\n    }\n    send = api.send;\n    const cached = getRedundancyCache(target);\n    if (cached) {\n      redundancy = cached.redundancy;\n    }\n  } else {\n    const config = createAPIConfig(target);\n    if (config) {\n      redundancy = initRedundancy(config);\n      const moduleKey = target.resources ? target.resources[0] : \"\";\n      const api = getAPIModule(moduleKey);\n      if (api) {\n        send = api.send;\n      }\n    }\n  }\n  if (!redundancy || !send) {\n    callback(void 0, 424);\n    return emptyCallback$1;\n  }\n  return redundancy.query(query, send, callback)().abort;\n}\n\nconst browserCacheVersion = \"iconify2\";\nconst browserCachePrefix = \"iconify\";\nconst browserCacheCountKey = browserCachePrefix + \"-count\";\nconst browserCacheVersionKey = browserCachePrefix + \"-version\";\nconst browserStorageHour = 36e5;\nconst browserStorageCacheExpiration = 168;\n\nfunction getStoredItem(func, key) {\n  try {\n    return func.getItem(key);\n  } catch (err) {\n  }\n}\nfunction setStoredItem(func, key, value) {\n  try {\n    func.setItem(key, value);\n    return true;\n  } catch (err) {\n  }\n}\nfunction removeStoredItem(func, key) {\n  try {\n    func.removeItem(key);\n  } catch (err) {\n  }\n}\n\nfunction setBrowserStorageItemsCount(storage, value) {\n  return setStoredItem(storage, browserCacheCountKey, value.toString());\n}\nfunction getBrowserStorageItemsCount(storage) {\n  return parseInt(getStoredItem(storage, browserCacheCountKey)) || 0;\n}\n\nconst browserStorageConfig = {\n  local: true,\n  session: true\n};\nconst browserStorageEmptyItems = {\n  local: /* @__PURE__ */ new Set(),\n  session: /* @__PURE__ */ new Set()\n};\nlet browserStorageStatus = false;\nfunction setBrowserStorageStatus(status) {\n  browserStorageStatus = status;\n}\n\nlet _window = typeof window === \"undefined\" ? {} : window;\nfunction getBrowserStorage(key) {\n  const attr = key + \"Storage\";\n  try {\n    if (_window && _window[attr] && typeof _window[attr].length === \"number\") {\n      return _window[attr];\n    }\n  } catch (err) {\n  }\n  browserStorageConfig[key] = false;\n}\n\nfunction iterateBrowserStorage(key, callback) {\n  const func = getBrowserStorage(key);\n  if (!func) {\n    return;\n  }\n  const version = getStoredItem(func, browserCacheVersionKey);\n  if (version !== browserCacheVersion) {\n    if (version) {\n      const total2 = getBrowserStorageItemsCount(func);\n      for (let i = 0; i < total2; i++) {\n        removeStoredItem(func, browserCachePrefix + i.toString());\n      }\n    }\n    setStoredItem(func, browserCacheVersionKey, browserCacheVersion);\n    setBrowserStorageItemsCount(func, 0);\n    return;\n  }\n  const minTime = Math.floor(Date.now() / browserStorageHour) - browserStorageCacheExpiration;\n  const parseItem = (index) => {\n    const name = browserCachePrefix + index.toString();\n    const item = getStoredItem(func, name);\n    if (typeof item !== \"string\") {\n      return;\n    }\n    try {\n      const data = JSON.parse(item);\n      if (typeof data === \"object\" && typeof data.cached === \"number\" && data.cached > minTime && typeof data.provider === \"string\" && typeof data.data === \"object\" && typeof data.data.prefix === \"string\" && // Valid item: run callback\n      callback(data, index)) {\n        return true;\n      }\n    } catch (err) {\n    }\n    removeStoredItem(func, name);\n  };\n  let total = getBrowserStorageItemsCount(func);\n  for (let i = total - 1; i >= 0; i--) {\n    if (!parseItem(i)) {\n      if (i === total - 1) {\n        total--;\n        setBrowserStorageItemsCount(func, total);\n      } else {\n        browserStorageEmptyItems[key].add(i);\n      }\n    }\n  }\n}\n\nfunction initBrowserStorage() {\n  if (browserStorageStatus) {\n    return;\n  }\n  setBrowserStorageStatus(true);\n  for (const key in browserStorageConfig) {\n    iterateBrowserStorage(key, (item) => {\n      const iconSet = item.data;\n      const provider = item.provider;\n      const prefix = iconSet.prefix;\n      const storage = getStorage(\n        provider,\n        prefix\n      );\n      if (!addIconSet(storage, iconSet).length) {\n        return false;\n      }\n      const lastModified = iconSet.lastModified || -1;\n      storage.lastModifiedCached = storage.lastModifiedCached ? Math.min(storage.lastModifiedCached, lastModified) : lastModified;\n      return true;\n    });\n  }\n}\n\nfunction updateLastModified(storage, lastModified) {\n  const lastValue = storage.lastModifiedCached;\n  if (\n    // Matches or newer\n    lastValue && lastValue >= lastModified\n  ) {\n    return lastValue === lastModified;\n  }\n  storage.lastModifiedCached = lastModified;\n  if (lastValue) {\n    for (const key in browserStorageConfig) {\n      iterateBrowserStorage(key, (item) => {\n        const iconSet = item.data;\n        return item.provider !== storage.provider || iconSet.prefix !== storage.prefix || iconSet.lastModified === lastModified;\n      });\n    }\n  }\n  return true;\n}\nfunction storeInBrowserStorage(storage, data) {\n  if (!browserStorageStatus) {\n    initBrowserStorage();\n  }\n  function store(key) {\n    let func;\n    if (!browserStorageConfig[key] || !(func = getBrowserStorage(key))) {\n      return;\n    }\n    const set = browserStorageEmptyItems[key];\n    let index;\n    if (set.size) {\n      set.delete(index = Array.from(set).shift());\n    } else {\n      index = getBrowserStorageItemsCount(func);\n      if (!setBrowserStorageItemsCount(func, index + 1)) {\n        return;\n      }\n    }\n    const item = {\n      cached: Math.floor(Date.now() / browserStorageHour),\n      provider: storage.provider,\n      data\n    };\n    return setStoredItem(\n      func,\n      browserCachePrefix + index.toString(),\n      JSON.stringify(item)\n    );\n  }\n  if (data.lastModified && !updateLastModified(storage, data.lastModified)) {\n    return;\n  }\n  if (!Object.keys(data.icons).length) {\n    return;\n  }\n  if (data.not_found) {\n    data = Object.assign({}, data);\n    delete data.not_found;\n  }\n  if (!store(\"local\")) {\n    store(\"session\");\n  }\n}\n\nfunction emptyCallback() {\n}\nfunction loadedNewIcons(storage) {\n  if (!storage.iconsLoaderFlag) {\n    storage.iconsLoaderFlag = true;\n    setTimeout(() => {\n      storage.iconsLoaderFlag = false;\n      updateCallbacks(storage);\n    });\n  }\n}\nfunction loadNewIcons(storage, icons) {\n  if (!storage.iconsToLoad) {\n    storage.iconsToLoad = icons;\n  } else {\n    storage.iconsToLoad = storage.iconsToLoad.concat(icons).sort();\n  }\n  if (!storage.iconsQueueFlag) {\n    storage.iconsQueueFlag = true;\n    setTimeout(() => {\n      storage.iconsQueueFlag = false;\n      const { provider, prefix } = storage;\n      const icons2 = storage.iconsToLoad;\n      delete storage.iconsToLoad;\n      let api;\n      if (!icons2 || !(api = getAPIModule(provider))) {\n        return;\n      }\n      const params = api.prepare(provider, prefix, icons2);\n      params.forEach((item) => {\n        sendAPIQuery(provider, item, (data) => {\n          if (typeof data !== \"object\") {\n            item.icons.forEach((name) => {\n              storage.missing.add(name);\n            });\n          } else {\n            try {\n              const parsed = addIconSet(\n                storage,\n                data\n              );\n              if (!parsed.length) {\n                return;\n              }\n              const pending = storage.pendingIcons;\n              if (pending) {\n                parsed.forEach((name) => {\n                  pending.delete(name);\n                });\n              }\n              storeInBrowserStorage(storage, data);\n            } catch (err) {\n              console.error(err);\n            }\n          }\n          loadedNewIcons(storage);\n        });\n      });\n    });\n  }\n}\nconst loadIcons$1 = (icons, callback) => {\n  const cleanedIcons = listToIcons(icons, true, allowSimpleNames());\n  const sortedIcons = sortIcons(cleanedIcons);\n  if (!sortedIcons.pending.length) {\n    let callCallback = true;\n    if (callback) {\n      setTimeout(() => {\n        if (callCallback) {\n          callback(\n            sortedIcons.loaded,\n            sortedIcons.missing,\n            sortedIcons.pending,\n            emptyCallback\n          );\n        }\n      });\n    }\n    return () => {\n      callCallback = false;\n    };\n  }\n  const newIcons = /* @__PURE__ */ Object.create(null);\n  const sources = [];\n  let lastProvider, lastPrefix;\n  sortedIcons.pending.forEach((icon) => {\n    const { provider, prefix } = icon;\n    if (prefix === lastPrefix && provider === lastProvider) {\n      return;\n    }\n    lastProvider = provider;\n    lastPrefix = prefix;\n    sources.push(getStorage(provider, prefix));\n    const providerNewIcons = newIcons[provider] || (newIcons[provider] = /* @__PURE__ */ Object.create(null));\n    if (!providerNewIcons[prefix]) {\n      providerNewIcons[prefix] = [];\n    }\n  });\n  sortedIcons.pending.forEach((icon) => {\n    const { provider, prefix, name } = icon;\n    const storage = getStorage(provider, prefix);\n    const pendingQueue = storage.pendingIcons || (storage.pendingIcons = /* @__PURE__ */ new Set());\n    if (!pendingQueue.has(name)) {\n      pendingQueue.add(name);\n      newIcons[provider][prefix].push(name);\n    }\n  });\n  sources.forEach((storage) => {\n    const { provider, prefix } = storage;\n    if (newIcons[provider][prefix].length) {\n      loadNewIcons(storage, newIcons[provider][prefix]);\n    }\n  });\n  return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\n};\nconst loadIcon$1 = (icon) => {\n  return new Promise((fulfill, reject) => {\n    const iconObj = typeof icon === \"string\" ? stringToIcon(icon, true) : icon;\n    if (!iconObj) {\n      reject(icon);\n      return;\n    }\n    loadIcons$1([iconObj || icon], (loaded) => {\n      if (loaded.length && iconObj) {\n        const data = getIconData(iconObj);\n        if (data) {\n          fulfill({\n            ...defaultIconProps,\n            ...data\n          });\n          return;\n        }\n      }\n      reject(icon);\n    });\n  });\n};\n\n/**\n * Test icon string\n */\nfunction testIconObject(value) {\n    try {\n        const obj = typeof value === 'string' ? JSON.parse(value) : value;\n        if (typeof obj.body === 'string') {\n            return {\n                ...obj,\n            };\n        }\n    }\n    catch (err) {\n        //\n    }\n}\n\n/**\n * Parse icon value, load if needed\n */\nfunction parseIconValue(value, onload) {\n    // Check if icon name is valid\n    const name = typeof value === 'string' ? stringToIcon(value, true, true) : null;\n    if (!name) {\n        // Test for serialised object\n        const data = testIconObject(value);\n        return {\n            value,\n            data,\n        };\n    }\n    // Valid icon name: check if data is available\n    const data = getIconData(name);\n    // Icon data exists or icon has no prefix. Do not load icon from API if icon has no prefix\n    if (data !== void 0 || !name.prefix) {\n        return {\n            value,\n            name,\n            data, // could be 'null' -> icon is missing\n        };\n    }\n    // Load icon\n    const loading = loadIcons$1([name], () => onload(value, name, getIconData(name)));\n    return {\n        value,\n        name,\n        loading,\n    };\n}\n\n/**\n * Check for inline\n */\nfunction getInline(node) {\n    return node.hasAttribute('inline');\n}\n\n// Check for Safari\nlet isBuggedSafari = false;\ntry {\n    isBuggedSafari = navigator.vendor.indexOf('Apple') === 0;\n}\ncatch (err) {\n    //\n}\n/**\n * Get render mode\n */\nfunction getRenderMode(body, mode) {\n    switch (mode) {\n        // Force mode\n        case 'svg':\n        case 'bg':\n        case 'mask':\n            return mode;\n    }\n    // Check for animation, use 'style' for animated icons, unless browser is Safari\n    // (only <a>, which should be ignored or animations start with '<a')\n    if (mode !== 'style' &&\n        (isBuggedSafari || body.indexOf('<a') === -1)) {\n        // Render <svg>\n        return 'svg';\n    }\n    // Use background or mask\n    return body.indexOf('currentColor') === -1 ? 'bg' : 'mask';\n}\n\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\nfunction calculateSize$1(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n  precision = precision || 100;\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n  if (typeof size !== \"string\") {\n    return size;\n  }\n  const oldParts = size.split(unitsSplit);\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n    code = oldParts.shift();\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n    isNumber = !isNumber;\n  }\n}\n\nconst isUnsetKeyword = (value) => value === \"unset\" || value === \"undefined\" || value === \"none\";\nfunction iconToSVG(icon, customisations) {\n  const fullIcon = {\n    ...defaultIconProps,\n    ...icon\n  };\n  const fullCustomisations = {\n    ...defaultIconCustomisations,\n    ...customisations\n  };\n  const box = {\n    left: fullIcon.left,\n    top: fullIcon.top,\n    width: fullIcon.width,\n    height: fullIcon.height\n  };\n  let body = fullIcon.body;\n  [fullIcon, fullCustomisations].forEach((props) => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n    if (hFlip) {\n      if (vFlip) {\n        rotation += 2;\n      } else {\n        transformations.push(\n          \"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\"\n        );\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\n        \"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\"\n      );\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n    let tempValue;\n    if (rotation < 0) {\n      rotation -= Math.floor(rotation / 4) * 4;\n    }\n    rotation = rotation % 4;\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\n          \"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n        );\n        break;\n      case 2:\n        transformations.unshift(\n          \"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\"\n        );\n        break;\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\n          \"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n        );\n        break;\n    }\n    if (rotation % 2 === 1) {\n      if (box.left !== box.top) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n    if (transformations.length) {\n      body = '<g transform=\"' + transformations.join(\" \") + '\">' + body + \"</g>\";\n    }\n  });\n  const customisationsWidth = fullCustomisations.width;\n  const customisationsHeight = fullCustomisations.height;\n  const boxWidth = box.width;\n  const boxHeight = box.height;\n  let width;\n  let height;\n  if (customisationsWidth === null) {\n    height = customisationsHeight === null ? \"1em\" : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n    width = calculateSize$1(height, boxWidth / boxHeight);\n  } else {\n    width = customisationsWidth === \"auto\" ? boxWidth : customisationsWidth;\n    height = customisationsHeight === null ? calculateSize$1(width, boxHeight / boxWidth) : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n  }\n  const attributes = {};\n  const setAttr = (prop, value) => {\n    if (!isUnsetKeyword(value)) {\n      attributes[prop] = value.toString();\n    }\n  };\n  setAttr(\"width\", width);\n  setAttr(\"height\", height);\n  attributes.viewBox = box.left.toString() + \" \" + box.top.toString() + \" \" + boxWidth.toString() + \" \" + boxHeight.toString();\n  return {\n    attributes,\n    body\n  };\n}\n\nconst detectFetch = () => {\n  let callback;\n  try {\n    callback = fetch;\n    if (typeof callback === \"function\") {\n      return callback;\n    }\n  } catch (err) {\n  }\n};\nlet fetchModule = detectFetch();\nfunction setFetch(fetch2) {\n  fetchModule = fetch2;\n}\nfunction getFetch() {\n  return fetchModule;\n}\nfunction calculateMaxLength(provider, prefix) {\n  const config = getAPIConfig(provider);\n  if (!config) {\n    return 0;\n  }\n  let result;\n  if (!config.maxURL) {\n    result = 0;\n  } else {\n    let maxHostLength = 0;\n    config.resources.forEach((item) => {\n      const host = item;\n      maxHostLength = Math.max(maxHostLength, host.length);\n    });\n    const url = prefix + \".json?icons=\";\n    result = config.maxURL - maxHostLength - config.path.length - url.length;\n  }\n  return result;\n}\nfunction shouldAbort(status) {\n  return status === 404;\n}\nconst prepare = (provider, prefix, icons) => {\n  const results = [];\n  const maxLength = calculateMaxLength(provider, prefix);\n  const type = \"icons\";\n  let item = {\n    type,\n    provider,\n    prefix,\n    icons: []\n  };\n  let length = 0;\n  icons.forEach((name, index) => {\n    length += name.length + 1;\n    if (length >= maxLength && index > 0) {\n      results.push(item);\n      item = {\n        type,\n        provider,\n        prefix,\n        icons: []\n      };\n      length = name.length;\n    }\n    item.icons.push(name);\n  });\n  results.push(item);\n  return results;\n};\nfunction getPath(provider) {\n  if (typeof provider === \"string\") {\n    const config = getAPIConfig(provider);\n    if (config) {\n      return config.path;\n    }\n  }\n  return \"/\";\n}\nconst send = (host, params, callback) => {\n  if (!fetchModule) {\n    callback(\"abort\", 424);\n    return;\n  }\n  let path = getPath(params.provider);\n  switch (params.type) {\n    case \"icons\": {\n      const prefix = params.prefix;\n      const icons = params.icons;\n      const iconsList = icons.join(\",\");\n      const urlParams = new URLSearchParams({\n        icons: iconsList\n      });\n      path += prefix + \".json?\" + urlParams.toString();\n      break;\n    }\n    case \"custom\": {\n      const uri = params.uri;\n      path += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\n      break;\n    }\n    default:\n      callback(\"abort\", 400);\n      return;\n  }\n  let defaultError = 503;\n  fetchModule(host + path).then((response) => {\n    const status = response.status;\n    if (status !== 200) {\n      setTimeout(() => {\n        callback(shouldAbort(status) ? \"abort\" : \"next\", status);\n      });\n      return;\n    }\n    defaultError = 501;\n    return response.json();\n  }).then((data) => {\n    if (typeof data !== \"object\" || data === null) {\n      setTimeout(() => {\n        if (data === 404) {\n          callback(\"abort\", data);\n        } else {\n          callback(\"next\", defaultError);\n        }\n      });\n      return;\n    }\n    setTimeout(() => {\n      callback(\"success\", data);\n    });\n  }).catch(() => {\n    callback(\"next\", defaultError);\n  });\n};\nconst fetchAPIModule = {\n  prepare,\n  send\n};\n\nfunction toggleBrowserCache(storage, value) {\n  switch (storage) {\n    case \"local\":\n    case \"session\":\n      browserStorageConfig[storage] = value;\n      break;\n    case \"all\":\n      for (const key in browserStorageConfig) {\n        browserStorageConfig[key] = value;\n      }\n      break;\n  }\n}\n\n/**\n * Attribute to add\n */\nconst nodeAttr = 'data-style';\n/**\n * Custom style to add to each node\n */\nlet customStyle = '';\n/**\n * Set custom style to add to all components\n *\n * Affects only components rendered after function call\n */\nfunction appendCustomStyle(style) {\n    customStyle = style;\n}\n/**\n * Add/update style node\n */\nfunction updateStyle(parent, inline) {\n    // Get node, create if needed\n    let styleNode = Array.from(parent.childNodes).find((node) => node.hasAttribute &&\n        node.hasAttribute(nodeAttr));\n    if (!styleNode) {\n        styleNode = document.createElement('style');\n        styleNode.setAttribute(nodeAttr, nodeAttr);\n        parent.appendChild(styleNode);\n    }\n    // Update content\n    styleNode.textContent =\n        ':host{display:inline-block;vertical-align:' +\n            (inline ? '-0.125em' : '0') +\n            '}span,svg{display:block}' +\n            customStyle;\n}\n\n// Core\n/**\n * Get functions and initialise stuff\n */\nfunction exportFunctions() {\n    /**\n     * Initialise stuff\n     */\n    // Set API module\n    setAPIModule('', fetchAPIModule);\n    // Allow simple icon names\n    allowSimpleNames(true);\n    let _window;\n    try {\n        _window = window;\n    }\n    catch (err) {\n        //\n    }\n    if (_window) {\n        // Set cache and load existing cache\n        initBrowserStorage();\n        // Load icons from global \"IconifyPreload\"\n        if (_window.IconifyPreload !== void 0) {\n            const preload = _window.IconifyPreload;\n            const err = 'Invalid IconifyPreload syntax.';\n            if (typeof preload === 'object' && preload !== null) {\n                (preload instanceof Array ? preload : [preload]).forEach((item) => {\n                    try {\n                        if (\n                        // Check if item is an object and not null/array\n                        typeof item !== 'object' ||\n                            item === null ||\n                            item instanceof Array ||\n                            // Check for 'icons' and 'prefix'\n                            typeof item.icons !== 'object' ||\n                            typeof item.prefix !== 'string' ||\n                            // Add icon set\n                            !addCollection$1(item)) {\n                            console.error(err);\n                        }\n                    }\n                    catch (e) {\n                        console.error(err);\n                    }\n                });\n            }\n        }\n        // Set API from global \"IconifyProviders\"\n        if (_window.IconifyProviders !== void 0) {\n            const providers = _window.IconifyProviders;\n            if (typeof providers === 'object' && providers !== null) {\n                for (const key in providers) {\n                    const err = 'IconifyProviders[' + key + '] is invalid.';\n                    try {\n                        const value = providers[key];\n                        if (typeof value !== 'object' ||\n                            !value ||\n                            value.resources === void 0) {\n                            continue;\n                        }\n                        if (!addAPIProvider$1(key, value)) {\n                            console.error(err);\n                        }\n                    }\n                    catch (e) {\n                        console.error(err);\n                    }\n                }\n            }\n        }\n    }\n    const _api = {\n        getAPIConfig,\n        setAPIModule,\n        sendAPIQuery,\n        setFetch,\n        getFetch,\n        listAPIProviders,\n    };\n    return {\n        enableCache: (storage) => toggleBrowserCache(storage, true),\n        disableCache: (storage) => toggleBrowserCache(storage, false),\n        iconExists: iconExists$1,\n        getIcon: getIcon$1,\n        listIcons: listIcons$1,\n        addIcon: addIcon$1,\n        addCollection: addCollection$1,\n        calculateSize: calculateSize$1,\n        buildIcon: iconToSVG,\n        loadIcons: loadIcons$1,\n        loadIcon: loadIcon$1,\n        addAPIProvider: addAPIProvider$1,\n        appendCustomStyle,\n        _api,\n    };\n}\n\nfunction iconToHTML(body, attributes) {\n  let renderAttribsHTML = body.indexOf(\"xlink:\") === -1 ? \"\" : ' xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n  for (const attr in attributes) {\n    renderAttribsHTML += \" \" + attr + '=\"' + attributes[attr] + '\"';\n  }\n  return '<svg xmlns=\"http://www.w3.org/2000/svg\"' + renderAttribsHTML + \">\" + body + \"</svg>\";\n}\n\nfunction encodeSVGforURL(svg) {\n  return svg.replace(/\"/g, \"'\").replace(/%/g, \"%25\").replace(/#/g, \"%23\").replace(/</g, \"%3C\").replace(/>/g, \"%3E\").replace(/\\s+/g, \" \");\n}\nfunction svgToData(svg) {\n  return \"data:image/svg+xml,\" + encodeSVGforURL(svg);\n}\nfunction svgToURL(svg) {\n  return 'url(\"' + svgToData(svg) + '\")';\n}\n\n// List of properties to apply\nconst monotoneProps = {\n    'background-color': 'currentColor',\n};\nconst coloredProps = {\n    'background-color': 'transparent',\n};\n// Dynamically add common props to variables above\nconst propsToAdd = {\n    image: 'var(--svg)',\n    repeat: 'no-repeat',\n    size: '100% 100%',\n};\nconst propsToAddTo = {\n    '-webkit-mask': monotoneProps,\n    'mask': monotoneProps,\n    'background': coloredProps,\n};\nfor (const prefix in propsToAddTo) {\n    const list = propsToAddTo[prefix];\n    for (const prop in propsToAdd) {\n        list[prefix + '-' + prop] = propsToAdd[prop];\n    }\n}\n/**\n * Fix size: add 'px' to numbers\n */\nfunction fixSize(value) {\n    return value ? value + (value.match(/^[-0-9.]+$/) ? 'px' : '') : 'inherit';\n}\n/**\n * Render node as <span>\n */\nfunction renderSPAN(data, icon, useMask) {\n    const node = document.createElement('span');\n    // Body\n    let body = data.body;\n    if (body.indexOf('<a') !== -1) {\n        // Animated SVG: add something to fix timing bug\n        body += '<!-- ' + Date.now() + ' -->';\n    }\n    // Generate SVG as URL\n    const renderAttribs = data.attributes;\n    const html = iconToHTML(body, {\n        ...renderAttribs,\n        width: icon.width + '',\n        height: icon.height + '',\n    });\n    const url = svgToURL(html);\n    // Generate style\n    const svgStyle = node.style;\n    const styles = {\n        '--svg': url,\n        'width': fixSize(renderAttribs.width),\n        'height': fixSize(renderAttribs.height),\n        ...(useMask ? monotoneProps : coloredProps),\n    };\n    // Apply style\n    for (const prop in styles) {\n        svgStyle.setProperty(prop, styles[prop]);\n    }\n    return node;\n}\n\nlet policy;\nfunction createPolicy() {\n  try {\n    policy = window.trustedTypes.createPolicy(\"iconify\", {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n      createHTML: (s) => s\n    });\n  } catch (err) {\n    policy = null;\n  }\n}\nfunction cleanUpInnerHTML(html) {\n  if (policy === void 0) {\n    createPolicy();\n  }\n  return policy ? policy.createHTML(html) : html;\n}\n\n/**\n * Render node as <svg>\n */\nfunction renderSVG(data) {\n    const node = document.createElement('span');\n    // Add style if needed\n    const attr = data.attributes;\n    let style = '';\n    if (!attr.width) {\n        style = 'width: inherit;';\n    }\n    if (!attr.height) {\n        style += 'height: inherit;';\n    }\n    if (style) {\n        attr.style = style;\n    }\n    // Generate SVG\n    const html = iconToHTML(data.body, attr);\n    node.innerHTML = cleanUpInnerHTML(html);\n    return node.firstChild;\n}\n\n/**\n * Render icon\n */\nfunction renderIcon(parent, state) {\n    const iconData = state.icon.data;\n    const customisations = state.customisations;\n    // Render icon\n    const renderData = iconToSVG(iconData, customisations);\n    if (customisations.preserveAspectRatio) {\n        renderData.attributes['preserveAspectRatio'] =\n            customisations.preserveAspectRatio;\n    }\n    const mode = state.renderedMode;\n    let node;\n    switch (mode) {\n        case 'svg':\n            node = renderSVG(renderData);\n            break;\n        default:\n            node = renderSPAN(renderData, {\n                ...defaultIconProps,\n                ...iconData,\n            }, mode === 'mask');\n    }\n    // Set element\n    const oldNode = Array.from(parent.childNodes).find((node) => {\n        const tag = node.tagName &&\n            node.tagName.toUpperCase();\n        return tag === 'SPAN' || tag === 'SVG';\n    });\n    if (oldNode) {\n        // Replace old element\n        if (node.tagName === 'SPAN' && oldNode.tagName === node.tagName) {\n            // Swap style instead of whole node\n            oldNode.setAttribute('style', node.getAttribute('style'));\n        }\n        else {\n            parent.replaceChild(node, oldNode);\n        }\n    }\n    else {\n        // Add new element\n        parent.appendChild(node);\n    }\n}\n\n/**\n * Set state to PendingState\n */\nfunction setPendingState(icon, inline, lastState) {\n    const lastRender = lastState &&\n        (lastState.rendered\n            ? lastState\n            : lastState.lastRender);\n    return {\n        rendered: false,\n        inline,\n        icon,\n        lastRender,\n    };\n}\n\n/**\n * Register 'iconify-icon' component, if it does not exist\n */\nfunction defineIconifyIcon(name = 'iconify-icon') {\n    // Check for custom elements registry and HTMLElement\n    let customElements;\n    let ParentClass;\n    try {\n        customElements = window.customElements;\n        ParentClass = window.HTMLElement;\n    }\n    catch (err) {\n        return;\n    }\n    // Make sure registry and HTMLElement exist\n    if (!customElements || !ParentClass) {\n        return;\n    }\n    // Check for duplicate\n    const ConflictingClass = customElements.get(name);\n    if (ConflictingClass) {\n        return ConflictingClass;\n    }\n    // All attributes\n    const attributes = [\n        // Icon\n        'icon',\n        // Mode\n        'mode',\n        'inline',\n        // Customisations\n        'width',\n        'height',\n        'rotate',\n        'flip',\n    ];\n    /**\n     * Component class\n     */\n    const IconifyIcon = class extends ParentClass {\n        // Root\n        _shadowRoot;\n        // State\n        _state;\n        // Attributes check queued\n        _checkQueued = false;\n        /**\n         * Constructor\n         */\n        constructor() {\n            super();\n            // Attach shadow DOM\n            const root = (this._shadowRoot = this.attachShadow({\n                mode: 'open',\n            }));\n            // Add style\n            const inline = getInline(this);\n            updateStyle(root, inline);\n            // Create empty state\n            this._state = setPendingState({\n                value: '',\n            }, inline);\n            // Queue icon render\n            this._queueCheck();\n        }\n        /**\n         * Observed attributes\n         */\n        static get observedAttributes() {\n            return attributes.slice(0);\n        }\n        /**\n         * Observed properties that are different from attributes\n         *\n         * Experimental! Need to test with various frameworks that support it\n         */\n        /*\n        static get properties() {\n            return {\n                inline: {\n                    type: Boolean,\n                    reflect: true,\n                },\n                // Not listing other attributes because they are strings or combination\n                // of string and another type. Cannot have multiple types\n            };\n        }\n        */\n        /**\n         * Attribute has changed\n         */\n        attributeChangedCallback(name) {\n            if (name === 'inline') {\n                // Update immediately: not affected by other attributes\n                const newInline = getInline(this);\n                const state = this._state;\n                if (newInline !== state.inline) {\n                    // Update style if inline mode changed\n                    state.inline = newInline;\n                    updateStyle(this._shadowRoot, newInline);\n                }\n            }\n            else {\n                // Queue check for other attributes\n                this._queueCheck();\n            }\n        }\n        /**\n         * Get/set icon\n         */\n        get icon() {\n            const value = this.getAttribute('icon');\n            if (value && value.slice(0, 1) === '{') {\n                try {\n                    return JSON.parse(value);\n                }\n                catch (err) {\n                    //\n                }\n            }\n            return value;\n        }\n        set icon(value) {\n            if (typeof value === 'object') {\n                value = JSON.stringify(value);\n            }\n            this.setAttribute('icon', value);\n        }\n        /**\n         * Get/set inline\n         */\n        get inline() {\n            return getInline(this);\n        }\n        set inline(value) {\n            if (value) {\n                this.setAttribute('inline', 'true');\n            }\n            else {\n                this.removeAttribute('inline');\n            }\n        }\n        /**\n         * Restart animation\n         */\n        restartAnimation() {\n            const state = this._state;\n            if (state.rendered) {\n                const root = this._shadowRoot;\n                if (state.renderedMode === 'svg') {\n                    // Update root node\n                    try {\n                        root.lastChild.setCurrentTime(0);\n                        return;\n                    }\n                    catch (err) {\n                        // Failed: setCurrentTime() is not supported\n                    }\n                }\n                renderIcon(root, state);\n            }\n        }\n        /**\n         * Get status\n         */\n        get status() {\n            const state = this._state;\n            return state.rendered\n                ? 'rendered'\n                : state.icon.data === null\n                    ? 'failed'\n                    : 'loading';\n        }\n        /**\n         * Queue attributes re-check\n         */\n        _queueCheck() {\n            if (!this._checkQueued) {\n                this._checkQueued = true;\n                setTimeout(() => {\n                    this._check();\n                });\n            }\n        }\n        /**\n         * Check for changes\n         */\n        _check() {\n            if (!this._checkQueued) {\n                return;\n            }\n            this._checkQueued = false;\n            const state = this._state;\n            // Get icon\n            const newIcon = this.getAttribute('icon');\n            if (newIcon !== state.icon.value) {\n                this._iconChanged(newIcon);\n                return;\n            }\n            // Ignore other attributes if icon is not rendered\n            if (!state.rendered) {\n                return;\n            }\n            // Check for mode and attribute changes\n            const mode = this.getAttribute('mode');\n            const customisations = getCustomisations(this);\n            if (state.attrMode !== mode ||\n                haveCustomisationsChanged(state.customisations, customisations)) {\n                this._renderIcon(state.icon, customisations, mode);\n            }\n        }\n        /**\n         * Icon value has changed\n         */\n        _iconChanged(newValue) {\n            const icon = parseIconValue(newValue, (value, name, data) => {\n                // Asynchronous callback: re-check values to make sure stuff wasn't changed\n                const state = this._state;\n                if (state.rendered || this.getAttribute('icon') !== value) {\n                    // Icon data is already available or icon attribute was changed\n                    return;\n                }\n                // Change icon\n                const icon = {\n                    value,\n                    name,\n                    data,\n                };\n                if (icon.data) {\n                    // Render icon\n                    this._gotIconData(icon);\n                }\n                else {\n                    // Nothing to render: update icon in state\n                    state.icon = icon;\n                }\n            });\n            if (icon.data) {\n                // Icon is ready to render\n                this._gotIconData(icon);\n            }\n            else {\n                // Pending icon\n                this._state = setPendingState(icon, this._state.inline, this._state);\n            }\n        }\n        /**\n         * Got new icon data, icon is ready to (re)render\n         */\n        _gotIconData(icon) {\n            this._checkQueued = false;\n            this._renderIcon(icon, getCustomisations(this), this.getAttribute('mode'));\n        }\n        /**\n         * Re-render based on icon data\n         */\n        _renderIcon(icon, customisations, attrMode) {\n            // Get mode\n            const renderedMode = getRenderMode(icon.data.body, attrMode);\n            // Inline was not changed\n            const inline = this._state.inline;\n            // Set state and render\n            renderIcon(this._shadowRoot, (this._state = {\n                rendered: true,\n                icon,\n                inline,\n                customisations,\n                attrMode,\n                renderedMode,\n            }));\n        }\n    };\n    // Add getters and setters\n    attributes.forEach((attr) => {\n        if (!(attr in IconifyIcon.prototype)) {\n            Object.defineProperty(IconifyIcon.prototype, attr, {\n                get: function () {\n                    return this.getAttribute(attr);\n                },\n                set: function (value) {\n                    if (value !== null) {\n                        this.setAttribute(attr, value);\n                    }\n                    else {\n                        this.removeAttribute(attr);\n                    }\n                },\n            });\n        }\n    });\n    // Add exported functions: both as static and instance methods\n    const functions = exportFunctions();\n    for (const key in functions) {\n        IconifyIcon[key] = IconifyIcon.prototype[key] = functions[key];\n    }\n    // Define new component\n    customElements.define(name, IconifyIcon);\n    return IconifyIcon;\n}\n\n/**\n * Create exported data: either component instance or functions\n */\nconst IconifyIconComponent = defineIconifyIcon() || exportFunctions();\n/**\n * Export functions\n */\nconst { enableCache, disableCache, iconExists, getIcon, listIcons, addIcon, addCollection, calculateSize, buildIcon, loadIcons, loadIcon, addAPIProvider, _api, } = IconifyIconComponent;\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/iconify-icon/dist/iconify-icon.mjs\n");

/***/ }),

/***/ "./node_modules/lit-element/development/lit-element.js":
/*!*************************************************************!*\
  !*** ./node_modules/lit-element/development/lit-element.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CSSResult: () => (/* reexport safe */ _lit_reactive_element__WEBPACK_IMPORTED_MODULE_0__.CSSResult),\n/* harmony export */   LitElement: () => (/* binding */ LitElement),\n/* harmony export */   ReactiveElement: () => (/* reexport safe */ _lit_reactive_element__WEBPACK_IMPORTED_MODULE_0__.ReactiveElement),\n/* harmony export */   UpdatingElement: () => (/* binding */ UpdatingElement),\n/* harmony export */   _$LE: () => (/* binding */ _$LE),\n/* harmony export */   _$LH: () => (/* reexport safe */ lit_html__WEBPACK_IMPORTED_MODULE_1__._$LH),\n/* harmony export */   adoptStyles: () => (/* reexport safe */ _lit_reactive_element__WEBPACK_IMPORTED_MODULE_0__.adoptStyles),\n/* harmony export */   css: () => (/* reexport safe */ _lit_reactive_element__WEBPACK_IMPORTED_MODULE_0__.css),\n/* harmony export */   defaultConverter: () => (/* reexport safe */ _lit_reactive_element__WEBPACK_IMPORTED_MODULE_0__.defaultConverter),\n/* harmony export */   getCompatibleStyle: () => (/* reexport safe */ _lit_reactive_element__WEBPACK_IMPORTED_MODULE_0__.getCompatibleStyle),\n/* harmony export */   html: () => (/* reexport safe */ lit_html__WEBPACK_IMPORTED_MODULE_1__.html),\n/* harmony export */   noChange: () => (/* reexport safe */ lit_html__WEBPACK_IMPORTED_MODULE_1__.noChange),\n/* harmony export */   notEqual: () => (/* reexport safe */ _lit_reactive_element__WEBPACK_IMPORTED_MODULE_0__.notEqual),\n/* harmony export */   nothing: () => (/* reexport safe */ lit_html__WEBPACK_IMPORTED_MODULE_1__.nothing),\n/* harmony export */   render: () => (/* reexport safe */ lit_html__WEBPACK_IMPORTED_MODULE_1__.render),\n/* harmony export */   supportsAdoptingStyleSheets: () => (/* reexport safe */ _lit_reactive_element__WEBPACK_IMPORTED_MODULE_0__.supportsAdoptingStyleSheets),\n/* harmony export */   svg: () => (/* reexport safe */ lit_html__WEBPACK_IMPORTED_MODULE_1__.svg),\n/* harmony export */   unsafeCSS: () => (/* reexport safe */ _lit_reactive_element__WEBPACK_IMPORTED_MODULE_0__.unsafeCSS)\n/* harmony export */ });\n/* harmony import */ var _lit_reactive_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lit/reactive-element */ \"./node_modules/@lit/reactive-element/development/reactive-element.js\");\n/* harmony import */ var lit_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit-html */ \"./node_modules/lit-html/development/lit-html.js\");\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nvar _a, _b, _c;\n/**\n * The main LitElement module, which defines the {@linkcode LitElement} base\n * class and related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import {@linkcode LitElement} and {@linkcode html} from this module to\n * create a component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends {@linkcode ReactiveElement} and adds lit-html\n * templating. The `ReactiveElement` class is provided for users that want to\n * build their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\n\n\n\n\n// For backwards compatibility export ReactiveElement as UpdatingElement. Note,\n// IE transpilation requires exporting like this.\nconst UpdatingElement = _lit_reactive_element__WEBPACK_IMPORTED_MODULE_0__.ReactiveElement;\nconst DEV_MODE = true;\nlet issueWarning;\nif (DEV_MODE) {\n    // Ensure warnings are issued only 1x, even if multiple versions of Lit\n    // are loaded.\n    const issuedWarnings = ((_a = globalThis.litIssuedWarnings) !== null && _a !== void 0 ? _a : (globalThis.litIssuedWarnings = new Set()));\n    // Issue a warning, if we haven't already.\n    issueWarning = (code, warning) => {\n        warning += ` See https://lit.dev/msg/${code} for more information.`;\n        if (!issuedWarnings.has(warning)) {\n            console.warn(warning);\n            issuedWarnings.add(warning);\n        }\n    };\n}\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the {@linkcode LitElement.properties properties} property or the\n * {@linkcode property} decorator.\n */\nclass LitElement extends _lit_reactive_element__WEBPACK_IMPORTED_MODULE_0__.ReactiveElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * @category rendering\n         */\n        this.renderOptions = { host: this };\n        this.__childPart = undefined;\n    }\n    /**\n     * @category rendering\n     */\n    createRenderRoot() {\n        var _a;\n        var _b;\n        const renderRoot = super.createRenderRoot();\n        // When adoptedStyleSheets are shimmed, they are inserted into the\n        // shadowRoot by createRenderRoot. Adjust the renderBefore node so that\n        // any styles in Lit content render before adoptedStyleSheets. This is\n        // important so that adoptedStyleSheets have precedence over styles in\n        // the shadowRoot.\n        (_a = (_b = this.renderOptions).renderBefore) !== null && _a !== void 0 ? _a : (_b.renderBefore = renderRoot.firstChild);\n        return renderRoot;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * @param changedProperties Map of changed properties with old values\n     * @category updates\n     */\n    update(changedProperties) {\n        // Setting properties in `render` should not trigger an update. Since\n        // updates are allowed after super.update, it's important to call `render`\n        // before that.\n        const value = this.render();\n        if (!this.hasUpdated) {\n            this.renderOptions.isConnected = this.isConnected;\n        }\n        super.update(changedProperties);\n        this.__childPart = (0,lit_html__WEBPACK_IMPORTED_MODULE_1__.render)(value, this.renderRoot, this.renderOptions);\n    }\n    /**\n     * Invoked when the component is added to the document's DOM.\n     *\n     * In `connectedCallback()` you should setup tasks that should only occur when\n     * the element is connected to the document. The most common of these is\n     * adding event listeners to nodes external to the element, like a keydown\n     * event handler added to the window.\n     *\n     * ```ts\n     * connectedCallback() {\n     *   super.connectedCallback();\n     *   addEventListener('keydown', this._handleKeydown);\n     * }\n     * ```\n     *\n     * Typically, anything done in `connectedCallback()` should be undone when the\n     * element is disconnected, in `disconnectedCallback()`.\n     *\n     * @category lifecycle\n     */\n    connectedCallback() {\n        var _a;\n        super.connectedCallback();\n        (_a = this.__childPart) === null || _a === void 0 ? void 0 : _a.setConnected(true);\n    }\n    /**\n     * Invoked when the component is removed from the document's DOM.\n     *\n     * This callback is the main signal to the element that it may no longer be\n     * used. `disconnectedCallback()` should ensure that nothing is holding a\n     * reference to the element (such as event listeners added to nodes external\n     * to the element), so that it is free to be garbage collected.\n     *\n     * ```ts\n     * disconnectedCallback() {\n     *   super.disconnectedCallback();\n     *   window.removeEventListener('keydown', this._handleKeydown);\n     * }\n     * ```\n     *\n     * An element may be re-connected after being disconnected.\n     *\n     * @category lifecycle\n     */\n    disconnectedCallback() {\n        var _a;\n        super.disconnectedCallback();\n        (_a = this.__childPart) === null || _a === void 0 ? void 0 : _a.setConnected(false);\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method may return\n     * any value renderable by lit-html's `ChildPart` - typically a\n     * `TemplateResult`. Setting properties inside this method will *not* trigger\n     * the element to update.\n     * @category rendering\n     */\n    render() {\n        return lit_html__WEBPACK_IMPORTED_MODULE_1__.noChange;\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See @lit/reactive-element for more information.\n */\nLitElement['finalized'] = true;\n// This property needs to remain unminified.\nLitElement['_$litElement$'] = true;\n// Install hydration if available\n(_b = globalThis.litElementHydrateSupport) === null || _b === void 0 ? void 0 : _b.call(globalThis, { LitElement });\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n    ? globalThis.litElementPolyfillSupportDevMode\n    : globalThis.litElementPolyfillSupport;\npolyfillSupport === null || polyfillSupport === void 0 ? void 0 : polyfillSupport({ LitElement });\n// DEV mode warnings\nif (DEV_MODE) {\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    // Note, for compatibility with closure compilation, this access\n    // needs to be as a string property index.\n    LitElement['finalize'] = function () {\n        const finalized = _lit_reactive_element__WEBPACK_IMPORTED_MODULE_0__.ReactiveElement.finalize.call(this);\n        if (!finalized) {\n            return false;\n        }\n        const warnRemovedOrRenamed = (obj, name, renamed = false) => {\n            if (obj.hasOwnProperty(name)) {\n                const ctorName = (typeof obj === 'function' ? obj : obj.constructor)\n                    .name;\n                issueWarning(renamed ? 'renamed-api' : 'removed-api', `\\`${name}\\` is implemented on class ${ctorName}. It ` +\n                    `has been ${renamed ? 'renamed' : 'removed'} ` +\n                    `in this version of LitElement.`);\n            }\n        };\n        warnRemovedOrRenamed(this, 'render');\n        warnRemovedOrRenamed(this, 'getStyles', true);\n        warnRemovedOrRenamed(this.prototype, 'adoptStyles');\n        return true;\n    };\n    /* eslint-enable @typescript-eslint/no-explicit-any */\n}\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LE object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-html, since this module re-exports all of lit-html.\n *\n * @private\n */\nconst _$LE = {\n    _$attributeToProperty: (el, name, value) => {\n        // eslint-disable-next-line\n        el._$attributeToProperty(name, value);\n    },\n    // eslint-disable-next-line\n    _$changedProperties: (el) => el._$changedProperties,\n};\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n((_c = globalThis.litElementVersions) !== null && _c !== void 0 ? _c : (globalThis.litElementVersions = [])).push('3.3.3');\nif (DEV_MODE && globalThis.litElementVersions.length > 1) {\n    issueWarning('multiple-versions', `Multiple versions of Lit loaded. Loading multiple versions ` +\n        `is not recommended.`);\n}\n//# sourceMappingURL=lit-element.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/lit-element/development/lit-element.js\n");

/***/ }),

/***/ "./node_modules/lit-html/development/directive-helpers.js":
/*!****************************************************************!*\
  !*** ./node_modules/lit-html/development/directive-helpers.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TemplateResultType: () => (/* binding */ TemplateResultType),\n/* harmony export */   clearPart: () => (/* binding */ clearPart),\n/* harmony export */   getCommittedValue: () => (/* binding */ getCommittedValue),\n/* harmony export */   getDirectiveClass: () => (/* binding */ getDirectiveClass),\n/* harmony export */   insertPart: () => (/* binding */ insertPart),\n/* harmony export */   isCompiledTemplateResult: () => (/* binding */ isCompiledTemplateResult),\n/* harmony export */   isDirectiveResult: () => (/* binding */ isDirectiveResult),\n/* harmony export */   isPrimitive: () => (/* binding */ isPrimitive),\n/* harmony export */   isSingleExpression: () => (/* binding */ isSingleExpression),\n/* harmony export */   isTemplateResult: () => (/* binding */ isTemplateResult),\n/* harmony export */   removePart: () => (/* binding */ removePart),\n/* harmony export */   setChildPartValue: () => (/* binding */ setChildPartValue),\n/* harmony export */   setCommittedValue: () => (/* binding */ setCommittedValue)\n/* harmony export */ });\n/* harmony import */ var _lit_html_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lit-html.js */ \"./node_modules/lit-html/development/lit-html.js\");\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nvar _a, _b;\n\nconst { _ChildPart: ChildPart } = _lit_html_js__WEBPACK_IMPORTED_MODULE_0__._$LH;\nconst ENABLE_SHADYDOM_NOPATCH = true;\nconst wrap = ENABLE_SHADYDOM_NOPATCH &&\n    ((_a = window.ShadyDOM) === null || _a === void 0 ? void 0 : _a.inUse) &&\n    ((_b = window.ShadyDOM) === null || _b === void 0 ? void 0 : _b.noPatch) === true\n    ? window.ShadyDOM.wrap\n    : (node) => node;\n/**\n * Tests if a value is a primitive value.\n *\n * See https://tc39.github.io/ecma262/#sec-typeof-operator\n */\nconst isPrimitive = (value) => value === null || (typeof value != 'object' && typeof value != 'function');\nconst TemplateResultType = {\n    HTML: 1,\n    SVG: 2,\n};\n/**\n * Tests if a value is a TemplateResult or a CompiledTemplateResult.\n */\nconst isTemplateResult = (value, type) => type === undefined\n    ? // This property needs to remain unminified.\n        (value === null || value === void 0 ? void 0 : value['_$litType$']) !== undefined\n    : (value === null || value === void 0 ? void 0 : value['_$litType$']) === type;\n/**\n * Tests if a value is a CompiledTemplateResult.\n */\nconst isCompiledTemplateResult = (value) => {\n    var _a;\n    return ((_a = value === null || value === void 0 ? void 0 : value['_$litType$']) === null || _a === void 0 ? void 0 : _a.h) != null;\n};\n/**\n * Tests if a value is a DirectiveResult.\n */\nconst isDirectiveResult = (value) => \n// This property needs to remain unminified.\n(value === null || value === void 0 ? void 0 : value['_$litDirective$']) !== undefined;\n/**\n * Retrieves the Directive class for a DirectiveResult\n */\nconst getDirectiveClass = (value) => \n// This property needs to remain unminified.\nvalue === null || value === void 0 ? void 0 : value['_$litDirective$'];\n/**\n * Tests whether a part has only a single-expression with no strings to\n * interpolate between.\n *\n * Only AttributePart and PropertyPart can have multiple expressions.\n * Multi-expression parts have a `strings` property and single-expression\n * parts do not.\n */\nconst isSingleExpression = (part) => part.strings === undefined;\nconst createMarker = () => document.createComment('');\n/**\n * Inserts a ChildPart into the given container ChildPart's DOM, either at the\n * end of the container ChildPart, or before the optional `refPart`.\n *\n * This does not add the part to the containerPart's committed value. That must\n * be done by callers.\n *\n * @param containerPart Part within which to add the new ChildPart\n * @param refPart Part before which to add the new ChildPart; when omitted the\n *     part added to the end of the `containerPart`\n * @param part Part to insert, or undefined to create a new part\n */\nconst insertPart = (containerPart, refPart, part) => {\n    var _a;\n    const container = wrap(containerPart._$startNode).parentNode;\n    const refNode = refPart === undefined ? containerPart._$endNode : refPart._$startNode;\n    if (part === undefined) {\n        const startNode = wrap(container).insertBefore(createMarker(), refNode);\n        const endNode = wrap(container).insertBefore(createMarker(), refNode);\n        part = new ChildPart(startNode, endNode, containerPart, containerPart.options);\n    }\n    else {\n        const endNode = wrap(part._$endNode).nextSibling;\n        const oldParent = part._$parent;\n        const parentChanged = oldParent !== containerPart;\n        if (parentChanged) {\n            (_a = part._$reparentDisconnectables) === null || _a === void 0 ? void 0 : _a.call(part, containerPart);\n            // Note that although `_$reparentDisconnectables` updates the part's\n            // `_$parent` reference after unlinking from its current parent, that\n            // method only exists if Disconnectables are present, so we need to\n            // unconditionally set it here\n            part._$parent = containerPart;\n            // Since the _$isConnected getter is somewhat costly, only\n            // read it once we know the subtree has directives that need\n            // to be notified\n            let newConnectionState;\n            if (part._$notifyConnectionChanged !== undefined &&\n                (newConnectionState = containerPart._$isConnected) !==\n                    oldParent._$isConnected) {\n                part._$notifyConnectionChanged(newConnectionState);\n            }\n        }\n        if (endNode !== refNode || parentChanged) {\n            let start = part._$startNode;\n            while (start !== endNode) {\n                const n = wrap(start).nextSibling;\n                wrap(container).insertBefore(start, refNode);\n                start = n;\n            }\n        }\n    }\n    return part;\n};\n/**\n * Sets the value of a Part.\n *\n * Note that this should only be used to set/update the value of user-created\n * parts (i.e. those created using `insertPart`); it should not be used\n * by directives to set the value of the directive's container part. Directives\n * should return a value from `update`/`render` to update their part state.\n *\n * For directives that require setting their part value asynchronously, they\n * should extend `AsyncDirective` and call `this.setValue()`.\n *\n * @param part Part to set\n * @param value Value to set\n * @param index For `AttributePart`s, the index to set\n * @param directiveParent Used internally; should not be set by user\n */\nconst setChildPartValue = (part, value, directiveParent = part) => {\n    part._$setValue(value, directiveParent);\n    return part;\n};\n// A sentinel value that can never appear as a part value except when set by\n// live(). Used to force a dirty-check to fail and cause a re-render.\nconst RESET_VALUE = {};\n/**\n * Sets the committed value of a ChildPart directly without triggering the\n * commit stage of the part.\n *\n * This is useful in cases where a directive needs to update the part such\n * that the next update detects a value change or not. When value is omitted,\n * the next update will be guaranteed to be detected as a change.\n *\n * @param part\n * @param value\n */\nconst setCommittedValue = (part, value = RESET_VALUE) => (part._$committedValue = value);\n/**\n * Returns the committed value of a ChildPart.\n *\n * The committed value is used for change detection and efficient updates of\n * the part. It can differ from the value set by the template or directive in\n * cases where the template value is transformed before being committed.\n *\n * - `TemplateResult`s are committed as a `TemplateInstance`\n * - Iterables are committed as `Array<ChildPart>`\n * - All other types are committed as the template value or value returned or\n *   set by a directive.\n *\n * @param part\n */\nconst getCommittedValue = (part) => part._$committedValue;\n/**\n * Removes a ChildPart from the DOM, including any of its content.\n *\n * @param part The Part to remove\n */\nconst removePart = (part) => {\n    var _a;\n    (_a = part._$notifyConnectionChanged) === null || _a === void 0 ? void 0 : _a.call(part, false, true);\n    let start = part._$startNode;\n    const end = wrap(part._$endNode).nextSibling;\n    while (start !== end) {\n        const n = wrap(start).nextSibling;\n        wrap(start).remove();\n        start = n;\n    }\n};\nconst clearPart = (part) => {\n    part._$clear();\n};\n//# sourceMappingURL=directive-helpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/lit-html/development/directive-helpers.js\n");

/***/ }),

/***/ "./node_modules/lit-html/development/directive.js":
/*!********************************************************!*\
  !*** ./node_modules/lit-html/development/directive.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Directive: () => (/* binding */ Directive),\n/* harmony export */   PartType: () => (/* binding */ PartType),\n/* harmony export */   directive: () => (/* binding */ directive)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst PartType = {\n    ATTRIBUTE: 1,\n    CHILD: 2,\n    PROPERTY: 3,\n    BOOLEAN_ATTRIBUTE: 4,\n    EVENT: 5,\n    ELEMENT: 6,\n};\n/**\n * Creates a user-facing directive function from a Directive class. This\n * function has the same parameters as the directive's render() method.\n */\nconst directive = (c) => (...values) => ({\n    // This property needs to remain unminified.\n    ['_$litDirective$']: c,\n    values,\n});\n/**\n * Base class for creating custom directives. Users should extend this class,\n * implement `render` and/or `update`, and then pass their subclass to\n * `directive`.\n */\nclass Directive {\n    constructor(_partInfo) { }\n    // See comment in Disconnectable interface for why this is a getter\n    get _$isConnected() {\n        return this._$parent._$isConnected;\n    }\n    /** @internal */\n    _$initialize(part, parent, attributeIndex) {\n        this.__part = part;\n        this._$parent = parent;\n        this.__attributeIndex = attributeIndex;\n    }\n    /** @internal */\n    _$resolve(part, props) {\n        return this.update(part, props);\n    }\n    update(_part, props) {\n        return this.render(...props);\n    }\n}\n//# sourceMappingURL=directive.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbGl0LWh0bWwvZGV2ZWxvcG1lbnQvZGlyZWN0aXZlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGlzY2lwbGUtdG9vbHMtY29udmVyc2F0aW9ucy8uL25vZGVfbW9kdWxlcy9saXQtaHRtbC9kZXZlbG9wbWVudC9kaXJlY3RpdmUuanM/Nzk5NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgTExDXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQlNELTMtQ2xhdXNlXG4gKi9cbmV4cG9ydCBjb25zdCBQYXJ0VHlwZSA9IHtcbiAgICBBVFRSSUJVVEU6IDEsXG4gICAgQ0hJTEQ6IDIsXG4gICAgUFJPUEVSVFk6IDMsXG4gICAgQk9PTEVBTl9BVFRSSUJVVEU6IDQsXG4gICAgRVZFTlQ6IDUsXG4gICAgRUxFTUVOVDogNixcbn07XG4vKipcbiAqIENyZWF0ZXMgYSB1c2VyLWZhY2luZyBkaXJlY3RpdmUgZnVuY3Rpb24gZnJvbSBhIERpcmVjdGl2ZSBjbGFzcy4gVGhpc1xuICogZnVuY3Rpb24gaGFzIHRoZSBzYW1lIHBhcmFtZXRlcnMgYXMgdGhlIGRpcmVjdGl2ZSdzIHJlbmRlcigpIG1ldGhvZC5cbiAqL1xuZXhwb3J0IGNvbnN0IGRpcmVjdGl2ZSA9IChjKSA9PiAoLi4udmFsdWVzKSA9PiAoe1xuICAgIC8vIFRoaXMgcHJvcGVydHkgbmVlZHMgdG8gcmVtYWluIHVubWluaWZpZWQuXG4gICAgWydfJGxpdERpcmVjdGl2ZSQnXTogYyxcbiAgICB2YWx1ZXMsXG59KTtcbi8qKlxuICogQmFzZSBjbGFzcyBmb3IgY3JlYXRpbmcgY3VzdG9tIGRpcmVjdGl2ZXMuIFVzZXJzIHNob3VsZCBleHRlbmQgdGhpcyBjbGFzcyxcbiAqIGltcGxlbWVudCBgcmVuZGVyYCBhbmQvb3IgYHVwZGF0ZWAsIGFuZCB0aGVuIHBhc3MgdGhlaXIgc3ViY2xhc3MgdG9cbiAqIGBkaXJlY3RpdmVgLlxuICovXG5leHBvcnQgY2xhc3MgRGlyZWN0aXZlIHtcbiAgICBjb25zdHJ1Y3RvcihfcGFydEluZm8pIHsgfVxuICAgIC8vIFNlZSBjb21tZW50IGluIERpc2Nvbm5lY3RhYmxlIGludGVyZmFjZSBmb3Igd2h5IHRoaXMgaXMgYSBnZXR0ZXJcbiAgICBnZXQgXyRpc0Nvbm5lY3RlZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuXyRwYXJlbnQuXyRpc0Nvbm5lY3RlZDtcbiAgICB9XG4gICAgLyoqIEBpbnRlcm5hbCAqL1xuICAgIF8kaW5pdGlhbGl6ZShwYXJ0LCBwYXJlbnQsIGF0dHJpYnV0ZUluZGV4KSB7XG4gICAgICAgIHRoaXMuX19wYXJ0ID0gcGFydDtcbiAgICAgICAgdGhpcy5fJHBhcmVudCA9IHBhcmVudDtcbiAgICAgICAgdGhpcy5fX2F0dHJpYnV0ZUluZGV4ID0gYXR0cmlidXRlSW5kZXg7XG4gICAgfVxuICAgIC8qKiBAaW50ZXJuYWwgKi9cbiAgICBfJHJlc29sdmUocGFydCwgcHJvcHMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudXBkYXRlKHBhcnQsIHByb3BzKTtcbiAgICB9XG4gICAgdXBkYXRlKF9wYXJ0LCBwcm9wcykge1xuICAgICAgICByZXR1cm4gdGhpcy5yZW5kZXIoLi4ucHJvcHMpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRpcmVjdGl2ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lit-html/development/directive.js\n");

/***/ }),

/***/ "./node_modules/lit-html/development/directives/class-map.js":
/*!*******************************************************************!*\
  !*** ./node_modules/lit-html/development/directives/class-map.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   classMap: () => (/* binding */ classMap)\n/* harmony export */ });\n/* harmony import */ var _lit_html_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lit-html.js */ \"./node_modules/lit-html/development/lit-html.js\");\n/* harmony import */ var _directive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../directive.js */ \"./node_modules/lit-html/development/directive.js\");\n/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n\nclass ClassMapDirective extends _directive_js__WEBPACK_IMPORTED_MODULE_1__.Directive {\n    constructor(partInfo) {\n        var _a;\n        super(partInfo);\n        if (partInfo.type !== _directive_js__WEBPACK_IMPORTED_MODULE_1__.PartType.ATTRIBUTE ||\n            partInfo.name !== 'class' ||\n            ((_a = partInfo.strings) === null || _a === void 0 ? void 0 : _a.length) > 2) {\n            throw new Error('`classMap()` can only be used in the `class` attribute ' +\n                'and must be the only part in the attribute.');\n        }\n    }\n    render(classInfo) {\n        // Add spaces to ensure separation from static classes\n        return (' ' +\n            Object.keys(classInfo)\n                .filter((key) => classInfo[key])\n                .join(' ') +\n            ' ');\n    }\n    update(part, [classInfo]) {\n        var _a, _b;\n        // Remember dynamic classes on the first render\n        if (this._previousClasses === undefined) {\n            this._previousClasses = new Set();\n            if (part.strings !== undefined) {\n                this._staticClasses = new Set(part.strings\n                    .join(' ')\n                    .split(/\\s/)\n                    .filter((s) => s !== ''));\n            }\n            for (const name in classInfo) {\n                if (classInfo[name] && !((_a = this._staticClasses) === null || _a === void 0 ? void 0 : _a.has(name))) {\n                    this._previousClasses.add(name);\n                }\n            }\n            return this.render(classInfo);\n        }\n        const classList = part.element.classList;\n        // Remove old classes that no longer apply\n        // We use forEach() instead of for-of so that we don't require down-level\n        // iteration.\n        this._previousClasses.forEach((name) => {\n            if (!(name in classInfo)) {\n                classList.remove(name);\n                this._previousClasses.delete(name);\n            }\n        });\n        // Add or remove classes based on their classMap value\n        for (const name in classInfo) {\n            // We explicitly want a loose truthy check of `value` because it seems\n            // more convenient that '' and 0 are skipped.\n            const value = !!classInfo[name];\n            if (value !== this._previousClasses.has(name) &&\n                !((_b = this._staticClasses) === null || _b === void 0 ? void 0 : _b.has(name))) {\n                if (value) {\n                    classList.add(name);\n                    this._previousClasses.add(name);\n                }\n                else {\n                    classList.remove(name);\n                    this._previousClasses.delete(name);\n                }\n            }\n        }\n        return _lit_html_js__WEBPACK_IMPORTED_MODULE_0__.noChange;\n    }\n}\n/**\n * A directive that applies dynamic CSS classes.\n *\n * This must be used in the `class` attribute and must be the only part used in\n * the attribute. It takes each property in the `classInfo` argument and adds\n * the property name to the element's `classList` if the property value is\n * truthy; if the property value is falsey, the property name is removed from\n * the element's `class`.\n *\n * For example `{foo: bar}` applies the class `foo` if the value of `bar` is\n * truthy.\n *\n * @param classInfo\n */\nconst classMap = (0,_directive_js__WEBPACK_IMPORTED_MODULE_1__.directive)(ClassMapDirective);\n//# sourceMappingURL=class-map.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbGl0LWh0bWwvZGV2ZWxvcG1lbnQvZGlyZWN0aXZlcy9jbGFzcy1tYXAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUMwQztBQUN3QjtBQUNsRSxnQ0FBZ0Msb0RBQVM7QUFDekM7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLG1EQUFRO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsa0RBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0EsaUJBQWlCLFNBQVM7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDTyxpQkFBaUIsd0RBQVM7QUFDakMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kaXNjaXBsZS10b29scy1jb252ZXJzYXRpb25zLy4vbm9kZV9tb2R1bGVzL2xpdC1odG1sL2RldmVsb3BtZW50L2RpcmVjdGl2ZXMvY2xhc3MtbWFwLmpzP2I1NTciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTggR29vZ2xlIExMQ1xuICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEJTRC0zLUNsYXVzZVxuICovXG5pbXBvcnQgeyBub0NoYW5nZSB9IGZyb20gJy4uL2xpdC1odG1sLmpzJztcbmltcG9ydCB7IGRpcmVjdGl2ZSwgRGlyZWN0aXZlLCBQYXJ0VHlwZSwgfSBmcm9tICcuLi9kaXJlY3RpdmUuanMnO1xuY2xhc3MgQ2xhc3NNYXBEaXJlY3RpdmUgZXh0ZW5kcyBEaXJlY3RpdmUge1xuICAgIGNvbnN0cnVjdG9yKHBhcnRJbmZvKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgc3VwZXIocGFydEluZm8pO1xuICAgICAgICBpZiAocGFydEluZm8udHlwZSAhPT0gUGFydFR5cGUuQVRUUklCVVRFIHx8XG4gICAgICAgICAgICBwYXJ0SW5mby5uYW1lICE9PSAnY2xhc3MnIHx8XG4gICAgICAgICAgICAoKF9hID0gcGFydEluZm8uc3RyaW5ncykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmxlbmd0aCkgPiAyKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2BjbGFzc01hcCgpYCBjYW4gb25seSBiZSB1c2VkIGluIHRoZSBgY2xhc3NgIGF0dHJpYnV0ZSAnICtcbiAgICAgICAgICAgICAgICAnYW5kIG11c3QgYmUgdGhlIG9ubHkgcGFydCBpbiB0aGUgYXR0cmlidXRlLicpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJlbmRlcihjbGFzc0luZm8pIHtcbiAgICAgICAgLy8gQWRkIHNwYWNlcyB0byBlbnN1cmUgc2VwYXJhdGlvbiBmcm9tIHN0YXRpYyBjbGFzc2VzXG4gICAgICAgIHJldHVybiAoJyAnICtcbiAgICAgICAgICAgIE9iamVjdC5rZXlzKGNsYXNzSW5mbylcbiAgICAgICAgICAgICAgICAuZmlsdGVyKChrZXkpID0+IGNsYXNzSW5mb1trZXldKVxuICAgICAgICAgICAgICAgIC5qb2luKCcgJykgK1xuICAgICAgICAgICAgJyAnKTtcbiAgICB9XG4gICAgdXBkYXRlKHBhcnQsIFtjbGFzc0luZm9dKSB7XG4gICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgIC8vIFJlbWVtYmVyIGR5bmFtaWMgY2xhc3NlcyBvbiB0aGUgZmlyc3QgcmVuZGVyXG4gICAgICAgIGlmICh0aGlzLl9wcmV2aW91c0NsYXNzZXMgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhpcy5fcHJldmlvdXNDbGFzc2VzID0gbmV3IFNldCgpO1xuICAgICAgICAgICAgaWYgKHBhcnQuc3RyaW5ncyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fc3RhdGljQ2xhc3NlcyA9IG5ldyBTZXQocGFydC5zdHJpbmdzXG4gICAgICAgICAgICAgICAgICAgIC5qb2luKCcgJylcbiAgICAgICAgICAgICAgICAgICAgLnNwbGl0KC9cXHMvKVxuICAgICAgICAgICAgICAgICAgICAuZmlsdGVyKChzKSA9PiBzICE9PSAnJykpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZm9yIChjb25zdCBuYW1lIGluIGNsYXNzSW5mbykge1xuICAgICAgICAgICAgICAgIGlmIChjbGFzc0luZm9bbmFtZV0gJiYgISgoX2EgPSB0aGlzLl9zdGF0aWNDbGFzc2VzKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuaGFzKG5hbWUpKSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9wcmV2aW91c0NsYXNzZXMuYWRkKG5hbWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzLnJlbmRlcihjbGFzc0luZm8pO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNsYXNzTGlzdCA9IHBhcnQuZWxlbWVudC5jbGFzc0xpc3Q7XG4gICAgICAgIC8vIFJlbW92ZSBvbGQgY2xhc3NlcyB0aGF0IG5vIGxvbmdlciBhcHBseVxuICAgICAgICAvLyBXZSB1c2UgZm9yRWFjaCgpIGluc3RlYWQgb2YgZm9yLW9mIHNvIHRoYXQgd2UgZG9uJ3QgcmVxdWlyZSBkb3duLWxldmVsXG4gICAgICAgIC8vIGl0ZXJhdGlvbi5cbiAgICAgICAgdGhpcy5fcHJldmlvdXNDbGFzc2VzLmZvckVhY2goKG5hbWUpID0+IHtcbiAgICAgICAgICAgIGlmICghKG5hbWUgaW4gY2xhc3NJbmZvKSkge1xuICAgICAgICAgICAgICAgIGNsYXNzTGlzdC5yZW1vdmUobmFtZSk7XG4gICAgICAgICAgICAgICAgdGhpcy5fcHJldmlvdXNDbGFzc2VzLmRlbGV0ZShuYW1lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIC8vIEFkZCBvciByZW1vdmUgY2xhc3NlcyBiYXNlZCBvbiB0aGVpciBjbGFzc01hcCB2YWx1ZVxuICAgICAgICBmb3IgKGNvbnN0IG5hbWUgaW4gY2xhc3NJbmZvKSB7XG4gICAgICAgICAgICAvLyBXZSBleHBsaWNpdGx5IHdhbnQgYSBsb29zZSB0cnV0aHkgY2hlY2sgb2YgYHZhbHVlYCBiZWNhdXNlIGl0IHNlZW1zXG4gICAgICAgICAgICAvLyBtb3JlIGNvbnZlbmllbnQgdGhhdCAnJyBhbmQgMCBhcmUgc2tpcHBlZC5cbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gISFjbGFzc0luZm9bbmFtZV07XG4gICAgICAgICAgICBpZiAodmFsdWUgIT09IHRoaXMuX3ByZXZpb3VzQ2xhc3Nlcy5oYXMobmFtZSkgJiZcbiAgICAgICAgICAgICAgICAhKChfYiA9IHRoaXMuX3N0YXRpY0NsYXNzZXMpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5oYXMobmFtZSkpKSB7XG4gICAgICAgICAgICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTGlzdC5hZGQobmFtZSk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3ByZXZpb3VzQ2xhc3Nlcy5hZGQobmFtZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjbGFzc0xpc3QucmVtb3ZlKG5hbWUpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9wcmV2aW91c0NsYXNzZXMuZGVsZXRlKG5hbWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbm9DaGFuZ2U7XG4gICAgfVxufVxuLyoqXG4gKiBBIGRpcmVjdGl2ZSB0aGF0IGFwcGxpZXMgZHluYW1pYyBDU1MgY2xhc3Nlcy5cbiAqXG4gKiBUaGlzIG11c3QgYmUgdXNlZCBpbiB0aGUgYGNsYXNzYCBhdHRyaWJ1dGUgYW5kIG11c3QgYmUgdGhlIG9ubHkgcGFydCB1c2VkIGluXG4gKiB0aGUgYXR0cmlidXRlLiBJdCB0YWtlcyBlYWNoIHByb3BlcnR5IGluIHRoZSBgY2xhc3NJbmZvYCBhcmd1bWVudCBhbmQgYWRkc1xuICogdGhlIHByb3BlcnR5IG5hbWUgdG8gdGhlIGVsZW1lbnQncyBgY2xhc3NMaXN0YCBpZiB0aGUgcHJvcGVydHkgdmFsdWUgaXNcbiAqIHRydXRoeTsgaWYgdGhlIHByb3BlcnR5IHZhbHVlIGlzIGZhbHNleSwgdGhlIHByb3BlcnR5IG5hbWUgaXMgcmVtb3ZlZCBmcm9tXG4gKiB0aGUgZWxlbWVudCdzIGBjbGFzc2AuXG4gKlxuICogRm9yIGV4YW1wbGUgYHtmb286IGJhcn1gIGFwcGxpZXMgdGhlIGNsYXNzIGBmb29gIGlmIHRoZSB2YWx1ZSBvZiBgYmFyYCBpc1xuICogdHJ1dGh5LlxuICpcbiAqIEBwYXJhbSBjbGFzc0luZm9cbiAqL1xuZXhwb3J0IGNvbnN0IGNsYXNzTWFwID0gZGlyZWN0aXZlKENsYXNzTWFwRGlyZWN0aXZlKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNsYXNzLW1hcC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lit-html/development/directives/class-map.js\n");

/***/ }),

/***/ "./node_modules/lit-html/development/directives/if-defined.js":
/*!********************************************************************!*\
  !*** ./node_modules/lit-html/development/directives/if-defined.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ifDefined: () => (/* binding */ ifDefined)\n/* harmony export */ });\n/* harmony import */ var _lit_html_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lit-html.js */ \"./node_modules/lit-html/development/lit-html.js\");\n/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * For AttributeParts, sets the attribute if the value is defined and removes\n * the attribute if the value is undefined.\n *\n * For other part types, this directive is a no-op.\n */\nconst ifDefined = (value) => value !== null && value !== void 0 ? value : _lit_html_js__WEBPACK_IMPORTED_MODULE_0__.nothing;\n//# sourceMappingURL=if-defined.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbGl0LWh0bWwvZGV2ZWxvcG1lbnQvZGlyZWN0aXZlcy9pZi1kZWZpbmVkLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUN5QztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTywwRUFBMEUsaURBQU87QUFDeEYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kaXNjaXBsZS10b29scy1jb252ZXJzYXRpb25zLy4vbm9kZV9tb2R1bGVzL2xpdC1odG1sL2RldmVsb3BtZW50L2RpcmVjdGl2ZXMvaWYtZGVmaW5lZC5qcz85NTc4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE4IEdvb2dsZSBMTENcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBCU0QtMy1DbGF1c2VcbiAqL1xuaW1wb3J0IHsgbm90aGluZyB9IGZyb20gJy4uL2xpdC1odG1sLmpzJztcbi8qKlxuICogRm9yIEF0dHJpYnV0ZVBhcnRzLCBzZXRzIHRoZSBhdHRyaWJ1dGUgaWYgdGhlIHZhbHVlIGlzIGRlZmluZWQgYW5kIHJlbW92ZXNcbiAqIHRoZSBhdHRyaWJ1dGUgaWYgdGhlIHZhbHVlIGlzIHVuZGVmaW5lZC5cbiAqXG4gKiBGb3Igb3RoZXIgcGFydCB0eXBlcywgdGhpcyBkaXJlY3RpdmUgaXMgYSBuby1vcC5cbiAqL1xuZXhwb3J0IGNvbnN0IGlmRGVmaW5lZCA9ICh2YWx1ZSkgPT4gdmFsdWUgIT09IG51bGwgJiYgdmFsdWUgIT09IHZvaWQgMCA/IHZhbHVlIDogbm90aGluZztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlmLWRlZmluZWQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lit-html/development/directives/if-defined.js\n");

/***/ }),

/***/ "./node_modules/lit-html/development/directives/map.js":
/*!*************************************************************!*\
  !*** ./node_modules/lit-html/development/directives/map.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   map: () => (/* binding */ map)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/**\n * Returns an iterable containing the result of calling `f(value)` on each\n * value in `items`.\n *\n * @example\n *\n * ```ts\n * render() {\n *   return html`\n *     <ul>\n *       ${map(items, (i) => html`<li>${i}</li>`)}\n *     </ul>\n *   `;\n * }\n * ```\n */\nfunction* map(items, f) {\n    if (items !== undefined) {\n        let i = 0;\n        for (const value of items) {\n            yield f(value, i++);\n        }\n    }\n}\n//# sourceMappingURL=map.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbGl0LWh0bWwvZGV2ZWxvcG1lbnQvZGlyZWN0aXZlcy9tYXAuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsNkJBQTZCLEVBQUU7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Rpc2NpcGxlLXRvb2xzLWNvbnZlcnNhdGlvbnMvLi9ub2RlX21vZHVsZXMvbGl0LWh0bWwvZGV2ZWxvcG1lbnQvZGlyZWN0aXZlcy9tYXAuanM/ZWY3ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQlNELTMtQ2xhdXNlXG4gKi9cbi8qKlxuICogUmV0dXJucyBhbiBpdGVyYWJsZSBjb250YWluaW5nIHRoZSByZXN1bHQgb2YgY2FsbGluZyBgZih2YWx1ZSlgIG9uIGVhY2hcbiAqIHZhbHVlIGluIGBpdGVtc2AuXG4gKlxuICogQGV4YW1wbGVcbiAqXG4gKiBgYGB0c1xuICogcmVuZGVyKCkge1xuICogICByZXR1cm4gaHRtbGBcbiAqICAgICA8dWw+XG4gKiAgICAgICAke21hcChpdGVtcywgKGkpID0+IGh0bWxgPGxpPiR7aX08L2xpPmApfVxuICogICAgIDwvdWw+XG4gKiAgIGA7XG4gKiB9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uKiBtYXAoaXRlbXMsIGYpIHtcbiAgICBpZiAoaXRlbXMgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBsZXQgaSA9IDA7XG4gICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgaXRlbXMpIHtcbiAgICAgICAgICAgIHlpZWxkIGYodmFsdWUsIGkrKyk7XG4gICAgICAgIH1cbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tYXAuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lit-html/development/directives/map.js\n");

/***/ }),

/***/ "./node_modules/lit-html/development/directives/repeat.js":
/*!****************************************************************!*\
  !*** ./node_modules/lit-html/development/directives/repeat.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   repeat: () => (/* binding */ repeat)\n/* harmony export */ });\n/* harmony import */ var _lit_html_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lit-html.js */ \"./node_modules/lit-html/development/lit-html.js\");\n/* harmony import */ var _directive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../directive.js */ \"./node_modules/lit-html/development/directive.js\");\n/* harmony import */ var _directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../directive-helpers.js */ \"./node_modules/lit-html/development/directive-helpers.js\");\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n\n\n// Helper for generating a map of array item to its index over a subset\n// of an array (used to lazily generate `newKeyToIndexMap` and\n// `oldKeyToIndexMap`)\nconst generateMap = (list, start, end) => {\n    const map = new Map();\n    for (let i = start; i <= end; i++) {\n        map.set(list[i], i);\n    }\n    return map;\n};\nclass RepeatDirective extends _directive_js__WEBPACK_IMPORTED_MODULE_1__.Directive {\n    constructor(partInfo) {\n        super(partInfo);\n        if (partInfo.type !== _directive_js__WEBPACK_IMPORTED_MODULE_1__.PartType.CHILD) {\n            throw new Error('repeat() can only be used in text expressions');\n        }\n    }\n    _getValuesAndKeys(items, keyFnOrTemplate, template) {\n        let keyFn;\n        if (template === undefined) {\n            template = keyFnOrTemplate;\n        }\n        else if (keyFnOrTemplate !== undefined) {\n            keyFn = keyFnOrTemplate;\n        }\n        const keys = [];\n        const values = [];\n        let index = 0;\n        for (const item of items) {\n            keys[index] = keyFn ? keyFn(item, index) : index;\n            values[index] = template(item, index);\n            index++;\n        }\n        return {\n            values,\n            keys,\n        };\n    }\n    render(items, keyFnOrTemplate, template) {\n        return this._getValuesAndKeys(items, keyFnOrTemplate, template).values;\n    }\n    update(containerPart, [items, keyFnOrTemplate, template]) {\n        var _a;\n        // Old part & key lists are retrieved from the last update (which may\n        // be primed by hydration)\n        const oldParts = (0,_directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__.getCommittedValue)(containerPart);\n        const { values: newValues, keys: newKeys } = this._getValuesAndKeys(items, keyFnOrTemplate, template);\n        // We check that oldParts, the committed value, is an Array as an\n        // indicator that the previous value came from a repeat() call. If\n        // oldParts is not an Array then this is the first render and we return\n        // an array for lit-html's array handling to render, and remember the\n        // keys.\n        if (!Array.isArray(oldParts)) {\n            this._itemKeys = newKeys;\n            return newValues;\n        }\n        // In SSR hydration it's possible for oldParts to be an array but for us\n        // to not have item keys because the update() hasn't run yet. We set the\n        // keys to an empty array. This will cause all oldKey/newKey comparisons\n        // to fail and execution to fall to the last nested brach below which\n        // reuses the oldPart.\n        const oldKeys = ((_a = this._itemKeys) !== null && _a !== void 0 ? _a : (this._itemKeys = []));\n        // New part list will be built up as we go (either reused from\n        // old parts or created for new keys in this update). This is\n        // saved in the above cache at the end of the update.\n        const newParts = [];\n        // Maps from key to index for current and previous update; these\n        // are generated lazily only when needed as a performance\n        // optimization, since they are only required for multiple\n        // non-contiguous changes in the list, which are less common.\n        let newKeyToIndexMap;\n        let oldKeyToIndexMap;\n        // Head and tail pointers to old parts and new values\n        let oldHead = 0;\n        let oldTail = oldParts.length - 1;\n        let newHead = 0;\n        let newTail = newValues.length - 1;\n        // Overview of O(n) reconciliation algorithm (general approach\n        // based on ideas found in ivi, vue, snabbdom, etc.):\n        //\n        // * We start with the list of old parts and new values (and\n        //   arrays of their respective keys), head/tail pointers into\n        //   each, and we build up the new list of parts by updating\n        //   (and when needed, moving) old parts or creating new ones.\n        //   The initial scenario might look like this (for brevity of\n        //   the diagrams, the numbers in the array reflect keys\n        //   associated with the old parts or new values, although keys\n        //   and parts/values are actually stored in parallel arrays\n        //   indexed using the same head/tail pointers):\n        //\n        //      oldHead v                 v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [ ,  ,  ,  ,  ,  ,  ]\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6] <- reflects the user's new\n        //                                      item order\n        //      newHead ^                 ^ newTail\n        //\n        // * Iterate old & new lists from both sides, updating,\n        //   swapping, or removing parts at the head/tail locations\n        //   until neither head nor tail can move.\n        //\n        // * Example below: keys at head pointers match, so update old\n        //   part 0 in-place (no need to move it) and record part 0 in\n        //   the `newParts` list. The last thing we do is advance the\n        //   `oldHead` and `newHead` pointers (will be reflected in the\n        //   next diagram).\n        //\n        //      oldHead v                 v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  ,  ] <- heads matched: update 0\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n        //                                      & newHead\n        //      newHead ^                 ^ newTail\n        //\n        // * Example below: head pointers don't match, but tail\n        //   pointers do, so update part 6 in place (no need to move\n        //   it), and record part 6 in the `newParts` list. Last,\n        //   advance the `oldTail` and `oldHead` pointers.\n        //\n        //         oldHead v              v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  , 6] <- tails matched: update 6\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldTail\n        //                                      & newTail\n        //         newHead ^              ^ newTail\n        //\n        // * If neither head nor tail match; next check if one of the\n        //   old head/tail items was removed. We first need to generate\n        //   the reverse map of new keys to index (`newKeyToIndexMap`),\n        //   which is done once lazily as a performance optimization,\n        //   since we only hit this case if multiple non-contiguous\n        //   changes were made. Note that for contiguous removal\n        //   anywhere in the list, the head and tails would advance\n        //   from either end and pass each other before we get to this\n        //   case and removals would be handled in the final while loop\n        //   without needing to generate the map.\n        //\n        // * Example below: The key at `oldTail` was removed (no longer\n        //   in the `newKeyToIndexMap`), so remove that part from the\n        //   DOM and advance just the `oldTail` pointer.\n        //\n        //         oldHead v           v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  , 6] <- 5 not in new map: remove\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    5 and advance oldTail\n        //         newHead ^           ^ newTail\n        //\n        // * Once head and tail cannot move, any mismatches are due to\n        //   either new or moved items; if a new key is in the previous\n        //   \"old key to old index\" map, move the old part to the new\n        //   location, otherwise create and insert a new part. Note\n        //   that when moving an old part we null its position in the\n        //   oldParts array if it lies between the head and tail so we\n        //   know to skip it when the pointers get there.\n        //\n        // * Example below: neither head nor tail match, and neither\n        //   were removed; so find the `newHead` key in the\n        //   `oldKeyToIndexMap`, and move that old part's DOM into the\n        //   next head position (before `oldParts[oldHead]`). Last,\n        //   null the part in the `oldPart` array since it was\n        //   somewhere in the remaining oldParts still to be scanned\n        //   (between the head and tail pointers) so that we know to\n        //   skip that old part on future iterations.\n        //\n        //         oldHead v        v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2,  ,  ,  ,  , 6] <- stuck: update & move 2\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    into place and advance\n        //                                      newHead\n        //         newHead ^           ^ newTail\n        //\n        // * Note that for moves/insertions like the one above, a part\n        //   inserted at the head pointer is inserted before the\n        //   current `oldParts[oldHead]`, and a part inserted at the\n        //   tail pointer is inserted before `newParts[newTail+1]`. The\n        //   seeming asymmetry lies in the fact that new parts are\n        //   moved into place outside in, so to the right of the head\n        //   pointer are old parts, and to the right of the tail\n        //   pointer are new parts.\n        //\n        // * We always restart back from the top of the algorithm,\n        //   allowing matching and simple updates in place to\n        //   continue...\n        //\n        // * Example below: the head pointers once again match, so\n        //   simply update part 1 and record it in the `newParts`\n        //   array.  Last, advance both head pointers.\n        //\n        //         oldHead v        v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1,  ,  ,  , 6] <- heads matched: update 1\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n        //                                      & newHead\n        //            newHead ^        ^ newTail\n        //\n        // * As mentioned above, items that were moved as a result of\n        //   being stuck (the final else clause in the code below) are\n        //   marked with null, so we always advance old pointers over\n        //   these so we're comparing the next actual old value on\n        //   either end.\n        //\n        // * Example below: `oldHead` is null (already placed in\n        //   newParts), so advance `oldHead`.\n        //\n        //            oldHead v     v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6] <- old head already used:\n        //   newParts: [0, 2, 1,  ,  ,  , 6]    advance oldHead\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n        //               newHead ^     ^ newTail\n        //\n        // * Note it's not critical to mark old parts as null when they\n        //   are moved from head to tail or tail to head, since they\n        //   will be outside the pointer range and never visited again.\n        //\n        // * Example below: Here the old tail key matches the new head\n        //   key, so the part at the `oldTail` position and move its\n        //   DOM to the new head position (before `oldParts[oldHead]`).\n        //   Last, advance `oldTail` and `newHead` pointers.\n        //\n        //               oldHead v  v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4,  ,  , 6] <- old tail matches new\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]   head: update & move 4,\n        //                                     advance oldTail & newHead\n        //               newHead ^     ^ newTail\n        //\n        // * Example below: Old and new head keys match, so update the\n        //   old head part in place, and advance the `oldHead` and\n        //   `newHead` pointers.\n        //\n        //               oldHead v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4, 3,   ,6] <- heads match: update 3\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance oldHead &\n        //                                      newHead\n        //                  newHead ^  ^ newTail\n        //\n        // * Once the new or old pointers move past each other then all\n        //   we have left is additions (if old list exhausted) or\n        //   removals (if new list exhausted). Those are handled in the\n        //   final while loops at the end.\n        //\n        // * Example below: `oldHead` exceeded `oldTail`, so we're done\n        //   with the main loop.  Create the remaining part and insert\n        //   it at the new head position, and the update is complete.\n        //\n        //                   (oldHead > oldTail)\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4, 3, 7 ,6] <- create and insert 7\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n        //                     newHead ^ newTail\n        //\n        // * Note that the order of the if/else clauses is not\n        //   important to the algorithm, as long as the null checks\n        //   come first (to ensure we're always working on valid old\n        //   parts) and that the final else clause comes last (since\n        //   that's where the expensive moves occur). The order of\n        //   remaining clauses is is just a simple guess at which cases\n        //   will be most common.\n        //\n        // * Note, we could calculate the longest\n        //   increasing subsequence (LIS) of old items in new position,\n        //   and only move those not in the LIS set. However that costs\n        //   O(nlogn) time and adds a bit more code, and only helps\n        //   make rare types of mutations require fewer moves. The\n        //   above handles removes, adds, reversal, swaps, and single\n        //   moves of contiguous items in linear time, in the minimum\n        //   number of moves. As the number of multiple moves where LIS\n        //   might help approaches a random shuffle, the LIS\n        //   optimization becomes less helpful, so it seems not worth\n        //   the code at this point. Could reconsider if a compelling\n        //   case arises.\n        while (oldHead <= oldTail && newHead <= newTail) {\n            if (oldParts[oldHead] === null) {\n                // `null` means old part at head has already been used\n                // below; skip\n                oldHead++;\n            }\n            else if (oldParts[oldTail] === null) {\n                // `null` means old part at tail has already been used\n                // below; skip\n                oldTail--;\n            }\n            else if (oldKeys[oldHead] === newKeys[newHead]) {\n                // Old head matches new head; update in place\n                newParts[newHead] = (0,_directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__.setChildPartValue)(oldParts[oldHead], newValues[newHead]);\n                oldHead++;\n                newHead++;\n            }\n            else if (oldKeys[oldTail] === newKeys[newTail]) {\n                // Old tail matches new tail; update in place\n                newParts[newTail] = (0,_directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__.setChildPartValue)(oldParts[oldTail], newValues[newTail]);\n                oldTail--;\n                newTail--;\n            }\n            else if (oldKeys[oldHead] === newKeys[newTail]) {\n                // Old head matches new tail; update and move to new tail\n                newParts[newTail] = (0,_directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__.setChildPartValue)(oldParts[oldHead], newValues[newTail]);\n                (0,_directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__.insertPart)(containerPart, newParts[newTail + 1], oldParts[oldHead]);\n                oldHead++;\n                newTail--;\n            }\n            else if (oldKeys[oldTail] === newKeys[newHead]) {\n                // Old tail matches new head; update and move to new head\n                newParts[newHead] = (0,_directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__.setChildPartValue)(oldParts[oldTail], newValues[newHead]);\n                (0,_directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__.insertPart)(containerPart, oldParts[oldHead], oldParts[oldTail]);\n                oldTail--;\n                newHead++;\n            }\n            else {\n                if (newKeyToIndexMap === undefined) {\n                    // Lazily generate key-to-index maps, used for removals &\n                    // moves below\n                    newKeyToIndexMap = generateMap(newKeys, newHead, newTail);\n                    oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);\n                }\n                if (!newKeyToIndexMap.has(oldKeys[oldHead])) {\n                    // Old head is no longer in new list; remove\n                    (0,_directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__.removePart)(oldParts[oldHead]);\n                    oldHead++;\n                }\n                else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {\n                    // Old tail is no longer in new list; remove\n                    (0,_directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__.removePart)(oldParts[oldTail]);\n                    oldTail--;\n                }\n                else {\n                    // Any mismatches at this point are due to additions or\n                    // moves; see if we have an old part we can reuse and move\n                    // into place\n                    const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);\n                    const oldPart = oldIndex !== undefined ? oldParts[oldIndex] : null;\n                    if (oldPart === null) {\n                        // No old part for this value; create a new one and\n                        // insert it\n                        const newPart = (0,_directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__.insertPart)(containerPart, oldParts[oldHead]);\n                        (0,_directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__.setChildPartValue)(newPart, newValues[newHead]);\n                        newParts[newHead] = newPart;\n                    }\n                    else {\n                        // Reuse old part\n                        newParts[newHead] = (0,_directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__.setChildPartValue)(oldPart, newValues[newHead]);\n                        (0,_directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__.insertPart)(containerPart, oldParts[oldHead], oldPart);\n                        // This marks the old part as having been used, so that\n                        // it will be skipped in the first two checks above\n                        oldParts[oldIndex] = null;\n                    }\n                    newHead++;\n                }\n            }\n        }\n        // Add parts for any remaining new values\n        while (newHead <= newTail) {\n            // For all remaining additions, we insert before last new\n            // tail, since old pointers are no longer valid\n            const newPart = (0,_directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__.insertPart)(containerPart, newParts[newTail + 1]);\n            (0,_directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__.setChildPartValue)(newPart, newValues[newHead]);\n            newParts[newHead++] = newPart;\n        }\n        // Remove any remaining unused old parts\n        while (oldHead <= oldTail) {\n            const oldPart = oldParts[oldHead++];\n            if (oldPart !== null) {\n                (0,_directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__.removePart)(oldPart);\n            }\n        }\n        // Save order of new parts for next round\n        this._itemKeys = newKeys;\n        // Directly set part value, bypassing it's dirty-checking\n        (0,_directive_helpers_js__WEBPACK_IMPORTED_MODULE_2__.setCommittedValue)(containerPart, newParts);\n        return _lit_html_js__WEBPACK_IMPORTED_MODULE_0__.noChange;\n    }\n}\n/**\n * A directive that repeats a series of values (usually `TemplateResults`)\n * generated from an iterable, and updates those items efficiently when the\n * iterable changes based on user-provided `keys` associated with each item.\n *\n * Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\n * meaning previous DOM for a given key is moved into the new position if\n * needed, and DOM will never be reused with values for different keys (new DOM\n * will always be created for new keys). This is generally the most efficient\n * way to use `repeat` since it performs minimum unnecessary work for insertions\n * and removals.\n *\n * The `keyFn` takes two parameters, the item and its index, and returns a unique key value.\n *\n * ```js\n * html`\n *   <ol>\n *     ${repeat(this.items, (item) => item.id, (item, index) => {\n *       return html`<li>${index}: ${item.name}</li>`;\n *     })}\n *   </ol>\n * `\n * ```\n *\n * **Important**: If providing a `keyFn`, keys *must* be unique for all items in a\n * given call to `repeat`. The behavior when two or more items have the same key\n * is undefined.\n *\n * If no `keyFn` is provided, this directive will perform similar to mapping\n * items to values, and DOM will be reused against potentially different items.\n */\nconst repeat = (0,_directive_js__WEBPACK_IMPORTED_MODULE_1__.directive)(RepeatDirective);\n//# sourceMappingURL=repeat.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/lit-html/development/directives/repeat.js\n");

/***/ }),

/***/ "./node_modules/lit-html/development/directives/style-map.js":
/*!*******************************************************************!*\
  !*** ./node_modules/lit-html/development/directives/style-map.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   styleMap: () => (/* binding */ styleMap)\n/* harmony export */ });\n/* harmony import */ var _lit_html_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lit-html.js */ \"./node_modules/lit-html/development/lit-html.js\");\n/* harmony import */ var _directive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../directive.js */ \"./node_modules/lit-html/development/directive.js\");\n/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n\nconst important = 'important';\n// The leading space is important\nconst importantFlag = ' !' + important;\n// How many characters to remove from a value, as a negative number\nconst flagTrim = 0 - importantFlag.length;\nclass StyleMapDirective extends _directive_js__WEBPACK_IMPORTED_MODULE_1__.Directive {\n    constructor(partInfo) {\n        var _a;\n        super(partInfo);\n        if (partInfo.type !== _directive_js__WEBPACK_IMPORTED_MODULE_1__.PartType.ATTRIBUTE ||\n            partInfo.name !== 'style' ||\n            ((_a = partInfo.strings) === null || _a === void 0 ? void 0 : _a.length) > 2) {\n            throw new Error('The `styleMap` directive must be used in the `style` attribute ' +\n                'and must be the only part in the attribute.');\n        }\n    }\n    render(styleInfo) {\n        return Object.keys(styleInfo).reduce((style, prop) => {\n            const value = styleInfo[prop];\n            if (value == null) {\n                return style;\n            }\n            // Convert property names from camel-case to dash-case, i.e.:\n            //  `backgroundColor` -> `background-color`\n            // Vendor-prefixed names need an extra `-` appended to front:\n            //  `webkitAppearance` -> `-webkit-appearance`\n            // Exception is any property name containing a dash, including\n            // custom properties; we assume these are already dash-cased i.e.:\n            //  `--my-button-color` --> `--my-button-color`\n            prop = prop.includes('-')\n                ? prop\n                : prop\n                    .replace(/(?:^(webkit|moz|ms|o)|)(?=[A-Z])/g, '-$&')\n                    .toLowerCase();\n            return style + `${prop}:${value};`;\n        }, '');\n    }\n    update(part, [styleInfo]) {\n        const { style } = part.element;\n        if (this._previousStyleProperties === undefined) {\n            this._previousStyleProperties = new Set();\n            for (const name in styleInfo) {\n                this._previousStyleProperties.add(name);\n            }\n            return this.render(styleInfo);\n        }\n        // Remove old properties that no longer exist in styleInfo\n        // We use forEach() instead of for-of so that re don't require down-level\n        // iteration.\n        this._previousStyleProperties.forEach((name) => {\n            // If the name isn't in styleInfo or it's null/undefined\n            if (styleInfo[name] == null) {\n                this._previousStyleProperties.delete(name);\n                if (name.includes('-')) {\n                    style.removeProperty(name);\n                }\n                else {\n                    // Note reset using empty string (vs null) as IE11 does not always\n                    // reset via null (https://developer.mozilla.org/en-US/docs/Web/API/ElementCSSInlineStyle/style#setting_styles)\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    style[name] = '';\n                }\n            }\n        });\n        // Add or update properties\n        for (const name in styleInfo) {\n            const value = styleInfo[name];\n            if (value != null) {\n                this._previousStyleProperties.add(name);\n                const isImportant = typeof value === 'string' && value.endsWith(importantFlag);\n                if (name.includes('-') || isImportant) {\n                    style.setProperty(name, isImportant\n                        ? value.slice(0, flagTrim)\n                        : value, isImportant ? important : '');\n                }\n                else {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    style[name] = value;\n                }\n            }\n        }\n        return _lit_html_js__WEBPACK_IMPORTED_MODULE_0__.noChange;\n    }\n}\n/**\n * A directive that applies CSS properties to an element.\n *\n * `styleMap` can only be used in the `style` attribute and must be the only\n * expression in the attribute. It takes the property names in the\n * {@link StyleInfo styleInfo} object and adds the properties to the inline\n * style of the element.\n *\n * Property names with dashes (`-`) are assumed to be valid CSS\n * property names and set on the element's style object using `setProperty()`.\n * Names without dashes are assumed to be camelCased JavaScript property names\n * and set on the element's style object using property assignment, allowing the\n * style object to translate JavaScript-style names to CSS property names.\n *\n * For example `styleMap({backgroundColor: 'red', 'border-top': '5px', '--size':\n * '0'})` sets the `background-color`, `border-top` and `--size` properties.\n *\n * @param styleInfo\n * @see {@link https://lit.dev/docs/templates/directives/#stylemap styleMap code samples on Lit.dev}\n */\nconst styleMap = (0,_directive_js__WEBPACK_IMPORTED_MODULE_1__.directive)(StyleMapDirective);\n//# sourceMappingURL=style-map.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/lit-html/development/directives/style-map.js\n");

/***/ }),

/***/ "./node_modules/lit-html/development/is-server.js":
/*!********************************************************!*\
  !*** ./node_modules/lit-html/development/is-server.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isServer: () => (/* binding */ isServer)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/**\n * @fileoverview\n *\n * This file exports a boolean const whose value will depend on what environment\n * the module is being imported from.\n */\nconst NODE_MODE = false;\n/**\n * A boolean that will be `true` in server environments like Node, and `false`\n * in browser environments. Note that your server environment or toolchain must\n * support the `\"node\"` export condition for this to be `true`.\n *\n * This can be used when authoring components to change behavior based on\n * whether or not the component is executing in an SSR context.\n */\nconst isServer = NODE_MODE;\n//# sourceMappingURL=is-server.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbGl0LWh0bWwvZGV2ZWxvcG1lbnQvaXMtc2VydmVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCIsInNvdXJjZXMiOlsid2VicGFjazovL2Rpc2NpcGxlLXRvb2xzLWNvbnZlcnNhdGlvbnMvLi9ub2RlX21vZHVsZXMvbGl0LWh0bWwvZGV2ZWxvcG1lbnQvaXMtc2VydmVyLmpzPzA2ZWEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjIgR29vZ2xlIExMQ1xuICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEJTRC0zLUNsYXVzZVxuICovXG4vKipcbiAqIEBmaWxlb3ZlcnZpZXdcbiAqXG4gKiBUaGlzIGZpbGUgZXhwb3J0cyBhIGJvb2xlYW4gY29uc3Qgd2hvc2UgdmFsdWUgd2lsbCBkZXBlbmQgb24gd2hhdCBlbnZpcm9ubWVudFxuICogdGhlIG1vZHVsZSBpcyBiZWluZyBpbXBvcnRlZCBmcm9tLlxuICovXG5jb25zdCBOT0RFX01PREUgPSBmYWxzZTtcbi8qKlxuICogQSBib29sZWFuIHRoYXQgd2lsbCBiZSBgdHJ1ZWAgaW4gc2VydmVyIGVudmlyb25tZW50cyBsaWtlIE5vZGUsIGFuZCBgZmFsc2VgXG4gKiBpbiBicm93c2VyIGVudmlyb25tZW50cy4gTm90ZSB0aGF0IHlvdXIgc2VydmVyIGVudmlyb25tZW50IG9yIHRvb2xjaGFpbiBtdXN0XG4gKiBzdXBwb3J0IHRoZSBgXCJub2RlXCJgIGV4cG9ydCBjb25kaXRpb24gZm9yIHRoaXMgdG8gYmUgYHRydWVgLlxuICpcbiAqIFRoaXMgY2FuIGJlIHVzZWQgd2hlbiBhdXRob3JpbmcgY29tcG9uZW50cyB0byBjaGFuZ2UgYmVoYXZpb3IgYmFzZWQgb25cbiAqIHdoZXRoZXIgb3Igbm90IHRoZSBjb21wb25lbnQgaXMgZXhlY3V0aW5nIGluIGFuIFNTUiBjb250ZXh0LlxuICovXG5leHBvcnQgY29uc3QgaXNTZXJ2ZXIgPSBOT0RFX01PREU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pcy1zZXJ2ZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lit-html/development/is-server.js\n");

/***/ }),

/***/ "./node_modules/lit-html/development/lit-html.js":
/*!*******************************************************!*\
  !*** ./node_modules/lit-html/development/lit-html.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _$LH: () => (/* binding */ _$LH),\n/* harmony export */   html: () => (/* binding */ html),\n/* harmony export */   noChange: () => (/* binding */ noChange),\n/* harmony export */   nothing: () => (/* binding */ nothing),\n/* harmony export */   render: () => (/* binding */ render),\n/* harmony export */   svg: () => (/* binding */ svg)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nvar _a, _b, _c, _d;\nconst DEV_MODE = true;\nconst ENABLE_EXTRA_SECURITY_HOOKS = true;\nconst ENABLE_SHADYDOM_NOPATCH = true;\nconst NODE_MODE = false;\n// Use window for browser builds because IE11 doesn't have globalThis.\nconst global = NODE_MODE ? globalThis : window;\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n    ? (event) => {\n        const shouldEmit = global\n            .emitLitDebugLogEvents;\n        if (!shouldEmit) {\n            return;\n        }\n        global.dispatchEvent(new CustomEvent('lit-debug', {\n            detail: event,\n        }));\n    }\n    : undefined;\n// Used for connecting beginRender and endRender events when there are nested\n// renders when errors are thrown preventing an endRender event from being\n// called.\nlet debugLogRenderId = 0;\nlet issueWarning;\nif (DEV_MODE) {\n    (_a = global.litIssuedWarnings) !== null && _a !== void 0 ? _a : (global.litIssuedWarnings = new Set());\n    // Issue a warning, if we haven't already.\n    issueWarning = (code, warning) => {\n        warning += code\n            ? ` See https://lit.dev/msg/${code} for more information.`\n            : '';\n        if (!global.litIssuedWarnings.has(warning)) {\n            console.warn(warning);\n            global.litIssuedWarnings.add(warning);\n        }\n    };\n    issueWarning('dev-mode', `Lit is in dev mode. Not recommended for production!`);\n}\nconst wrap = ENABLE_SHADYDOM_NOPATCH &&\n    ((_b = global.ShadyDOM) === null || _b === void 0 ? void 0 : _b.inUse) &&\n    ((_c = global.ShadyDOM) === null || _c === void 0 ? void 0 : _c.noPatch) === true\n    ? global.ShadyDOM.wrap\n    : (node) => node;\nconst trustedTypes = global.trustedTypes;\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = trustedTypes\n    ? trustedTypes.createPolicy('lit-html', {\n        createHTML: (s) => s,\n    })\n    : undefined;\nconst identityFunction = (value) => value;\nconst noopSanitizer = (_node, _name, _type) => identityFunction;\n/** Sets the global sanitizer factory. */\nconst setSanitizer = (newSanitizer) => {\n    if (!ENABLE_EXTRA_SECURITY_HOOKS) {\n        return;\n    }\n    if (sanitizerFactoryInternal !== noopSanitizer) {\n        throw new Error(`Attempted to overwrite existing lit-html security policy.` +\n            ` setSanitizeDOMValueFactory should be called at most once.`);\n    }\n    sanitizerFactoryInternal = newSanitizer;\n};\n/**\n * Only used in internal tests, not a part of the public API.\n */\nconst _testOnlyClearSanitizerFactoryDoNotCallOrElse = () => {\n    sanitizerFactoryInternal = noopSanitizer;\n};\nconst createSanitizer = (node, name, type) => {\n    return sanitizerFactoryInternal(node, name, type);\n};\n// Added to an attribute name to mark the attribute as bound so we can find\n// it easily.\nconst boundAttributeSuffix = '$lit$';\n// This marker is used in many syntactic positions in HTML, so it must be\n// a valid element name and attribute name. We don't support dynamic names (yet)\n// but this at least ensures that the parse tree is closer to the template\n// intention.\nconst marker = `lit$${String(Math.random()).slice(9)}$`;\n// String used to tell if a comment is a marker comment\nconst markerMatch = '?' + marker;\n// Text used to insert a comment marker node. We use processing instruction\n// syntax because it's slightly smaller, but parses as a comment node.\nconst nodeMarker = `<${markerMatch}>`;\nconst d = NODE_MODE && global.document === undefined\n    ? {\n        createTreeWalker() {\n            return {};\n        },\n    }\n    : document;\n// Creates a dynamic marker. We never have to search for these in the DOM.\nconst createMarker = () => d.createComment('');\nconst isPrimitive = (value) => value === null || (typeof value != 'object' && typeof value != 'function');\nconst isArray = Array.isArray;\nconst isIterable = (value) => isArray(value) ||\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof (value === null || value === void 0 ? void 0 : value[Symbol.iterator]) === 'function';\nconst SPACE_CHAR = `[ \\t\\n\\f\\r]`;\nconst ATTR_VALUE_CHAR = `[^ \\t\\n\\f\\r\"'\\`<>=]`;\nconst NAME_CHAR = `[^\\\\s\"'>=/]`;\n// These regexes represent the five parsing states that we care about in the\n// Template's HTML scanner. They match the *end* of the state they're named\n// after.\n// Depending on the match, we transition to a new state. If there's no match,\n// we stay in the same state.\n// Note that the regexes are stateful. We utilize lastIndex and sync it\n// across the multiple regexes used. In addition to the five regexes below\n// we also dynamically create a regex to find the matching end tags for raw\n// text elements.\n/**\n * End of text is: `<` followed by:\n *   (comment start) or (tag) or (dynamic tag binding)\n */\nconst textEndRegex = /<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g;\nconst COMMENT_START = 1;\nconst TAG_NAME = 2;\nconst DYNAMIC_TAG_NAME = 3;\nconst commentEndRegex = /-->/g;\n/**\n * Comments not started with <!--, like </{, can be ended by a single `>`\n */\nconst comment2EndRegex = />/g;\n/**\n * The tagEnd regex matches the end of the \"inside an opening\" tag syntax\n * position. It either matches a `>`, an attribute-like sequence, or the end\n * of the string after a space (attribute-name position ending).\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\t\\n\\f\\r\" are HTML space characters:\n * https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * So an attribute is:\n *  * The name: any character except a whitespace character, (\"), ('), \">\",\n *    \"=\", or \"/\". Note: this is different from the HTML spec which also excludes control characters.\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nconst tagEndRegex = new RegExp(`>|${SPACE_CHAR}(?:(${NAME_CHAR}+)(${SPACE_CHAR}*=${SPACE_CHAR}*(?:${ATTR_VALUE_CHAR}|(\"|')|))|$)`, 'g');\nconst ENTIRE_MATCH = 0;\nconst ATTRIBUTE_NAME = 1;\nconst SPACES_AND_EQUALS = 2;\nconst QUOTE_CHAR = 3;\nconst singleQuoteAttrEndRegex = /'/g;\nconst doubleQuoteAttrEndRegex = /\"/g;\n/**\n * Matches the raw text elements.\n *\n * Comments are not parsed within raw text elements, so we need to search their\n * text content for marker strings.\n */\nconst rawTextElement = /^(?:script|style|textarea|title)$/i;\n/** TemplateResult types */\nconst HTML_RESULT = 1;\nconst SVG_RESULT = 2;\n// TemplatePart types\n// IMPORTANT: these must match the values in PartType\nconst ATTRIBUTE_PART = 1;\nconst CHILD_PART = 2;\nconst PROPERTY_PART = 3;\nconst BOOLEAN_ATTRIBUTE_PART = 4;\nconst EVENT_PART = 5;\nconst ELEMENT_PART = 6;\nconst COMMENT_PART = 7;\n/**\n * Generates a template literal tag function that returns a TemplateResult with\n * the given result type.\n */\nconst tag = (type) => (strings, ...values) => {\n    // Warn against templates octal escape sequences\n    // We do this here rather than in render so that the warning is closer to the\n    // template definition.\n    if (DEV_MODE && strings.some((s) => s === undefined)) {\n        console.warn('Some template strings are undefined.\\n' +\n            'This is probably caused by illegal octal escape sequences.');\n    }\n    return {\n        // This property needs to remain unminified.\n        ['_$litType$']: type,\n        strings,\n        values,\n    };\n};\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const header = (title: string) => html`<h1>${title}</h1>`;\n * ```\n *\n * The `html` tag returns a description of the DOM to render as a value. It is\n * lazy, meaning no work is done until the template is rendered. When rendering,\n * if a template comes from the same expression as a previously rendered result,\n * it's efficiently updated instead of replaced.\n */\nconst html = tag(HTML_RESULT);\n/**\n * Interprets a template literal as an SVG fragment that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const rect = svg`<rect width=\"10\" height=\"10\"></rect>`;\n *\n * const myImage = html`\n *   <svg viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n *     ${rect}\n *   </svg>`;\n * ```\n *\n * The `svg` *tag function* should only be used for SVG fragments, or elements\n * that would be contained **inside** an `<svg>` HTML element. A common error is\n * placing an `<svg>` *element* in a template tagged with the `svg` tag\n * function. The `<svg>` element is an HTML element and should be used within a\n * template tagged with the {@linkcode html} tag function.\n *\n * In LitElement usage, it's invalid to return an SVG fragment from the\n * `render()` method, as the SVG fragment will be contained within the element's\n * shadow root and thus cannot be used within an `<svg>` HTML element.\n */\nconst svg = tag(SVG_RESULT);\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nconst noChange = Symbol.for('lit-noChange');\n/**\n * A sentinel value that signals a ChildPart to fully clear its content.\n *\n * ```ts\n * const button = html`${\n *  user.isAdmin\n *    ? html`<button>DELETE</button>`\n *    : nothing\n * }`;\n * ```\n *\n * Prefer using `nothing` over other falsy values as it provides a consistent\n * behavior between various expression binding contexts.\n *\n * In child expressions, `undefined`, `null`, `''`, and `nothing` all behave the\n * same and render no nodes. In attribute expressions, `nothing` _removes_ the\n * attribute, while `undefined` and `null` will render an empty string. In\n * property expressions `nothing` becomes `undefined`.\n */\nconst nothing = Symbol.for('lit-nothing');\n/**\n * The cache of prepared templates, keyed by the tagged TemplateStringsArray\n * and _not_ accounting for the specific template tag used. This means that\n * template tags cannot be dynamic - the must statically be one of html, svg,\n * or attr. This restriction simplifies the cache lookup, which is on the hot\n * path for rendering.\n */\nconst templateCache = new WeakMap();\nconst walker = d.createTreeWalker(d, 129 /* NodeFilter.SHOW_{ELEMENT|COMMENT} */, null, false);\nlet sanitizerFactoryInternal = noopSanitizer;\nfunction trustFromTemplateString(tsa, stringFromTSA) {\n    // A security check to prevent spoofing of Lit template results.\n    // In the future, we may be able to replace this with Array.isTemplateObject,\n    // though we might need to make that check inside of the html and svg\n    // functions, because precompiled templates don't come in as\n    // TemplateStringArray objects.\n    if (!Array.isArray(tsa) || !tsa.hasOwnProperty('raw')) {\n        let message = 'invalid template strings array';\n        if (DEV_MODE) {\n            message = `\n          Internal Error: expected template strings to be an array\n          with a 'raw' field. Faking a template strings array by\n          calling html or svg like an ordinary function is effectively\n          the same as calling unsafeHtml and can lead to major security\n          issues, e.g. opening your code up to XSS attacks.\n          If you're using the html or svg tagged template functions normally\n          and still seeing this error, please file a bug at\n          https://github.com/lit/lit/issues/new?template=bug_report.md\n          and include information about your build tooling, if any.\n        `\n                .trim()\n                .replace(/\\n */g, '\\n');\n        }\n        throw new Error(message);\n    }\n    return policy !== undefined\n        ? policy.createHTML(stringFromTSA)\n        : stringFromTSA;\n}\n/**\n * Returns an HTML string for the given TemplateStringsArray and result type\n * (HTML or SVG), along with the case-sensitive bound attribute names in\n * template order. The HTML contains comment markers denoting the `ChildPart`s\n * and suffixes on bound attributes denoting the `AttributeParts`.\n *\n * @param strings template strings array\n * @param type HTML or SVG\n * @return Array containing `[html, attrNames]` (array returned for terseness,\n *     to avoid object fields since this code is shared with non-minified SSR\n *     code)\n */\nconst getTemplateHtml = (strings, type) => {\n    // Insert makers into the template HTML to represent the position of\n    // bindings. The following code scans the template strings to determine the\n    // syntactic position of the bindings. They can be in text position, where\n    // we insert an HTML comment, attribute value position, where we insert a\n    // sentinel string and re-write the attribute name, or inside a tag where\n    // we insert the sentinel string.\n    const l = strings.length - 1;\n    // Stores the case-sensitive bound attribute names in the order of their\n    // parts. ElementParts are also reflected in this array as undefined\n    // rather than a string, to disambiguate from attribute bindings.\n    const attrNames = [];\n    let html = type === SVG_RESULT ? '<svg>' : '';\n    // When we're inside a raw text tag (not it's text content), the regex\n    // will still be tagRegex so we can find attributes, but will switch to\n    // this regex when the tag ends.\n    let rawTextEndRegex;\n    // The current parsing state, represented as a reference to one of the\n    // regexes\n    let regex = textEndRegex;\n    for (let i = 0; i < l; i++) {\n        const s = strings[i];\n        // The index of the end of the last attribute name. When this is\n        // positive at end of a string, it means we're in an attribute value\n        // position and need to rewrite the attribute name.\n        // We also use a special value of -2 to indicate that we encountered\n        // the end of a string in attribute name position.\n        let attrNameEndIndex = -1;\n        let attrName;\n        let lastIndex = 0;\n        let match;\n        // The conditions in this loop handle the current parse state, and the\n        // assignments to the `regex` variable are the state transitions.\n        while (lastIndex < s.length) {\n            // Make sure we start searching from where we previously left off\n            regex.lastIndex = lastIndex;\n            match = regex.exec(s);\n            if (match === null) {\n                break;\n            }\n            lastIndex = regex.lastIndex;\n            if (regex === textEndRegex) {\n                if (match[COMMENT_START] === '!--') {\n                    regex = commentEndRegex;\n                }\n                else if (match[COMMENT_START] !== undefined) {\n                    // We started a weird comment, like </{\n                    regex = comment2EndRegex;\n                }\n                else if (match[TAG_NAME] !== undefined) {\n                    if (rawTextElement.test(match[TAG_NAME])) {\n                        // Record if we encounter a raw-text element. We'll switch to\n                        // this regex at the end of the tag.\n                        rawTextEndRegex = new RegExp(`</${match[TAG_NAME]}`, 'g');\n                    }\n                    regex = tagEndRegex;\n                }\n                else if (match[DYNAMIC_TAG_NAME] !== undefined) {\n                    if (DEV_MODE) {\n                        throw new Error('Bindings in tag names are not supported. Please use static templates instead. ' +\n                            'See https://lit.dev/docs/templates/expressions/#static-expressions');\n                    }\n                    regex = tagEndRegex;\n                }\n            }\n            else if (regex === tagEndRegex) {\n                if (match[ENTIRE_MATCH] === '>') {\n                    // End of a tag. If we had started a raw-text element, use that\n                    // regex\n                    regex = rawTextEndRegex !== null && rawTextEndRegex !== void 0 ? rawTextEndRegex : textEndRegex;\n                    // We may be ending an unquoted attribute value, so make sure we\n                    // clear any pending attrNameEndIndex\n                    attrNameEndIndex = -1;\n                }\n                else if (match[ATTRIBUTE_NAME] === undefined) {\n                    // Attribute name position\n                    attrNameEndIndex = -2;\n                }\n                else {\n                    attrNameEndIndex = regex.lastIndex - match[SPACES_AND_EQUALS].length;\n                    attrName = match[ATTRIBUTE_NAME];\n                    regex =\n                        match[QUOTE_CHAR] === undefined\n                            ? tagEndRegex\n                            : match[QUOTE_CHAR] === '\"'\n                                ? doubleQuoteAttrEndRegex\n                                : singleQuoteAttrEndRegex;\n                }\n            }\n            else if (regex === doubleQuoteAttrEndRegex ||\n                regex === singleQuoteAttrEndRegex) {\n                regex = tagEndRegex;\n            }\n            else if (regex === commentEndRegex || regex === comment2EndRegex) {\n                regex = textEndRegex;\n            }\n            else {\n                // Not one of the five state regexes, so it must be the dynamically\n                // created raw text regex and we're at the close of that element.\n                regex = tagEndRegex;\n                rawTextEndRegex = undefined;\n            }\n        }\n        if (DEV_MODE) {\n            // If we have a attrNameEndIndex, which indicates that we should\n            // rewrite the attribute name, assert that we're in a valid attribute\n            // position - either in a tag, or a quoted attribute value.\n            console.assert(attrNameEndIndex === -1 ||\n                regex === tagEndRegex ||\n                regex === singleQuoteAttrEndRegex ||\n                regex === doubleQuoteAttrEndRegex, 'unexpected parse state B');\n        }\n        // We have four cases:\n        //  1. We're in text position, and not in a raw text element\n        //     (regex === textEndRegex): insert a comment marker.\n        //  2. We have a non-negative attrNameEndIndex which means we need to\n        //     rewrite the attribute name to add a bound attribute suffix.\n        //  3. We're at the non-first binding in a multi-binding attribute, use a\n        //     plain marker.\n        //  4. We're somewhere else inside the tag. If we're in attribute name\n        //     position (attrNameEndIndex === -2), add a sequential suffix to\n        //     generate a unique attribute name.\n        // Detect a binding next to self-closing tag end and insert a space to\n        // separate the marker from the tag end:\n        const end = regex === tagEndRegex && strings[i + 1].startsWith('/>') ? ' ' : '';\n        html +=\n            regex === textEndRegex\n                ? s + nodeMarker\n                : attrNameEndIndex >= 0\n                    ? (attrNames.push(attrName),\n                        s.slice(0, attrNameEndIndex) +\n                            boundAttributeSuffix +\n                            s.slice(attrNameEndIndex)) +\n                        marker +\n                        end\n                    : s +\n                        marker +\n                        (attrNameEndIndex === -2 ? (attrNames.push(undefined), i) : end);\n    }\n    const htmlResult = html + (strings[l] || '<?>') + (type === SVG_RESULT ? '</svg>' : '');\n    // Returned as an array for terseness\n    return [trustFromTemplateString(strings, htmlResult), attrNames];\n};\nclass Template {\n    constructor(\n    // This property needs to remain unminified.\n    { strings, ['_$litType$']: type }, options) {\n        this.parts = [];\n        let node;\n        let nodeIndex = 0;\n        let attrNameIndex = 0;\n        const partCount = strings.length - 1;\n        const parts = this.parts;\n        // Create template element\n        const [html, attrNames] = getTemplateHtml(strings, type);\n        this.el = Template.createElement(html, options);\n        walker.currentNode = this.el.content;\n        // Reparent SVG nodes into template root\n        if (type === SVG_RESULT) {\n            const content = this.el.content;\n            const svgElement = content.firstChild;\n            svgElement.remove();\n            content.append(...svgElement.childNodes);\n        }\n        // Walk the template to find binding markers and create TemplateParts\n        while ((node = walker.nextNode()) !== null && parts.length < partCount) {\n            if (node.nodeType === 1) {\n                if (DEV_MODE) {\n                    const tag = node.localName;\n                    // Warn if `textarea` includes an expression and throw if `template`\n                    // does since these are not supported. We do this by checking\n                    // innerHTML for anything that looks like a marker. This catches\n                    // cases like bindings in textarea there markers turn into text nodes.\n                    if (/^(?:textarea|template)$/i.test(tag) &&\n                        node.innerHTML.includes(marker)) {\n                        const m = `Expressions are not supported inside \\`${tag}\\` ` +\n                            `elements. See https://lit.dev/msg/expression-in-${tag} for more ` +\n                            `information.`;\n                        if (tag === 'template') {\n                            throw new Error(m);\n                        }\n                        else\n                            issueWarning('', m);\n                    }\n                }\n                // TODO (justinfagnani): for attempted dynamic tag names, we don't\n                // increment the bindingIndex, and it'll be off by 1 in the element\n                // and off by two after it.\n                if (node.hasAttributes()) {\n                    // We defer removing bound attributes because on IE we might not be\n                    // iterating attributes in their template order, and would sometimes\n                    // remove an attribute that we still need to create a part for.\n                    const attrsToRemove = [];\n                    for (const name of node.getAttributeNames()) {\n                        // `name` is the name of the attribute we're iterating over, but not\n                        // _necessarily_ the name of the attribute we will create a part\n                        // for. They can be different in browsers that don't iterate on\n                        // attributes in source order. In that case the attrNames array\n                        // contains the attribute name we'll process next. We only need the\n                        // attribute name here to know if we should process a bound attribute\n                        // on this element.\n                        if (name.endsWith(boundAttributeSuffix) ||\n                            name.startsWith(marker)) {\n                            const realName = attrNames[attrNameIndex++];\n                            attrsToRemove.push(name);\n                            if (realName !== undefined) {\n                                // Lowercase for case-sensitive SVG attributes like viewBox\n                                const value = node.getAttribute(realName.toLowerCase() + boundAttributeSuffix);\n                                const statics = value.split(marker);\n                                const m = /([.?@])?(.*)/.exec(realName);\n                                parts.push({\n                                    type: ATTRIBUTE_PART,\n                                    index: nodeIndex,\n                                    name: m[2],\n                                    strings: statics,\n                                    ctor: m[1] === '.'\n                                        ? PropertyPart\n                                        : m[1] === '?'\n                                            ? BooleanAttributePart\n                                            : m[1] === '@'\n                                                ? EventPart\n                                                : AttributePart,\n                                });\n                            }\n                            else {\n                                parts.push({\n                                    type: ELEMENT_PART,\n                                    index: nodeIndex,\n                                });\n                            }\n                        }\n                    }\n                    for (const name of attrsToRemove) {\n                        node.removeAttribute(name);\n                    }\n                }\n                // TODO (justinfagnani): benchmark the regex against testing for each\n                // of the 3 raw text element names.\n                if (rawTextElement.test(node.tagName)) {\n                    // For raw text elements we need to split the text content on\n                    // markers, create a Text node for each segment, and create\n                    // a TemplatePart for each marker.\n                    const strings = node.textContent.split(marker);\n                    const lastIndex = strings.length - 1;\n                    if (lastIndex > 0) {\n                        node.textContent = trustedTypes\n                            ? trustedTypes.emptyScript\n                            : '';\n                        // Generate a new text node for each literal section\n                        // These nodes are also used as the markers for node parts\n                        // We can't use empty text nodes as markers because they're\n                        // normalized when cloning in IE (could simplify when\n                        // IE is no longer supported)\n                        for (let i = 0; i < lastIndex; i++) {\n                            node.append(strings[i], createMarker());\n                            // Walk past the marker node we just added\n                            walker.nextNode();\n                            parts.push({ type: CHILD_PART, index: ++nodeIndex });\n                        }\n                        // Note because this marker is added after the walker's current\n                        // node, it will be walked to in the outer loop (and ignored), so\n                        // we don't need to adjust nodeIndex here\n                        node.append(strings[lastIndex], createMarker());\n                    }\n                }\n            }\n            else if (node.nodeType === 8) {\n                const data = node.data;\n                if (data === markerMatch) {\n                    parts.push({ type: CHILD_PART, index: nodeIndex });\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        parts.push({ type: COMMENT_PART, index: nodeIndex });\n                        // Move to the end of the match\n                        i += marker.length - 1;\n                    }\n                }\n            }\n            nodeIndex++;\n        }\n        // We could set walker.currentNode to another node here to prevent a memory\n        // leak, but every time we prepare a template, we immediately render it\n        // and re-use the walker in new TemplateInstance._clone().\n        debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({\n            kind: 'template prep',\n            template: this,\n            clonableTemplate: this.el,\n            parts: this.parts,\n            strings,\n        });\n    }\n    // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n    /** @nocollapse */\n    static createElement(html, _options) {\n        const el = d.createElement('template');\n        el.innerHTML = html;\n        return el;\n    }\n}\nfunction resolveDirective(part, value, parent = part, attributeIndex) {\n    var _a, _b, _c;\n    var _d;\n    // Bail early if the value is explicitly noChange. Note, this means any\n    // nested directive is still attached and is not run.\n    if (value === noChange) {\n        return value;\n    }\n    let currentDirective = attributeIndex !== undefined\n        ? (_a = parent.__directives) === null || _a === void 0 ? void 0 : _a[attributeIndex]\n        : parent.__directive;\n    const nextDirectiveConstructor = isPrimitive(value)\n        ? undefined\n        : // This property needs to remain unminified.\n            value['_$litDirective$'];\n    if ((currentDirective === null || currentDirective === void 0 ? void 0 : currentDirective.constructor) !== nextDirectiveConstructor) {\n        // This property needs to remain unminified.\n        (_b = currentDirective === null || currentDirective === void 0 ? void 0 : currentDirective['_$notifyDirectiveConnectionChanged']) === null || _b === void 0 ? void 0 : _b.call(currentDirective, false);\n        if (nextDirectiveConstructor === undefined) {\n            currentDirective = undefined;\n        }\n        else {\n            currentDirective = new nextDirectiveConstructor(part);\n            currentDirective._$initialize(part, parent, attributeIndex);\n        }\n        if (attributeIndex !== undefined) {\n            ((_c = (_d = parent).__directives) !== null && _c !== void 0 ? _c : (_d.__directives = []))[attributeIndex] =\n                currentDirective;\n        }\n        else {\n            parent.__directive = currentDirective;\n        }\n    }\n    if (currentDirective !== undefined) {\n        value = resolveDirective(part, currentDirective._$resolve(part, value.values), currentDirective, attributeIndex);\n    }\n    return value;\n}\n/**\n * An updateable instance of a Template. Holds references to the Parts used to\n * update the template instance.\n */\nclass TemplateInstance {\n    constructor(template, parent) {\n        this._$parts = [];\n        /** @internal */\n        this._$disconnectableChildren = undefined;\n        this._$template = template;\n        this._$parent = parent;\n    }\n    // Called by ChildPart parentNode getter\n    get parentNode() {\n        return this._$parent.parentNode;\n    }\n    // See comment in Disconnectable interface for why this is a getter\n    get _$isConnected() {\n        return this._$parent._$isConnected;\n    }\n    // This method is separate from the constructor because we need to return a\n    // DocumentFragment and we don't want to hold onto it with an instance field.\n    _clone(options) {\n        var _a;\n        const { el: { content }, parts: parts, } = this._$template;\n        const fragment = ((_a = options === null || options === void 0 ? void 0 : options.creationScope) !== null && _a !== void 0 ? _a : d).importNode(content, true);\n        walker.currentNode = fragment;\n        let node = walker.nextNode();\n        let nodeIndex = 0;\n        let partIndex = 0;\n        let templatePart = parts[0];\n        while (templatePart !== undefined) {\n            if (nodeIndex === templatePart.index) {\n                let part;\n                if (templatePart.type === CHILD_PART) {\n                    part = new ChildPart(node, node.nextSibling, this, options);\n                }\n                else if (templatePart.type === ATTRIBUTE_PART) {\n                    part = new templatePart.ctor(node, templatePart.name, templatePart.strings, this, options);\n                }\n                else if (templatePart.type === ELEMENT_PART) {\n                    part = new ElementPart(node, this, options);\n                }\n                this._$parts.push(part);\n                templatePart = parts[++partIndex];\n            }\n            if (nodeIndex !== (templatePart === null || templatePart === void 0 ? void 0 : templatePart.index)) {\n                node = walker.nextNode();\n                nodeIndex++;\n            }\n        }\n        // We need to set the currentNode away from the cloned tree so that we\n        // don't hold onto the tree even if the tree is detached and should be\n        // freed.\n        walker.currentNode = d;\n        return fragment;\n    }\n    _update(values) {\n        let i = 0;\n        for (const part of this._$parts) {\n            if (part !== undefined) {\n                debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({\n                    kind: 'set part',\n                    part,\n                    value: values[i],\n                    valueIndex: i,\n                    values,\n                    templateInstance: this,\n                });\n                if (part.strings !== undefined) {\n                    part._$setValue(values, part, i);\n                    // The number of values the part consumes is part.strings.length - 1\n                    // since values are in between template spans. We increment i by 1\n                    // later in the loop, so increment it by part.strings.length - 2 here\n                    i += part.strings.length - 2;\n                }\n                else {\n                    part._$setValue(values[i]);\n                }\n            }\n            i++;\n        }\n    }\n}\nclass ChildPart {\n    constructor(startNode, endNode, parent, options) {\n        var _a;\n        this.type = CHILD_PART;\n        this._$committedValue = nothing;\n        // The following fields will be patched onto ChildParts when required by\n        // AsyncDirective\n        /** @internal */\n        this._$disconnectableChildren = undefined;\n        this._$startNode = startNode;\n        this._$endNode = endNode;\n        this._$parent = parent;\n        this.options = options;\n        // Note __isConnected is only ever accessed on RootParts (i.e. when there is\n        // no _$parent); the value on a non-root-part is \"don't care\", but checking\n        // for parent would be more code\n        this.__isConnected = (_a = options === null || options === void 0 ? void 0 : options.isConnected) !== null && _a !== void 0 ? _a : true;\n        if (ENABLE_EXTRA_SECURITY_HOOKS) {\n            // Explicitly initialize for consistent class shape.\n            this._textSanitizer = undefined;\n        }\n    }\n    // See comment in Disconnectable interface for why this is a getter\n    get _$isConnected() {\n        var _a, _b;\n        // ChildParts that are not at the root should always be created with a\n        // parent; only RootChildNode's won't, so they return the local isConnected\n        // state\n        return (_b = (_a = this._$parent) === null || _a === void 0 ? void 0 : _a._$isConnected) !== null && _b !== void 0 ? _b : this.__isConnected;\n    }\n    /**\n     * The parent node into which the part renders its content.\n     *\n     * A ChildPart's content consists of a range of adjacent child nodes of\n     * `.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n     * `.endNode`).\n     *\n     * - If both `.startNode` and `.endNode` are non-null, then the part's content\n     * consists of all siblings between `.startNode` and `.endNode`, exclusively.\n     *\n     * - If `.startNode` is non-null but `.endNode` is null, then the part's\n     * content consists of all siblings following `.startNode`, up to and\n     * including the last child of `.parentNode`. If `.endNode` is non-null, then\n     * `.startNode` will always be non-null.\n     *\n     * - If both `.endNode` and `.startNode` are null, then the part's content\n     * consists of all child nodes of `.parentNode`.\n     */\n    get parentNode() {\n        let parentNode = wrap(this._$startNode).parentNode;\n        const parent = this._$parent;\n        if (parent !== undefined &&\n            (parentNode === null || parentNode === void 0 ? void 0 : parentNode.nodeType) === 11 /* Node.DOCUMENT_FRAGMENT */) {\n            // If the parentNode is a DocumentFragment, it may be because the DOM is\n            // still in the cloned fragment during initial render; if so, get the real\n            // parentNode the part will be committed into by asking the parent.\n            parentNode = parent.parentNode;\n        }\n        return parentNode;\n    }\n    /**\n     * The part's leading marker node, if any. See `.parentNode` for more\n     * information.\n     */\n    get startNode() {\n        return this._$startNode;\n    }\n    /**\n     * The part's trailing marker node, if any. See `.parentNode` for more\n     * information.\n     */\n    get endNode() {\n        return this._$endNode;\n    }\n    _$setValue(value, directiveParent = this) {\n        var _a;\n        if (DEV_MODE && this.parentNode === null) {\n            throw new Error(`This \\`ChildPart\\` has no \\`parentNode\\` and therefore cannot accept a value. This likely means the element containing the part was manipulated in an unsupported way outside of Lit's control such that the part's marker nodes were ejected from DOM. For example, setting the element's \\`innerHTML\\` or \\`textContent\\` can do this.`);\n        }\n        value = resolveDirective(this, value, directiveParent);\n        if (isPrimitive(value)) {\n            // Non-rendering child values. It's important that these do not render\n            // empty text nodes to avoid issues with preventing default <slot>\n            // fallback content.\n            if (value === nothing || value == null || value === '') {\n                if (this._$committedValue !== nothing) {\n                    debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({\n                        kind: 'commit nothing to child',\n                        start: this._$startNode,\n                        end: this._$endNode,\n                        parent: this._$parent,\n                        options: this.options,\n                    });\n                    this._$clear();\n                }\n                this._$committedValue = nothing;\n            }\n            else if (value !== this._$committedValue && value !== noChange) {\n                this._commitText(value);\n            }\n            // This property needs to remain unminified.\n        }\n        else if (value['_$litType$'] !== undefined) {\n            this._commitTemplateResult(value);\n        }\n        else if (value.nodeType !== undefined) {\n            if (DEV_MODE && ((_a = this.options) === null || _a === void 0 ? void 0 : _a.host) === value) {\n                this._commitText(`[probable mistake: rendered a template's host in itself ` +\n                    `(commonly caused by writing \\${this} in a template]`);\n                console.warn(`Attempted to render the template host`, value, `inside itself. This is almost always a mistake, and in dev mode `, `we render some warning text. In production however, we'll `, `render it, which will usually result in an error, and sometimes `, `in the element disappearing from the DOM.`);\n                return;\n            }\n            this._commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this._commitIterable(value);\n        }\n        else {\n            // Fallback, will render the string representation\n            this._commitText(value);\n        }\n    }\n    _insert(node) {\n        return wrap(wrap(this._$startNode).parentNode).insertBefore(node, this._$endNode);\n    }\n    _commitNode(value) {\n        var _a;\n        if (this._$committedValue !== value) {\n            this._$clear();\n            if (ENABLE_EXTRA_SECURITY_HOOKS &&\n                sanitizerFactoryInternal !== noopSanitizer) {\n                const parentNodeName = (_a = this._$startNode.parentNode) === null || _a === void 0 ? void 0 : _a.nodeName;\n                if (parentNodeName === 'STYLE' || parentNodeName === 'SCRIPT') {\n                    let message = 'Forbidden';\n                    if (DEV_MODE) {\n                        if (parentNodeName === 'STYLE') {\n                            message =\n                                `Lit does not support binding inside style nodes. ` +\n                                    `This is a security risk, as style injection attacks can ` +\n                                    `exfiltrate data and spoof UIs. ` +\n                                    `Consider instead using css\\`...\\` literals ` +\n                                    `to compose styles, and make do dynamic styling with ` +\n                                    `css custom properties, ::parts, <slot>s, ` +\n                                    `and by mutating the DOM rather than stylesheets.`;\n                        }\n                        else {\n                            message =\n                                `Lit does not support binding inside script nodes. ` +\n                                    `This is a security risk, as it could allow arbitrary ` +\n                                    `code execution.`;\n                        }\n                    }\n                    throw new Error(message);\n                }\n            }\n            debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({\n                kind: 'commit node',\n                start: this._$startNode,\n                parent: this._$parent,\n                value: value,\n                options: this.options,\n            });\n            this._$committedValue = this._insert(value);\n        }\n    }\n    _commitText(value) {\n        // If the committed value is a primitive it means we called _commitText on\n        // the previous render, and we know that this._$startNode.nextSibling is a\n        // Text node. We can now just replace the text content (.data) of the node.\n        if (this._$committedValue !== nothing &&\n            isPrimitive(this._$committedValue)) {\n            const node = wrap(this._$startNode).nextSibling;\n            if (ENABLE_EXTRA_SECURITY_HOOKS) {\n                if (this._textSanitizer === undefined) {\n                    this._textSanitizer = createSanitizer(node, 'data', 'property');\n                }\n                value = this._textSanitizer(value);\n            }\n            debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({\n                kind: 'commit text',\n                node,\n                value,\n                options: this.options,\n            });\n            node.data = value;\n        }\n        else {\n            if (ENABLE_EXTRA_SECURITY_HOOKS) {\n                const textNode = d.createTextNode('');\n                this._commitNode(textNode);\n                // When setting text content, for security purposes it matters a lot\n                // what the parent is. For example, <style> and <script> need to be\n                // handled with care, while <span> does not. So first we need to put a\n                // text node into the document, then we can sanitize its content.\n                if (this._textSanitizer === undefined) {\n                    this._textSanitizer = createSanitizer(textNode, 'data', 'property');\n                }\n                value = this._textSanitizer(value);\n                debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({\n                    kind: 'commit text',\n                    node: textNode,\n                    value,\n                    options: this.options,\n                });\n                textNode.data = value;\n            }\n            else {\n                this._commitNode(d.createTextNode(value));\n                debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({\n                    kind: 'commit text',\n                    node: wrap(this._$startNode).nextSibling,\n                    value,\n                    options: this.options,\n                });\n            }\n        }\n        this._$committedValue = value;\n    }\n    _commitTemplateResult(result) {\n        var _a;\n        // This property needs to remain unminified.\n        const { values, ['_$litType$']: type } = result;\n        // If $litType$ is a number, result is a plain TemplateResult and we get\n        // the template from the template cache. If not, result is a\n        // CompiledTemplateResult and _$litType$ is a CompiledTemplate and we need\n        // to create the <template> element the first time we see it.\n        const template = typeof type === 'number'\n            ? this._$getTemplate(result)\n            : (type.el === undefined &&\n                (type.el = Template.createElement(trustFromTemplateString(type.h, type.h[0]), this.options)),\n                type);\n        if (((_a = this._$committedValue) === null || _a === void 0 ? void 0 : _a._$template) === template) {\n            debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({\n                kind: 'template updating',\n                template,\n                instance: this._$committedValue,\n                parts: this._$committedValue._$parts,\n                options: this.options,\n                values,\n            });\n            this._$committedValue._update(values);\n        }\n        else {\n            const instance = new TemplateInstance(template, this);\n            const fragment = instance._clone(this.options);\n            debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({\n                kind: 'template instantiated',\n                template,\n                instance,\n                parts: instance._$parts,\n                options: this.options,\n                fragment,\n                values,\n            });\n            instance._update(values);\n            debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({\n                kind: 'template instantiated and updated',\n                template,\n                instance,\n                parts: instance._$parts,\n                options: this.options,\n                fragment,\n                values,\n            });\n            this._commitNode(fragment);\n            this._$committedValue = instance;\n        }\n    }\n    // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n    /** @internal */\n    _$getTemplate(result) {\n        let template = templateCache.get(result.strings);\n        if (template === undefined) {\n            templateCache.set(result.strings, (template = new Template(result)));\n        }\n        return template;\n    }\n    _commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If value is an array, then the previous render was of an\n        // iterable and value will contain the ChildParts from the previous\n        // render. If value is not an array, clear this part and make a new\n        // array for ChildParts.\n        if (!isArray(this._$committedValue)) {\n            this._$committedValue = [];\n            this._$clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this._$committedValue;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            if (partIndex === itemParts.length) {\n                // If no existing part, create a new one\n                // TODO (justinfagnani): test perf impact of always creating two parts\n                // instead of sharing parts between nodes\n                // https://github.com/lit/lit/issues/1266\n                itemParts.push((itemPart = new ChildPart(this._insert(createMarker()), this._insert(createMarker()), this, this.options)));\n            }\n            else {\n                // Reuse an existing part\n                itemPart = itemParts[partIndex];\n            }\n            itemPart._$setValue(item);\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // itemParts always have end nodes\n            this._$clear(itemPart && wrap(itemPart._$endNode).nextSibling, partIndex);\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n        }\n    }\n    /**\n     * Removes the nodes contained within this Part from the DOM.\n     *\n     * @param start Start node to clear from, for clearing a subset of the part's\n     *     DOM (used when truncating iterables)\n     * @param from  When `start` is specified, the index within the iterable from\n     *     which ChildParts are being removed, used for disconnecting directives in\n     *     those Parts.\n     *\n     * @internal\n     */\n    _$clear(start = wrap(this._$startNode).nextSibling, from) {\n        var _a;\n        (_a = this._$notifyConnectionChanged) === null || _a === void 0 ? void 0 : _a.call(this, false, true, from);\n        while (start && start !== this._$endNode) {\n            const n = wrap(start).nextSibling;\n            wrap(start).remove();\n            start = n;\n        }\n    }\n    /**\n     * Implementation of RootPart's `isConnected`. Note that this metod\n     * should only be called on `RootPart`s (the `ChildPart` returned from a\n     * top-level `render()` call). It has no effect on non-root ChildParts.\n     * @param isConnected Whether to set\n     * @internal\n     */\n    setConnected(isConnected) {\n        var _a;\n        if (this._$parent === undefined) {\n            this.__isConnected = isConnected;\n            (_a = this._$notifyConnectionChanged) === null || _a === void 0 ? void 0 : _a.call(this, isConnected);\n        }\n        else if (DEV_MODE) {\n            throw new Error('part.setConnected() may only be called on a ' +\n                'RootPart returned from render().');\n        }\n    }\n}\nclass AttributePart {\n    constructor(element, name, strings, parent, options) {\n        this.type = ATTRIBUTE_PART;\n        /** @internal */\n        this._$committedValue = nothing;\n        /** @internal */\n        this._$disconnectableChildren = undefined;\n        this.element = element;\n        this.name = name;\n        this._$parent = parent;\n        this.options = options;\n        if (strings.length > 2 || strings[0] !== '' || strings[1] !== '') {\n            this._$committedValue = new Array(strings.length - 1).fill(new String());\n            this.strings = strings;\n        }\n        else {\n            this._$committedValue = nothing;\n        }\n        if (ENABLE_EXTRA_SECURITY_HOOKS) {\n            this._sanitizer = undefined;\n        }\n    }\n    get tagName() {\n        return this.element.tagName;\n    }\n    // See comment in Disconnectable interface for why this is a getter\n    get _$isConnected() {\n        return this._$parent._$isConnected;\n    }\n    /**\n     * Sets the value of this part by resolving the value from possibly multiple\n     * values and static strings and committing it to the DOM.\n     * If this part is single-valued, `this._strings` will be undefined, and the\n     * method will be called with a single value argument. If this part is\n     * multi-value, `this._strings` will be defined, and the method is called\n     * with the value array of the part's owning TemplateInstance, and an offset\n     * into the value array from which the values should be read.\n     * This method is overloaded this way to eliminate short-lived array slices\n     * of the template instance values, and allow a fast-path for single-valued\n     * parts.\n     *\n     * @param value The part value, or an array of values for multi-valued parts\n     * @param valueIndex the index to start reading values from. `undefined` for\n     *   single-valued parts\n     * @param noCommit causes the part to not commit its value to the DOM. Used\n     *   in hydration to prime attribute parts with their first-rendered value,\n     *   but not set the attribute, and in SSR to no-op the DOM operation and\n     *   capture the value for serialization.\n     *\n     * @internal\n     */\n    _$setValue(value, directiveParent = this, valueIndex, noCommit) {\n        const strings = this.strings;\n        // Whether any of the values has changed, for dirty-checking\n        let change = false;\n        if (strings === undefined) {\n            // Single-value binding case\n            value = resolveDirective(this, value, directiveParent, 0);\n            change =\n                !isPrimitive(value) ||\n                    (value !== this._$committedValue && value !== noChange);\n            if (change) {\n                this._$committedValue = value;\n            }\n        }\n        else {\n            // Interpolation case\n            const values = value;\n            value = strings[0];\n            let i, v;\n            for (i = 0; i < strings.length - 1; i++) {\n                v = resolveDirective(this, values[valueIndex + i], directiveParent, i);\n                if (v === noChange) {\n                    // If the user-provided value is `noChange`, use the previous value\n                    v = this._$committedValue[i];\n                }\n                change || (change = !isPrimitive(v) || v !== this._$committedValue[i]);\n                if (v === nothing) {\n                    value = nothing;\n                }\n                else if (value !== nothing) {\n                    value += (v !== null && v !== void 0 ? v : '') + strings[i + 1];\n                }\n                // We always record each value, even if one is `nothing`, for future\n                // change detection.\n                this._$committedValue[i] = v;\n            }\n        }\n        if (change && !noCommit) {\n            this._commitValue(value);\n        }\n    }\n    /** @internal */\n    _commitValue(value) {\n        if (value === nothing) {\n            wrap(this.element).removeAttribute(this.name);\n        }\n        else {\n            if (ENABLE_EXTRA_SECURITY_HOOKS) {\n                if (this._sanitizer === undefined) {\n                    this._sanitizer = sanitizerFactoryInternal(this.element, this.name, 'attribute');\n                }\n                value = this._sanitizer(value !== null && value !== void 0 ? value : '');\n            }\n            debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({\n                kind: 'commit attribute',\n                element: this.element,\n                name: this.name,\n                value,\n                options: this.options,\n            });\n            wrap(this.element).setAttribute(this.name, (value !== null && value !== void 0 ? value : ''));\n        }\n    }\n}\nclass PropertyPart extends AttributePart {\n    constructor() {\n        super(...arguments);\n        this.type = PROPERTY_PART;\n    }\n    /** @internal */\n    _commitValue(value) {\n        if (ENABLE_EXTRA_SECURITY_HOOKS) {\n            if (this._sanitizer === undefined) {\n                this._sanitizer = sanitizerFactoryInternal(this.element, this.name, 'property');\n            }\n            value = this._sanitizer(value);\n        }\n        debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({\n            kind: 'commit property',\n            element: this.element,\n            name: this.name,\n            value,\n            options: this.options,\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.element[this.name] = value === nothing ? undefined : value;\n    }\n}\n// Temporary workaround for https://crbug.com/993268\n// Currently, any attribute starting with \"on\" is considered to be a\n// TrustedScript source. Such boolean attributes must be set to the equivalent\n// trusted emptyScript value.\nconst emptyStringForBooleanAttribute = trustedTypes\n    ? trustedTypes.emptyScript\n    : '';\nclass BooleanAttributePart extends AttributePart {\n    constructor() {\n        super(...arguments);\n        this.type = BOOLEAN_ATTRIBUTE_PART;\n    }\n    /** @internal */\n    _commitValue(value) {\n        debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({\n            kind: 'commit boolean attribute',\n            element: this.element,\n            name: this.name,\n            value: !!(value && value !== nothing),\n            options: this.options,\n        });\n        if (value && value !== nothing) {\n            wrap(this.element).setAttribute(this.name, emptyStringForBooleanAttribute);\n        }\n        else {\n            wrap(this.element).removeAttribute(this.name);\n        }\n    }\n}\nclass EventPart extends AttributePart {\n    constructor(element, name, strings, parent, options) {\n        super(element, name, strings, parent, options);\n        this.type = EVENT_PART;\n        if (DEV_MODE && this.strings !== undefined) {\n            throw new Error(`A \\`<${element.localName}>\\` has a \\`@${name}=...\\` listener with ` +\n                'invalid content. Event listeners in templates must have exactly ' +\n                'one expression and no surrounding text.');\n        }\n    }\n    // EventPart does not use the base _$setValue/_resolveValue implementation\n    // since the dirty checking is more complex\n    /** @internal */\n    _$setValue(newListener, directiveParent = this) {\n        var _a;\n        newListener =\n            (_a = resolveDirective(this, newListener, directiveParent, 0)) !== null && _a !== void 0 ? _a : nothing;\n        if (newListener === noChange) {\n            return;\n        }\n        const oldListener = this._$committedValue;\n        // If the new value is nothing or any options change we have to remove the\n        // part as a listener.\n        const shouldRemoveListener = (newListener === nothing && oldListener !== nothing) ||\n            newListener.capture !==\n                oldListener.capture ||\n            newListener.once !==\n                oldListener.once ||\n            newListener.passive !==\n                oldListener.passive;\n        // If the new value is not nothing and we removed the listener, we have\n        // to add the part as a listener.\n        const shouldAddListener = newListener !== nothing &&\n            (oldListener === nothing || shouldRemoveListener);\n        debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({\n            kind: 'commit event listener',\n            element: this.element,\n            name: this.name,\n            value: newListener,\n            options: this.options,\n            removeListener: shouldRemoveListener,\n            addListener: shouldAddListener,\n            oldListener,\n        });\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.name, this, oldListener);\n        }\n        if (shouldAddListener) {\n            // Beware: IE11 and Chrome 41 don't like using the listener as the\n            // options object. Figure out how to deal w/ this in IE11 - maybe\n            // patch addEventListener?\n            this.element.addEventListener(this.name, this, newListener);\n        }\n        this._$committedValue = newListener;\n    }\n    handleEvent(event) {\n        var _a, _b;\n        if (typeof this._$committedValue === 'function') {\n            this._$committedValue.call((_b = (_a = this.options) === null || _a === void 0 ? void 0 : _a.host) !== null && _b !== void 0 ? _b : this.element, event);\n        }\n        else {\n            this._$committedValue.handleEvent(event);\n        }\n    }\n}\nclass ElementPart {\n    constructor(element, parent, options) {\n        this.element = element;\n        this.type = ELEMENT_PART;\n        /** @internal */\n        this._$disconnectableChildren = undefined;\n        this._$parent = parent;\n        this.options = options;\n    }\n    // See comment in Disconnectable interface for why this is a getter\n    get _$isConnected() {\n        return this._$parent._$isConnected;\n    }\n    _$setValue(value) {\n        debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({\n            kind: 'commit to element binding',\n            element: this.element,\n            value,\n            options: this.options,\n        });\n        resolveDirective(this, value);\n    }\n}\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LH object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-element, which re-exports all of lit-html.\n *\n * @private\n */\nconst _$LH = {\n    // Used in lit-ssr\n    _boundAttributeSuffix: boundAttributeSuffix,\n    _marker: marker,\n    _markerMatch: markerMatch,\n    _HTML_RESULT: HTML_RESULT,\n    _getTemplateHtml: getTemplateHtml,\n    // Used in tests and private-ssr-support\n    _TemplateInstance: TemplateInstance,\n    _isIterable: isIterable,\n    _resolveDirective: resolveDirective,\n    _ChildPart: ChildPart,\n    _AttributePart: AttributePart,\n    _BooleanAttributePart: BooleanAttributePart,\n    _EventPart: EventPart,\n    _PropertyPart: PropertyPart,\n    _ElementPart: ElementPart,\n};\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n    ? global.litHtmlPolyfillSupportDevMode\n    : global.litHtmlPolyfillSupport;\npolyfillSupport === null || polyfillSupport === void 0 ? void 0 : polyfillSupport(Template, ChildPart);\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n((_d = global.litHtmlVersions) !== null && _d !== void 0 ? _d : (global.litHtmlVersions = [])).push('2.8.0');\nif (DEV_MODE && global.litHtmlVersions.length > 1) {\n    issueWarning('multiple-versions', `Multiple versions of Lit loaded. ` +\n        `Loading multiple versions is not recommended.`);\n}\n/**\n * Renders a value, usually a lit-html TemplateResult, to the container.\n *\n * This example renders the text \"Hello, Zoe!\" inside a paragraph tag, appending\n * it to the container `document.body`.\n *\n * ```js\n * import {html, render} from 'lit';\n *\n * const name = \"Zoe\";\n * render(html`<p>Hello, ${name}!</p>`, document.body);\n * ```\n *\n * @param value Any [renderable\n *   value](https://lit.dev/docs/templates/expressions/#child-expressions),\n *   typically a {@linkcode TemplateResult} created by evaluating a template tag\n *   like {@linkcode html} or {@linkcode svg}.\n * @param container A DOM container to render to. The first render will append\n *   the rendered value to the container, and subsequent renders will\n *   efficiently update the rendered value if the same result type was\n *   previously rendered there.\n * @param options See {@linkcode RenderOptions} for options documentation.\n * @see\n * {@link https://lit.dev/docs/libraries/standalone-templates/#rendering-lit-html-templates| Rendering Lit HTML Templates}\n */\nconst render = (value, container, options) => {\n    var _a, _b;\n    if (DEV_MODE && container == null) {\n        // Give a clearer error message than\n        //     Uncaught TypeError: Cannot read properties of null (reading\n        //     '_$litPart$')\n        // which reads like an internal Lit error.\n        throw new TypeError(`The container to render into may not be ${container}`);\n    }\n    const renderId = DEV_MODE ? debugLogRenderId++ : 0;\n    const partOwnerNode = (_a = options === null || options === void 0 ? void 0 : options.renderBefore) !== null && _a !== void 0 ? _a : container;\n    // This property needs to remain unminified.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let part = partOwnerNode['_$litPart$'];\n    debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({\n        kind: 'begin render',\n        id: renderId,\n        value,\n        container,\n        options,\n        part,\n    });\n    if (part === undefined) {\n        const endNode = (_b = options === null || options === void 0 ? void 0 : options.renderBefore) !== null && _b !== void 0 ? _b : null;\n        // This property needs to remain unminified.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        partOwnerNode['_$litPart$'] = part = new ChildPart(container.insertBefore(createMarker(), endNode), endNode, undefined, options !== null && options !== void 0 ? options : {});\n    }\n    part._$setValue(value);\n    debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({\n        kind: 'end render',\n        id: renderId,\n        value,\n        container,\n        options,\n        part,\n    });\n    return part;\n};\nif (ENABLE_EXTRA_SECURITY_HOOKS) {\n    render.setSanitizer = setSanitizer;\n    render.createSanitizer = createSanitizer;\n    if (DEV_MODE) {\n        render._testOnlyClearSanitizerFactoryDoNotCallOrElse =\n            _testOnlyClearSanitizerFactoryDoNotCallOrElse;\n    }\n}\n//# sourceMappingURL=lit-html.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/lit-html/development/lit-html.js\n");

/***/ }),

/***/ "./node_modules/lit/directives/class-map.js":
/*!**************************************************!*\
  !*** ./node_modules/lit/directives/class-map.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   classMap: () => (/* reexport safe */ lit_html_directives_class_map_js__WEBPACK_IMPORTED_MODULE_0__.classMap)\n/* harmony export */ });\n/* harmony import */ var lit_html_directives_class_map_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit-html/directives/class-map.js */ \"./node_modules/lit-html/development/directives/class-map.js\");\n\n//# sourceMappingURL=class-map.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbGl0L2RpcmVjdGl2ZXMvY2xhc3MtbWFwLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQThDO0FBQzlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGlzY2lwbGUtdG9vbHMtY29udmVyc2F0aW9ucy8uL25vZGVfbW9kdWxlcy9saXQvZGlyZWN0aXZlcy9jbGFzcy1tYXAuanM/MmFmMiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQqZnJvbVwibGl0LWh0bWwvZGlyZWN0aXZlcy9jbGFzcy1tYXAuanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNsYXNzLW1hcC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lit/directives/class-map.js\n");

/***/ }),

/***/ "./node_modules/lit/directives/if-defined.js":
/*!***************************************************!*\
  !*** ./node_modules/lit/directives/if-defined.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ifDefined: () => (/* reexport safe */ lit_html_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_0__.ifDefined)\n/* harmony export */ });\n/* harmony import */ var lit_html_directives_if_defined_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit-html/directives/if-defined.js */ \"./node_modules/lit-html/development/directives/if-defined.js\");\n\n//# sourceMappingURL=if-defined.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbGl0L2RpcmVjdGl2ZXMvaWYtZGVmaW5lZC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUErQztBQUMvQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Rpc2NpcGxlLXRvb2xzLWNvbnZlcnNhdGlvbnMvLi9ub2RlX21vZHVsZXMvbGl0L2RpcmVjdGl2ZXMvaWYtZGVmaW5lZC5qcz85OTJmIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCpmcm9tXCJsaXQtaHRtbC9kaXJlY3RpdmVzL2lmLWRlZmluZWQuanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlmLWRlZmluZWQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lit/directives/if-defined.js\n");

/***/ }),

/***/ "./node_modules/lit/directives/map.js":
/*!********************************************!*\
  !*** ./node_modules/lit/directives/map.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   map: () => (/* reexport safe */ lit_html_directives_map_js__WEBPACK_IMPORTED_MODULE_0__.map)\n/* harmony export */ });\n/* harmony import */ var lit_html_directives_map_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit-html/directives/map.js */ \"./node_modules/lit-html/development/directives/map.js\");\n\n//# sourceMappingURL=map.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbGl0L2RpcmVjdGl2ZXMvbWFwLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXdDO0FBQ3hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGlzY2lwbGUtdG9vbHMtY29udmVyc2F0aW9ucy8uL25vZGVfbW9kdWxlcy9saXQvZGlyZWN0aXZlcy9tYXAuanM/Yzc4MCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQqZnJvbVwibGl0LWh0bWwvZGlyZWN0aXZlcy9tYXAuanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1hcC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lit/directives/map.js\n");

/***/ }),

/***/ "./node_modules/lit/directives/repeat.js":
/*!***********************************************!*\
  !*** ./node_modules/lit/directives/repeat.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   repeat: () => (/* reexport safe */ lit_html_directives_repeat_js__WEBPACK_IMPORTED_MODULE_0__.repeat)\n/* harmony export */ });\n/* harmony import */ var lit_html_directives_repeat_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit-html/directives/repeat.js */ \"./node_modules/lit-html/development/directives/repeat.js\");\n\n//# sourceMappingURL=repeat.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbGl0L2RpcmVjdGl2ZXMvcmVwZWF0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTJDO0FBQzNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGlzY2lwbGUtdG9vbHMtY29udmVyc2F0aW9ucy8uL25vZGVfbW9kdWxlcy9saXQvZGlyZWN0aXZlcy9yZXBlYXQuanM/MDBhMiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQqZnJvbVwibGl0LWh0bWwvZGlyZWN0aXZlcy9yZXBlYXQuanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlcGVhdC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lit/directives/repeat.js\n");

/***/ }),

/***/ "./node_modules/lit/directives/style-map.js":
/*!**************************************************!*\
  !*** ./node_modules/lit/directives/style-map.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   styleMap: () => (/* reexport safe */ lit_html_directives_style_map_js__WEBPACK_IMPORTED_MODULE_0__.styleMap)\n/* harmony export */ });\n/* harmony import */ var lit_html_directives_style_map_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit-html/directives/style-map.js */ \"./node_modules/lit-html/development/directives/style-map.js\");\n\n//# sourceMappingURL=style-map.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbGl0L2RpcmVjdGl2ZXMvc3R5bGUtbWFwLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQThDO0FBQzlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGlzY2lwbGUtdG9vbHMtY29udmVyc2F0aW9ucy8uL25vZGVfbW9kdWxlcy9saXQvZGlyZWN0aXZlcy9zdHlsZS1tYXAuanM/ZTExMSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQqZnJvbVwibGl0LWh0bWwvZGlyZWN0aXZlcy9zdHlsZS1tYXAuanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0eWxlLW1hcC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lit/directives/style-map.js\n");

/***/ }),

/***/ "./node_modules/lit/index.js":
/*!***********************************!*\
  !*** ./node_modules/lit/index.js ***!
  \***********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CSSResult: () => (/* reexport safe */ lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__.CSSResult),\n/* harmony export */   LitElement: () => (/* reexport safe */ lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__.LitElement),\n/* harmony export */   ReactiveElement: () => (/* reexport safe */ lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__.ReactiveElement),\n/* harmony export */   UpdatingElement: () => (/* reexport safe */ lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__.UpdatingElement),\n/* harmony export */   _$LE: () => (/* reexport safe */ lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__._$LE),\n/* harmony export */   _$LH: () => (/* reexport safe */ lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__._$LH),\n/* harmony export */   adoptStyles: () => (/* reexport safe */ lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__.adoptStyles),\n/* harmony export */   css: () => (/* reexport safe */ lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__.css),\n/* harmony export */   defaultConverter: () => (/* reexport safe */ lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__.defaultConverter),\n/* harmony export */   getCompatibleStyle: () => (/* reexport safe */ lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__.getCompatibleStyle),\n/* harmony export */   html: () => (/* reexport safe */ lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__.html),\n/* harmony export */   isServer: () => (/* reexport safe */ lit_html_is_server_js__WEBPACK_IMPORTED_MODULE_3__.isServer),\n/* harmony export */   noChange: () => (/* reexport safe */ lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__.noChange),\n/* harmony export */   notEqual: () => (/* reexport safe */ lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__.notEqual),\n/* harmony export */   nothing: () => (/* reexport safe */ lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__.nothing),\n/* harmony export */   render: () => (/* reexport safe */ lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__.render),\n/* harmony export */   supportsAdoptingStyleSheets: () => (/* reexport safe */ lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__.supportsAdoptingStyleSheets),\n/* harmony export */   svg: () => (/* reexport safe */ lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__.svg),\n/* harmony export */   unsafeCSS: () => (/* reexport safe */ lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__.unsafeCSS)\n/* harmony export */ });\n/* harmony import */ var _lit_reactive_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lit/reactive-element */ \"./node_modules/@lit/reactive-element/development/reactive-element.js\");\n/* harmony import */ var lit_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit-html */ \"./node_modules/lit-html/development/lit-html.js\");\n/* harmony import */ var lit_element_lit_element_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lit-element/lit-element.js */ \"./node_modules/lit-element/development/lit-element.js\");\n/* harmony import */ var lit_html_is_server_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lit-html/is-server.js */ \"./node_modules/lit-html/development/is-server.js\");\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbGl0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQTBIO0FBQzFIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGlzY2lwbGUtdG9vbHMtY29udmVyc2F0aW9ucy8uL25vZGVfbW9kdWxlcy9saXQvaW5kZXguanM/ZGI0MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnRcIkBsaXQvcmVhY3RpdmUtZWxlbWVudFwiO2ltcG9ydFwibGl0LWh0bWxcIjtleHBvcnQqZnJvbVwibGl0LWVsZW1lbnQvbGl0LWVsZW1lbnQuanNcIjtleHBvcnQqZnJvbVwibGl0LWh0bWwvaXMtc2VydmVyLmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lit/index.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	(() => {
/******/ 		__webpack_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__webpack_require__.e = (chunkId) => {
/******/ 			return Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {
/******/ 				__webpack_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.u = (chunkId) => {
/******/ 			// return url for filenames not based on template
/******/ 			if ({"node_modules_disciple_tools_web-components_src_i18n_generated_am_ET_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_ar_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_ar_MA_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_bg_BG_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_bn_BD_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_bs_BA_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_cs_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_de_DE_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_el_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_en_US_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_es-419_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_es_419_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_es_ES_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_fa_IR_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_fr_FR_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_hi_IN_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_hr_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_hu_HU_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_id_ID_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_it_IT_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_ja_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_ko_KR_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_mk_MK_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_mr_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_my_MM_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_ne_NP_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_nl_NL_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_pa_IN_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_pl_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_pt_BR_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_ro_RO_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_ru_RU_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_sl_SI_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_sr_BA_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_sw_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_th_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_tl_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_tr_TR_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_uk_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_vi_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_zh_CN_js":1,"node_modules_disciple_tools_web-components_src_i18n_generated_zh_TW_js":1}[chunkId]) return "conversation_scripts/" + chunkId + ".js";
/******/ 			// return url for filenames based on template
/******/ 			return undefined;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get mini-css chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference all chunks
/******/ 		__webpack_require__.miniCssF = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "" + chunkId + ".css";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/load script */
/******/ 	(() => {
/******/ 		var inProgress = {};
/******/ 		var dataWebpackPrefix = "disciple-tools-conversations:";
/******/ 		// loadScript function to load a script via script tag
/******/ 		__webpack_require__.l = (url, done, key, chunkId) => {
/******/ 			if(inProgress[url]) { inProgress[url].push(done); return; }
/******/ 			var script, needAttach;
/******/ 			if(key !== undefined) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				for(var i = 0; i < scripts.length; i++) {
/******/ 					var s = scripts[i];
/******/ 					if(s.getAttribute("src") == url || s.getAttribute("data-webpack") == dataWebpackPrefix + key) { script = s; break; }
/******/ 				}
/******/ 			}
/******/ 			if(!script) {
/******/ 				needAttach = true;
/******/ 				script = document.createElement('script');
/******/ 		
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.setAttribute("data-webpack", dataWebpackPrefix + key);
/******/ 		
/******/ 				script.src = url;
/******/ 			}
/******/ 			inProgress[url] = [done];
/******/ 			var onScriptComplete = (prev, event) => {
/******/ 				// avoid mem leaks in IE.
/******/ 				script.onerror = script.onload = null;
/******/ 				clearTimeout(timeout);
/******/ 				var doneFns = inProgress[url];
/******/ 				delete inProgress[url];
/******/ 				script.parentNode && script.parentNode.removeChild(script);
/******/ 				doneFns && doneFns.forEach((fn) => (fn(event)));
/******/ 				if(prev) return prev(event);
/******/ 			}
/******/ 			var timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);
/******/ 			script.onerror = onScriptComplete.bind(null, script.onerror);
/******/ 			script.onload = onScriptComplete.bind(null, script.onload);
/******/ 			needAttach && document.head.appendChild(script);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		__webpack_require__.p = "/wp-content/plugins/disciple-tools-conversations/dist/";
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"/conversation_scripts": 0,
/******/ 			"styles": 0
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.f.j = (chunkId, promises) => {
/******/ 				// JSONP chunk loading for javascript
/******/ 				var installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;
/******/ 				if(installedChunkData !== 0) { // 0 means "already installed".
/******/ 		
/******/ 					// a Promise means "currently loading".
/******/ 					if(installedChunkData) {
/******/ 						promises.push(installedChunkData[2]);
/******/ 					} else {
/******/ 						if("styles" != chunkId) {
/******/ 							// setup Promise in chunk cache
/******/ 							var promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));
/******/ 							promises.push(installedChunkData[2] = promise);
/******/ 		
/******/ 							// start chunk loading
/******/ 							var url = __webpack_require__.p + __webpack_require__.u(chunkId);
/******/ 							// create error before stack unwound to get useful stacktrace later
/******/ 							var error = new Error();
/******/ 							var loadingEnded = (event) => {
/******/ 								if(__webpack_require__.o(installedChunks, chunkId)) {
/******/ 									installedChunkData = installedChunks[chunkId];
/******/ 									if(installedChunkData !== 0) installedChunks[chunkId] = undefined;
/******/ 									if(installedChunkData) {
/******/ 										var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 										var realSrc = event && event.target && event.target.src;
/******/ 										error.message = 'Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 										error.name = 'ChunkLoadError';
/******/ 										error.type = errorType;
/******/ 										error.request = realSrc;
/******/ 										installedChunkData[1](error);
/******/ 									}
/******/ 								}
/******/ 							};
/******/ 							__webpack_require__.l(url, loadingEnded, "chunk-" + chunkId, chunkId);
/******/ 						} else installedChunks[chunkId] = 0;
/******/ 					}
/******/ 				}
/******/ 		};
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkdisciple_tools_conversations"] = self["webpackChunkdisciple_tools_conversations"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	__webpack_require__.O(undefined, ["styles"], () => (__webpack_require__("./assets/js/conversation_scripts.js")))
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["styles"], () => (__webpack_require__("./assets/css/styles.css")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;